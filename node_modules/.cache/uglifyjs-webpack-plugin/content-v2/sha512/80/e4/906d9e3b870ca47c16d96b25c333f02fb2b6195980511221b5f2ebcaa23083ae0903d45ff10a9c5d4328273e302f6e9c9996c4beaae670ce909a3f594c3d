{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{179:function(t,e,s){\"use strict\";s.r(e);var n=s(0),i=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"div\",{staticClass:\"content\"},[t._m(0),t._v(\" \"),s(\"p\",[t._v(\"最近在使用element-ui框架，用到了Dialog对话框组件，大致实现的效果，跟我之前自己在移动端项目里面弄的一个弹窗组件差不太多。然后就想着把这种弹窗组件的实现方式与大家分享一下，下面本文会带着大家手摸手实现一个弹窗组件。\")]),t._v(\" \"),t._m(1),t._v(\" \"),s(\"hr\"),t._v(\" \"),t._m(2),t._v(\" \"),t._m(3),t._v(\" \"),t._m(4),t._v(\" \"),t._m(5),t._v(\" \"),s(\"hr\"),t._v(\" \"),t._m(6),t._v(\" \"),s(\"p\",[t._v(\"html结构：一层遮罩层，一层内容层，内容层里面又有一个头部title和主体内容和一个关闭按钮。\")]),t._v(\" \"),s(\"p\",[t._v(\"下面是组件中的html结构，里面有一些后面才要加进去的东西，如果看不懂的话可以先跳过，\")]),t._v(\" \"),t._m(7),t._v(\" \"),t._m(8),t._v(\" \"),t._m(9),t._v(\" \"),s(\"hr\"),t._v(\" \"),t._m(10),t._v(\" \"),t._m(11),t._v(\" \"),t._m(12),t._v(\" \"),t._m(13),t._v(\" \"),s(\"p\",[t._v(\"上面是单个插槽也叫默认插槽，在父组件中使用插槽的正确姿势：\")]),t._v(\" \"),t._m(14),t._v(\" \"),t._m(15),t._v(\" \"),t._m(16),t._v(\" \"),t._m(17),t._v(\" \"),t._m(18),t._v(\" \"),s(\"p\",[t._v(\"在父组件中的使用方式：\")]),t._v(\" \"),t._m(19),t._v(\" \"),s(\"p\",[t._v(\"关于组件中用到的插槽的介绍就到这里了，插槽在弹窗组件中的应用是一个典型的栗子，可以看到插槽作用相当强大，而插槽本身的使用并不难，同学们爱上插槽了没有？\")]),t._v(\" \"),s(\"hr\"),t._v(\" \"),t._m(20),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"psops\")]),t._v(\"是Vue中父组件向子组件传递数据的一种方式，不熟悉的小伙伴们可以看一下\"),s(\"a\",{attrs:{href:\"https://cn.vuejs.org/v2/guide/components.html#Prop\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"props文档\"),s(\"OutboundLink\")],1),t._v(\"。\")]),t._v(\" \"),s(\"p\",[t._v(\"因为弹窗组件都是引到别的组件里面去用的，为了适合不同组件场景中的弹窗，所以弹窗组件必须具备一定的可定制性，否则这样的组件将毫无意义,下面介绍一下props的使用方式，以弹窗组件为例：\")]),t._v(\" \"),t._m(21),t._v(\" \"),s(\"p\",[t._v(\"父组件中使用方式：\")]),t._v(\" \"),t._m(22),t._v(\" \"),t._m(23),t._v(\" \"),s(\"p\",[t._v(\"现在基本上弹窗组件都已实现的差不多了，还差一个弹窗的关闭事件，这里就涉及到子组件往父组件传参了。\")]),t._v(\" \"),t._m(24),t._v(\" \"),t._m(25),t._v(\" \"),s(\"p\",[t._v(\"在子组件中，在点击关闭，或者遮罩层的时候触发下面这个方法：\")]),t._v(\" \"),t._m(26),t._v(\" \"),s(\"p\",[t._v(\"父组件中的写法：\")]),t._v(\" \"),t._m(27),t._v(\" \"),s(\"hr\"),t._v(\" \"),s(\"p\",[t._v(\"可以用弹窗组件实现下列这种信息展示，或者事件交互：\")]),t._v(\" \"),t._m(28),t._v(\" \"),s(\"h3\",{attrs:{id:\"弹窗组件代码\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#弹窗组件代码\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" \"),s(\"a\",{attrs:{href:\"https://github.com/OBKoro1/web_accumulate/blob/d6b599ca22d8656d3f31f80bffa976fac36d2d75/example/dialogComponent.vue\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"弹窗组件代码\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"p\",[t._v(\"上面是把弹窗的每个步骤拆分开来，一步步解析的，每一步都说的比较清楚了，具体连起来的话，可以看看\"),s(\"a\",{attrs:{href:\"https://github.com/OBKoro1/web_accumulate/blob/d6b599ca22d8656d3f31f80bffa976fac36d2d75/example/dialogComponent.vue\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"代码\"),s(\"OutboundLink\")],1),t._v(\"，再结合文章就能理的很清楚了。\")]),t._v(\" \"),t._m(29),t._v(\" \"),s(\"p\",[t._v(\"这个弹窗组件，实现起来一点都不难，我这里主要是提供了一个实现方式，当项目中有需要的话，大家也可以自己撸一个出来，以上就是本文的内容了，希望同学们看完能有所收获。\")]),t._v(\" \"),s(\"p\",[t._v(\"以上2018.4.21\")]),t._v(\" \"),t._m(30),t._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://cn.vuejs.org/v2/guide/components.html#%E4%BD%BF%E7%94%A8%E6%8F%92%E6%A7%BD%E5%88%86%E5%8F%91%E5%86%85%E5%AE%B9\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Vue文档-插槽\"),s(\"OutboundLink\")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"简单的弹窗组件实现\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#简单的弹窗组件实现\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 简单的弹窗组件实现\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"本文主要内容会涉及到弹窗遮罩的实现，\"),e(\"code\",[this._v(\"slot\")]),this._v(\"插槽的使用方式，\"),e(\"code\",[this._v(\"props\")]),this._v(\"、\"),e(\"code\",[this._v(\"$emit\")]),this._v(\"传参，具体组件代码也传上去了。如果喜欢的话可以点波赞/关注，支持一下，希望大家看完本文可以有所收获。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"组件最后实现的效果\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件最后实现的效果\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 组件最后实现的效果\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/4/21/162e6f9251c7c18f?w=650&h=1141&f=png&s=374719\",alt:\"\"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"实现步骤\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实现步骤\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 实现步骤\")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"ol\",[s(\"li\",[t._v(\"先搭建组件的html和css样式，遮罩层和内容层。\")]),t._v(\" \"),s(\"li\",[t._v(\"定制弹窗内容：弹窗组件通过\"),s(\"code\",[t._v(\"slot\")]),t._v(\"插槽接受从父组件那里传过来弹窗内容。\")]),t._v(\" \"),s(\"li\",[t._v(\"定制弹窗样式：弹窗组件通过\"),s(\"code\",[t._v(\"props\")]),t._v(\"接收从父组件传过来的弹窗宽度，上下左右的位置。\")]),t._v(\" \"),s(\"li\",[t._v(\"组件开关：通过父组件传进来的\"),s(\"code\",[t._v(\"props\")]),t._v(\"控制组件的显示与隐藏，子组件关闭时通过事件\"),s(\"code\",[t._v(\"$emit\")]),t._v(\"触发父组件改变值。\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"_1-搭建组件的html和css样式。\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-搭建组件的html和css样式。\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 1.搭建组件的html和css样式。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"pre\",[e(\"code\",[this._v(' <template>\\n  <div class=\"dialog\">\\n      \\x3c!--外层的遮罩 点击事件用来关闭弹窗，isShow控制弹窗显示 隐藏的props--\\x3e\\n      <div class=\"dialog-cover back\"  v-if=\"isShow\"  @click=\"closeMyself\"></div>\\n      \\x3c!-- transition 这里可以加一些简单的动画效果 --\\x3e\\n      <transition name=\"drop\">\\n         \\x3c!--style 通过props 控制内容的样式  --\\x3e\\n        <div class=\"dialog-content\" :style=\"{top:topDistance+\\'%\\',width:widNum+\\'%\\',left:leftSite+\\'%\\'}\"  v-if=\"isShow\">\\n          <div class=\"dialog_head back\">\\n             \\x3c!--弹窗头部 title--\\x3e\\n              <slot name=\"header\">提示信息</slot>\\n          </div>\\n          <div class=\"dialog_main\" :style=\"{paddingTop:pdt+\\'px\\',paddingBottom:pdb+\\'px\\'}\">\\n            \\x3c!--弹窗的内容--\\x3e\\n            <slot name=\"main\">弹窗内容</slot>\\n          </div>\\n          \\x3c!--弹窗关闭按钮--\\x3e\\n          <div  class=\"foot_close\" @click=\"closeMyself\">\\n              <div class=\"close_img back\"></div>\\n          </div>\\n        </div>\\n    </transition>\\n  </div>\\n</template> \\n')])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"下面是组件中的主要的css样式，里面都做了充分的注释，主要通过\"),e(\"code\",[this._v(\"z-index\")]),this._v(\"和\"),e(\"code\",[this._v(\"background\")]),this._v(\"达到遮罩的效果，具体内容的css可以根据自己的需求来设置。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"pre\",[e(\"code\",[this._v('<style lang=\"scss\" scoped>\\n // 最外层 设置position定位 \\n  .dialog {\\n    position: relative;\\n    color: #2e2c2d;\\n    font-size: 16px;\\n  }\\n  // 遮罩 设置背景层，z-index值要足够大确保能覆盖，高度 宽度设置满 做到全屏遮罩\\n  .dialog-cover {\\n    background: rgba(0,0,0, 0.8);\\n    position: fixed;\\n    z-index: 200;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n  }\\n  // 内容层 z-index要比遮罩大，否则会被遮盖，\\n  .dialog-content{\\n    position: fixed;\\n    top: 35%;\\n    // 移动端使用felx布局 \\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    z-index: 300;\\n }\\n</style>\\n')])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"_2-通过slot定制弹窗内容\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-通过slot定制弹窗内容\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 2. 通过\"),e(\"code\",[this._v(\"slot\")]),this._v(\"定制弹窗内容\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"这一步，只要理解了\"),e(\"code\",[this._v(\"slot\")]),this._v(\"的作用以及用法，就没有问题了。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"单个插槽：\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#单个插槽：\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 单个插槽：\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"pre\",[e(\"code\",[this._v(\"    <slot>这是在没有slot传进来的时候，才显示的弹窗内容</slot>\\n\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"pre\",[e(\"code\",[this._v(\"   <my-component>\\n   \\x3c!--在my-component里面的所有内容片段都将插入到slot所在的DOM位置，并且会替换掉slot标签--\\x3e\\n   \\x3c!--这两个p标签，将替换整个slot标签里面的内容--\\x3e\\n    <p>这是一些初始内容</p>\\n    <p>这是更多的初始内容</p>\\n  </my-component>\\n\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"ps:如果子组件里面包含\"),e(\"code\",[this._v(\"slot\")]),this._v(\"插槽，那么上面的p标签的内容将会被丢弃。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"具名插槽：\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#具名插槽：\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 具名插槽：\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"所谓的具名插槽，即为\"),e(\"code\",[this._v(\"slot\")]),this._v(\"标签赋一个\"),e(\"code\",[this._v(\"name\")]),this._v(\"属性，具名插槽可以父组件中不同的内容片段放到子组件的不同地方，具名插槽还是可以拥有一个默认插槽。下面可以看一下弹窗组件插槽的使用方式：\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"pre\",[e(\"code\",[this._v('<div class=\"dialog_head back \">\\n  \\x3c!--弹窗头部 title--\\x3e\\n  <slot name=\"header\">提示信息</slot>\\n </div>\\n <div class=\"dialog_main \" :style=\"{paddingTop:pdt+\\'px\\',paddingBottom:pdb+\\'px\\'}\">\\n    \\x3c!--弹窗的内容--\\x3e\\n    <slot name=\"main\">弹窗内容</slot>\\n </div>\\n')])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"ol\",[e(\"li\",[e(\"p\",[this._v(\"将弹窗组件引入要使用的组件中，并通过\"),e(\"code\",[this._v(\"components\")]),this._v(\"注册成为组件。\")])]),this._v(\" \"),e(\"li\",[e(\"p\",[this._v(\"父组件中弹窗组件插槽的使用方法如下。\")]),this._v(\" \"),e(\"pre\",[e(\"code\",[this._v(' <dialogComponent>\\n \\n     <div slot=\"header\">插入到name为header的slot标签里面</div>\\n      <div class=\"dialog_publish_main\" slot=\"main\">\\n         这里是内容插入到子组件的slot的name为main里面，可以在父组件中添加class定义样式，事件类型等各种操作\\n      </div>\\n </dialogComponent>\\n')])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"_3-通过props控制弹窗显隐-定制弹窗style\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-通过props控制弹窗显隐-定制弹窗style\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 3.通过\"),e(\"code\",[this._v(\"props\")]),this._v(\"控制弹窗显隐&&定制弹窗style\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"ol\",[e(\"li\",[e(\"p\",[this._v(\"首先需要在被传入的组件中定义props的一些特性，验证之类的。\")])]),this._v(\" \"),e(\"li\",[e(\"p\",[this._v(\"然后在父组件中绑定props数据。\")]),this._v(\" \"),e(\"pre\",[e(\"code\",[this._v(\" <script>\\nexport default {\\n  props: {\\n    isShow: { \\n    //弹窗组件是否显示 默认不显示\\n      type: Boolean,\\n      default: false,\\n      required:true, //必须\\n    },\\n    //下面这些属性会绑定到div上面 详情参照上面的html结构\\n    // 如： :style=\\\"{top:topDistance+'%',width:widNum+'%'}\\\"\\n    widNum:{ \\n    //内容宽度\\n      type: Number,\\n      default:86.5\\n    },\\n    leftSite:{\\n      // 左定位\\n      type: Number,\\n      default:6.5\\n    },\\n    topDistance: {\\n        //top上边距\\n      type: Number,\\n      default:35\\n    },\\n    pdt:{\\n      //上padding\\n      type: Number,\\n      default:22\\n    },\\n    pdb:{\\n      //下padding\\n      type: Number,\\n      default:47\\n    }\\n  },\\n}\\n<\\/script>\\n\")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"pre\",[e(\"code\",[this._v(' <dialogComponent :is-show=\"status.isShowPublish\" :top-distance=\"status.topNum\">\\n </dialogComponent>\\n')])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"ps：props传递数据不是双向绑定的，而是\"),e(\"strong\",[this._v(\"单向数据流\")]),this._v(\"，父组件的数据变化时，也会传递到子组件中，这就意外着我们不应该在子组件中修改props。所以我们在关闭弹窗的时候就\"),e(\"strong\",[this._v(\"需要通过\"),e(\"code\",[this._v(\"$emit\")]),this._v(\"来修改父组件的数据\")]),this._v(\"，然后数据会自动传到子组件中。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"_4-emit触发父组件事件修改数据，关闭弹窗\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-emit触发父组件事件修改数据，关闭弹窗\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 4.\"),e(\"code\",[this._v(\"$emit\")]),this._v(\"触发父组件事件修改数据，关闭弹窗\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[this._v(\"Vue中在子组件往父组件传参，很多都是通过\"),e(\"code\",[this._v(\"$emit\")]),this._v(\"来触发父组件的事件来修改数据。\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"pre\",[e(\"code\",[this._v('methods: {\\n    closeMyself() {\\n      this.$emit(\"on-close\"); \\n      //如果需要传参的话，可以在\"on-close\"后面再加参数，然后在父组件的函数里接收就可以了。\\n    }\\n  } \\n')])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"pre\",[e(\"code\",[this._v('  <dialogComponent :is-show=\"status.isShowPublish\" :top-distance=\"status.topNum\"  @on-close=\"closeDialog\"> \\n  </dialogComponent>\\n  //\"on-close是监听子组件的时间有没有触发，触发的时候执行closeDialog函数\\nmethods:{\\n  closeDialog(){\\n    // this.status.isShowPublish=false;\\n    //把绑定的弹窗数组 设为false即可关闭弹窗\\n  },\\n}\\n')])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/4/21/162e7a7af2e0effa?w=402&h=728&f=png&s=140506\",alt:\"\"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"小结：\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结：\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 小结：\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"参考资料：\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考资料：\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 参考资料：\")])}],!1,null,null,null);i.options.__file=\"弹窗.md\";e.default=i.exports}}]);","extractedComments":[]}