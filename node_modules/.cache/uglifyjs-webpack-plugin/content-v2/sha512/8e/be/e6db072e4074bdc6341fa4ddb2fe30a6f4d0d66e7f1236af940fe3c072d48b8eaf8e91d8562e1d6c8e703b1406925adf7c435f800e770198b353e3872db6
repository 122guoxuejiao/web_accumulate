{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{193:function(s,t,a){\"use strict\";a.r(t);var n=a(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"div\",{staticClass:\"content\"},[a(\"h2\",{attrs:{id:\"最大子数组\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#最大子数组\",\"aria-hidden\":\"true\"}},[s._v(\"#\")]),s._v(\" 最大子数组\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"难度：简单\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#难度：简单\",\"aria-hidden\":\"true\"}},[s._v(\"#\")]),s._v(\" 难度：简单\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"描述：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#描述：\",\"aria-hidden\":\"true\"}},[s._v(\"#\")]),s._v(\" 描述：\")]),s._v(\" \"),a(\"p\",[s._v(\"给定一个整数数组，找到一个具有最大和的子数组，返回其最大和。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"样例：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#样例：\",\"aria-hidden\":\"true\"}},[s._v(\"#\")]),s._v(\" 样例：\")]),s._v(\" \"),a(\"p\",[s._v(\"给出数组[−2,2,−3,4,−1,2,1,−5,3]，符合要求的子数组为[4,−1,2,1]，其最大和为 6\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"思路分析：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#思路分析：\",\"aria-hidden\":\"true\"}},[s._v(\"#\")]),s._v(\" 思路分析：\")]),s._v(\" \"),a(\"p\",[s._v(\"本题只要找出最大和即可，保存两个值，一个为元素之间相加的值(需比较元素相加的值与当前元素的大小)，一个为最大值。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"代码：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码：\",\"aria-hidden\":\"true\"}},[s._v(\"#\")]),s._v(\" 代码：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"/**\\n * @param nums: A list of integers\\n * @return: A integer indicate the sum of max subarray\\n */\")]),s._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token function-variable function\"}},[s._v(\"maxSubArray\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" max \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 初始化最大值\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" newMax \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 数组元素相加的缓存值\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" i \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" i \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" i\"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    newMax \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" Math\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[s._v(\"max\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"newMax \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"i\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"i\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 相加是否大于当前值\")]),s._v(\"\\n    max \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" Math\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[s._v(\"max\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" max\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 与最大值相比\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" max\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\")])]),a(\"p\",[s._v(\"第二种方法更难理解点，可以扩展一下思路：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"/**\\n * @param nums: A list of integers\\n * @return: A integer indicate the sum of max subarray\\n */\")]),s._v(\"\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token function-variable function\"}},[s._v(\"maxSubArray\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" nSum \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 数组元素相加的缓存值\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" nMax \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" nSum\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 初始化最大值\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" i \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" i \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" i\"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" curNum \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"i\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 当前元素\")]),s._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"curNum \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\">=\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" nSum \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" nSum \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"?\")]),s._v(\" nSum \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" curNum \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" curNum\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 如果两个值都大于0 两个值相加。否则就取后一个大于0的\")]),s._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" nSum \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" nSum \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" curNum \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"?\")]),s._v(\" curNum \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" nSum \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" curNum\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 如果新加的值小于0 判断结果是否大于新加的值 小于的话就改为新加的值\")]),s._v(\"\\n    nMax \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" Math\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[s._v(\"max\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"nMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" nSum\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 最大值与数组元素相加值比较\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" nMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\")])]),a(\"h3\",{attrs:{id:\"最大和的数组：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#最大和的数组：\",\"aria-hidden\":\"true\"}},[s._v(\"#\")]),s._v(\" 最大和的数组：\")]),s._v(\" \"),a(\"p\",[s._v(\"如果你想把最大和的数组都找出来，你需要保存数组的开始下标和结束下标，这里我演示了第一个方法，下面那个方法也是一样：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token function-variable function\"}},[s._v(\"maxSubArray\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" max \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    num\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    start\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    end\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 结束的下标 后面要切割数组 需比当前下标+1.把当前值也切割\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" newMax \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    num\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    start\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    end\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" i \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" i \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" i\"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"num \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"i\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"i\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 相加大于当前值 缓存改值和结束下标\")]),s._v(\"\\n      newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"num \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"num \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"i\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"end \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" i \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 小于当前值 重置start end\")]),s._v(\"\\n      newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"num \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"i\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"start \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" i\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"end \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" i \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 最大值被超过 把值赋给最大值\")]),s._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"max\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"num \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"num\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      max\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"num \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"num\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      max\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"start \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"start\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      max\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"end \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" newMax\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"end\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" arr \"),a(\"span\",{attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" nums\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[s._v(\"slice\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"max\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"start\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" max\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"end\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 找出最大和的子数组\")]),s._v(\"\\n  \"),a(\"span\",{attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" max\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"num\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),a(\"span\",{attrs:{class:\"token comment\"}},[s._v(\"// 子数组的最大和\")]),s._v(\"\\n\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),a(\"br\")])])])}],!1,null,null,null);r.options.__file=\"最大子数组.md\";t.default=r.exports}}]);","extractedComments":[]}