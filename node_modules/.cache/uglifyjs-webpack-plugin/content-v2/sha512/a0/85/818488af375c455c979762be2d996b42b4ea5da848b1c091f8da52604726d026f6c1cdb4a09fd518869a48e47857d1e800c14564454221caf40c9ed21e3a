{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{166:function(e,t,n){\"use strict\";n.r(t);var s=n(0),a=Object(s.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"div\",{staticClass:\"content\"},[e._m(0),e._v(\" \"),e._m(1),e._v(\" \"),n(\"h3\",{attrs:{id:\"demo：推箱子小游戏\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#demo：推箱子小游戏\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" demo：\"),n(\"a\",{attrs:{href:\"http://obkoro1.com/web_accumulate/example/pushKoro/index.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"推箱子小游戏\"),n(\"OutboundLink\")],1)]),e._v(\" \"),e._m(2),e._v(\" \"),n(\"p\",[n(\"strong\",[e._v(\"本文代码已经放在了\"),n(\"a\",{attrs:{href:\"https://github.com/OBKoro1/web_accumulate/blob/d6b599ca22d8656d3f31f80bffa976fac36d2d75/example/pushKoro/index.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"github\"),n(\"OutboundLink\")],1),e._v(\"上面了,里面也进行了很详细的代码注释，可以copy下来，在本地运行一下看看\")]),e._v(\"。\")]),e._v(\" \"),e._m(3),e._v(\" \"),e._m(4),e._v(\" \"),e._m(5),e._v(\" \"),n(\"p\",[e._v(\"使用\"),n(\"a\",{attrs:{href:\"http://www.w3school.com.cn/jquery/event_keydown.asp\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"$(document).keydown()\"),n(\"OutboundLink\")],1),e._v(\"jqery事件，捕获键盘事件。\")]),e._v(\" \"),e._m(6),e._v(\" \"),n(\"p\",[e._v(\"分为两个判断条件：一个是推箱子，一个是不推箱子 自然移动，否则不移动皮卡丘。\")]),e._v(\" \"),e._m(7),e._v(\" \"),e._m(8),e._v(\" \"),n(\"p\",[e._v(\"每次移动都要调用这个胜利判断。\")]),e._v(\" \"),e._m(9),e._v(\" \"),n(\"h3\",{attrs:{id:\"代码地址、demo地址\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码地址、demo地址\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" \"),n(\"a\",{attrs:{href:\"https://github.com/OBKoro1/web_accumulate/blob/d6b599ca22d8656d3f31f80bffa976fac36d2d75/example/pushKoro/index.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"代码地址\"),n(\"OutboundLink\")],1),e._v(\"、\"),n(\"a\",{attrs:{href:\"http://obkoro1.com/web_accumulate/example/pushKoro/index.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"demo地址\"),n(\"OutboundLink\")],1)]),e._v(\" \"),n(\"p\",[e._v(\"以上2018.1.7\")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t(\"h2\",{attrs:{id:\"推箱子\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#推箱子\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 推箱子\")])},function(){var e=this.$createElement,t=this._self._c||e;return t(\"p\",[t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/1/7/160d0a90689f2101?imageView2/1/w/1304/h/734/q/85/format/webp/interlace/1\",alt:\"demo图片\"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t(\"h2\",{attrs:{id:\"步骤解析：\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤解析：\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 步骤解析：\")])},function(){var e=this.$createElement,t=this._self._c||e;return t(\"h3\",{attrs:{id:\"_1-渲染地图\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-渲染地图\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 1. 渲染地图\")])},function(){var e=this.$createElement,t=this._self._c||e;return t(\"ol\",[t(\"li\",[t(\"p\",[this._v(\"html结构：\\n\"),t(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/1/7/160d1149856a3714?w=503&h=727&f=png&s=48024\",alt:\"\"}})]),this._v(\" \"),t(\"pre\",[t(\"code\",[this._v(\" html结构十分简单，只要弄一堆div，来放置地图的class就可以了，我这里初始化了12*9个div，地图里最多九行高度。   \\n 这些div都是同样大小，地图渲染出来区别的只是颜色的不同。\\n\")])])]),this._v(\" \"),t(\"li\",[t(\"p\",[this._v(\"地图函数：\")]),this._v(\" \"),t(\"pre\",[t(\"code\",[this._v(\"var box=$('.box div'); //地图使用的div集合\\nfunction create(){ //创建地图函数\\nbox.each(function(index){ //index的数量是固定的，是box div下面div的数量\\n     // 每次创建地图初始化div\\n    box.eq(index).removeClass();\\n});\\nbox.each(function(index,element){ //循环整个div的数量 二维数组里数量不够的 默认为空白\\n//level为关卡数 根据关卡渲染地图 builder为二维数组，为地图关卡\\n    if(builder[level][index]){ //过滤0\\n        box.eq(index).addClass('type'+builder[level][index]);\\n    }\\n});\\nbox.eq(origin[level]).addClass(\\\"pusher\\\"); //推箱人 皮卡丘位置\\n}\\n\\n//第一关的地图长这样（下面只是栗子，不是代码），0代表不可抵达区域，1代表目标（要被推到的地方），\\n//2代表普通路径（可以走的），3代表墙，4代表箱子\\n[0,0,0,0,3,3,3,0,0,0,0,0,\\n0,0,0,0,3,1,3,0,0,0,0,0,\\n0,0,0,0,3,2,3,3,3,3,0,0,\\n0,0,3,3,3,4,2,4,1,3,0,0,\\n0,0,3,1,2,4,2,3,3,3,0,0,\\n0,0,3,3,3,3,4,3,0,0,0,0,\\n0,0,0,0,0,3,1,3,0,0,0,0,\\n0,0,0,0,0,3,3,3,0,0,0,0] \\n\")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t(\"h3\",{attrs:{id:\"_2-捕获键盘事件-判断是否可以移动\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-捕获键盘事件-判断是否可以移动\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 2. 捕获键盘事件,判断是否可以移动\")])},function(){var e=this.$createElement,t=this._self._c||e;return t(\"ol\",[t(\"li\",[t(\"p\",[this._v(\"捕获键盘事件，上下左右以及wsad。\")]),this._v(\" \"),t(\"pre\",[t(\"code\",[this._v(\"$(document).keydown(function (e) {\\n var key=e.which;\\n switch(key){\\n //col 的值为12，上下移动要12个div为一个周期\\n //方向键上或者w\\n case 87:\\n case 38:\\n     move(-col);//判断移动函数\\n break;\\n //方向键下或者s\\n case 83:\\n case 40:\\n    move(col);\\n break;\\n //方向键左或者a\\n case 65:\\n case 37:\\n     move(-1);\\n break;\\n //方向键右或者d\\n case 68:\\n case 39:\\n     move(1);\\n break;\\n }\\nsetTimeout(win,500); //按键之后调判断是否过关\\n});\\n\")])])]),this._v(\" \"),t(\"li\",[t(\"p\",[this._v(\"判断是否可以移动。\")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t(\"pre\",[t(\"code\",[this._v(\"    function move(step){ //是否移动判断\\n         // 分为两个判断条件一个是推箱子，一个是不推箱子 自然移动。 否则不移动皮卡丘\\n         //step 上下是12个div一个周期，左右是1个div positin是皮卡丘的原来位置\\n        var pikaqiu1=box.eq(position);//皮卡丘现在的地方\\n        var pikaqiu2=box.eq(position+step);//皮卡丘要去的下一个地方\\n        var pushBox=box.eq(position+step*2);//箱子要去的下一个地方\\n        if(!pikaqiu2.hasClass('type4')&&( pikaqiu2.hasClass('type1')||pikaqiu2.hasClass('type2'))){ //自然移动\\n            //判断：如果下一个div的class不包含type4(箱子)，并且 下一个div含有type1(目标位置)，或者type2(普通路径)\\n            //这一步和下一步判断是否有type4的原因是普通路径会变成有type4的路径，这时候就会出现问题\\n            pikaqiu1.removeClass(\\\"pusher\\\"); //移除当前皮卡丘\\n            pikaqiu2.addClass(\\\"pusher\\\");//移动皮卡丘到下一个位置\\n            position=position+step;//增加position值\\n        }\\n        else if((pikaqiu2.hasClass('type4'))&&(!pushBox.hasClass('type4'))&&(pushBox.hasClass('type1')|| pushBox.hasClass('type2')) ) {\\n            //推箱子    \\n            //如果下一个div的class包含type4(箱子)并且 不包含重叠type4(箱子) 并且 包含class type1（目标位置）或者 包含type2(空路)\\n           pikaqiu2.removeClass('type4');//移除当前箱子\\n            pikaqiu1.removeClass(\\\"pusher\\\");//移除当前皮卡丘\\n            pushBox.addClass('type4');//移动箱子到下一个位置\\n            pikaqiu2.addClass(\\\"pusher\\\").addClass(\\\"type2\\\");//\\n            //本来是type4 移除之后，这里没有class了，要变成普通路径\\n            position=position+step;//增加position值 \\n        }\\n    }    \\n\")])])},function(){var e=this.$createElement,t=this._self._c||e;return t(\"h3\",{attrs:{id:\"_3-胜利判断：\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-胜利判断：\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 3.胜利判断：\")])},function(){var e=this.$createElement,t=this._self._c||e;return t(\"pre\",[t(\"code\",[this._v('function win(){ //胜利条件判断\\n    if($(\".type1.type4\").length===goal){ //推的箱子与关卡设置通过箱子的数量对比\\n        if(level<9) {\\n            alert(\"666，挑战下一关吧--OBKoro1\");\\n            level++; //关卡+1\\n            goal = goalList[level];\\n            position = origin[level];\\n            create();\\n        }else {\\n            alert(\"厉害啊 大佬 通关了都\");\\n        }\\n    }\\n}\\n')])])}],!1,null,null,null);a.options.__file=\"推箱子.md\";t.default=a.exports}}]);","extractedComments":[]}