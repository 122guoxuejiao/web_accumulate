export const siteData = {
  "title": "OBKoro1前端积累",
  "description": "种一棵树最好的时间是十年前，其次就是现在。",
  "base": "/web_accumulate/",
  "pages": [
    {
      "key": "v-dada7e600cd3d",
      "path": "/",
      "lastUpdated": 1561349297000,
      "title": "Home",
      "headers": [
        {
          "level": 3,
          "title": "其他：",
          "slug": "其他："
        }
      ],
      "frontmatter": {
        "home": true,
        "heroImage": "/logo.jpg",
        "actionText": "开始阅读 →",
        "actionLink": "/accumulate/",
        "features": [
          {
            "title": "积累",
            "details": "平时的一些积累，一些上手即用的东西/知识点等内容，范围较广。"
          },
          {
            "title": "算法",
            "details": "刷算法题，是提升编程能力和逻辑能力比较有效的一种方式。文档将算法按照难度分级，代码中都有详细注释，且会提供多种解法。"
          },
          {
            "title": "持续更新",
            "details": "本文档将会持续更新，就像我的博客一样，当做一个长期项目来维护，期望这个文档在不久以后能够给大家带来帮助。"
          }
        ],
        "footer": "MIT Licensed | Copyright © 2018-present OBKoro1"
      }
    },
    {
      "key": "v-fcbc3d68facc6",
      "path": "/accumulate/CSS/CSS%E6%9D%83%E9%87%8D%E8%A7%84%E5%88%99.html",
      "lastUpdated": 1540382851000,
      "title": "CSS 权重规则",
      "headers": [
        {
          "level": 2,
          "title": "CSS 权重规则",
          "slug": "css-权重规则"
        },
        {
          "level": 2,
          "title": "权重规则总结:",
          "slug": "权重规则总结"
        },
        {
          "level": 3,
          "title": "css 权重优先级用来干嘛？",
          "slug": "css-权重优先级用来干嘛？"
        },
        {
          "level": 3,
          "title": "权重的五个等级及其权重",
          "slug": "权重的五个等级及其权重"
        },
        {
          "level": 3,
          "title": "等级关系:",
          "slug": "等级关系"
        },
        {
          "level": 2,
          "title": "权重规则：",
          "slug": "权重规则："
        },
        {
          "level": 3,
          "title": "1.不推荐使用!important",
          "slug": "_1-不推荐使用-important"
        },
        {
          "level": 3,
          "title": "2.行内样式总会覆盖外部样式表的任何样式,会被!important覆盖",
          "slug": "_2-行内样式总会覆盖外部样式表的任何样式-会被-important覆盖"
        },
        {
          "level": 3,
          "title": "3.单独使用一个选择器的时候，不能跨等级使 css 规则生效",
          "slug": "_3-单独使用一个选择器的时候，不能跨等级使-css-规则生效"
        },
        {
          "level": 3,
          "title": "4.如果两个权重不同的选择器作用在同一元素上，权重值高的 css 规则生效",
          "slug": "_4-如果两个权重不同的选择器作用在同一元素上，权重值高的-css-规则生效"
        },
        {
          "level": 3,
          "title": "5.如果两个相同权重的选择器作用在同一元素上：以后面出现的选择器为最后规则.",
          "slug": "_5-如果两个相同权重的选择器作用在同一元素上：以后面出现的选择器为最后规则"
        },
        {
          "level": 3,
          "title": "6.权重相同时，与元素距离近的选择器生效",
          "slug": "_6-权重相同时，与元素距离近的选择器生效"
        },
        {
          "level": 2,
          "title": "建议：",
          "slug": "建议："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-b08fe2d84f0ab",
      "path": "/accumulate/CSS/CSS%E6%A6%82%E5%BF%B5-BFC%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA.html",
      "lastUpdated": 1537113645000,
      "title": "CSS 概念-BFC 深入浅出",
      "headers": [
        {
          "level": 3,
          "title": "CSS 概念-BFC 深入浅出",
          "slug": "css-概念-bfc-深入浅出"
        },
        {
          "level": 2,
          "title": "BFC 是什么鬼？",
          "slug": "bfc-是什么鬼？"
        },
        {
          "level": 3,
          "title": "关于 BFC 的定义：",
          "slug": "关于-bfc-的定义："
        },
        {
          "level": 3,
          "title": "通俗的说:",
          "slug": "通俗的说"
        },
        {
          "level": 3,
          "title": "触发条件",
          "slug": "触发条件"
        },
        {
          "level": 3,
          "title": "BFC 布局规则：",
          "slug": "bfc-布局规则："
        },
        {
          "level": 3,
          "title": "BFC 有哪些作用：",
          "slug": "bfc-有哪些作用："
        },
        {
          "level": 2,
          "title": "BFC 的规则和作用介绍:",
          "slug": "bfc-的规则和作用介绍"
        },
        {
          "level": 3,
          "title": "BFC 与 Layout",
          "slug": "bfc-与-layout"
        },
        {
          "level": 3,
          "title": "有趣的文本:",
          "slug": "有趣的文本"
        }
      ]
    },
    {
      "key": "v-0d796d46bf866",
      "path": "/accumulate/CSS/%E5%8D%95%E8%A1%8C%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA.html",
      "lastUpdated": 1561349297000,
      "title": "单行、多行文本溢出",
      "headers": [
        {
          "level": 2,
          "title": "单行、多行文本溢出",
          "slug": "单行、多行文本溢出"
        },
        {
          "level": 3,
          "title": "codepen",
          "slug": "codepen"
        },
        {
          "level": 3,
          "title": "代码",
          "slug": "代码"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-372e05cf9daf3",
      "path": "/accumulate/ES6/",
      "lastUpdated": 1545892833000,
      "title": "ES6",
      "headers": [
        {
          "level": 2,
          "title": "ES6",
          "slug": "es6"
        }
      ]
    },
    {
      "key": "v-ead89389ca3aa",
      "path": "/accumulate/ES6/js%E8%B0%83%E7%94%A8%E6%A0%88%E6%9C%BA%E5%88%B6%E4%B8%8EES6%E5%B0%BE%E8%B0%83%E7%94%A8%E4%BC%98%E5%8C%96%E4%BB%8B%E7%BB%8D.html",
      "lastUpdated": 1561349297000,
      "title": "js 调用栈机制与ES6尾调用优化介绍",
      "headers": [
        {
          "level": 2,
          "title": "js 调用栈机制与ES6尾调用优化介绍",
          "slug": "js-调用栈机制与es6尾调用优化介绍"
        },
        {
          "level": 3,
          "title": "目录",
          "slug": "目录"
        },
        {
          "level": 3,
          "title": "数据结构：栈",
          "slug": "数据结构：栈"
        },
        {
          "level": 3,
          "title": "调用栈是什么？用来做什么？",
          "slug": "调用栈是什么？用来做什么？"
        },
        {
          "level": 3,
          "title": "调用栈优化内存",
          "slug": "调用栈优化内存"
        },
        {
          "level": 3,
          "title": "调用栈debug大法",
          "slug": "调用栈debug大法"
        },
        {
          "level": 2,
          "title": "结语",
          "slug": "结语"
        },
        {
          "level": 3,
          "title": "支持一下：",
          "slug": "支持一下："
        }
      ]
    },
    {
      "key": "v-bbd4580d47521",
      "path": "/accumulate/ES6/let%E5%92%8Cconst%E5%91%BD%E4%BB%A4.html",
      "lastUpdated": 1561349297000,
      "title": "var和let/const的区别",
      "headers": [
        {
          "level": 2,
          "title": "内容：",
          "slug": "内容："
        },
        {
          "level": 3,
          "title": "为什么需要块级作用域?",
          "slug": "为什么需要块级作用域"
        },
        {
          "level": 3,
          "title": "块级作用域",
          "slug": "块级作用域"
        },
        {
          "level": 3,
          "title": "块级作用域声明函数：",
          "slug": "块级作用域声明函数："
        },
        {
          "level": 3,
          "title": "不存在变量提升",
          "slug": "不存在变量提升"
        },
        {
          "level": 3,
          "title": "暂时性死区：",
          "slug": "暂时性死区："
        },
        {
          "level": 3,
          "title": "不允许重复声明变量",
          "slug": "不允许重复声明变量"
        },
        {
          "level": 3,
          "title": "let、const声明的\b全局变量不会挂在顶层对象下面",
          "slug": "let、const声明的全局变量不会挂在顶层对象下面"
        },
        {
          "level": 2,
          "title": "const命令",
          "slug": "const命令"
        },
        {
          "level": 2,
          "title": "总结:",
          "slug": "总结"
        },
        {
          "level": 3,
          "title": "var和let/const的区别:",
          "slug": "var和let-const的区别-2"
        },
        {
          "level": 3,
          "title": "const命令两个注意点:",
          "slug": "const命令两个注意点"
        },
        {
          "level": 3,
          "title": "let、const使用场景:",
          "slug": "let、const使用场景"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-0bb6506e94501",
      "path": "/accumulate/ES6/%E8%AE%BA%E6%99%AE%E9%80%9A%E5%87%BD%E6%95%B0%E5%92%8C%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0%E7%9A%84%E5%8C%BA%E5%88%AB%E4%BB%A5%E5%8F%8A%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E5%92%8C%E4%B8%8D%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF.html",
      "lastUpdated": 1561349297000,
      "title": "论普通函数和箭头函数的区别以及箭头函数的注意事项和不适用场景",
      "headers": [
        {
          "level": 2,
          "title": "论普通函数和箭头函数的区别以及箭头函数的注意事项和不适用场景",
          "slug": "论普通函数和箭头函数的区别以及箭头函数的注意事项和不适用场景"
        },
        {
          "level": 2,
          "title": "普通函数和箭头函数的区别：",
          "slug": "普通函数和箭头函数的区别："
        },
        {
          "level": 3,
          "title": "箭头函数的this指向规则：",
          "slug": "箭头函数的this指向规则："
        },
        {
          "level": 3,
          "title": "箭头函数的",
          "slug": "箭头函数的"
        },
        {
          "level": 3,
          "title": "箭头函数的arguments",
          "slug": "箭头函数的arguments"
        },
        {
          "level": 3,
          "title": "箭头函数不支持重命名函数参数,普通函数的函数参数支持重命名",
          "slug": "箭头函数不支持重命名函数参数-普通函数的函数参数支持重命名"
        },
        {
          "level": 3,
          "title": "箭头函数相对于普通函数语法更简洁优雅：",
          "slug": "箭头函数相对于普通函数语法更简洁优雅："
        },
        {
          "level": 2,
          "title": "箭头函数的注意事项及不适用场景",
          "slug": "箭头函数的注意事项及不适用场景"
        },
        {
          "level": 3,
          "title": "箭头函数的注意事项",
          "slug": "箭头函数的注意事项"
        },
        {
          "level": 3,
          "title": "箭头函数不适用场景：",
          "slug": "箭头函数不适用场景："
        },
        {
          "level": 2,
          "title": "文章内容小结：",
          "slug": "文章内容小结："
        },
        {
          "level": 3,
          "title": "普通函数和箭头函数的区别：",
          "slug": "普通函数和箭头函数的区别：-2"
        },
        {
          "level": 3,
          "title": "箭头函数的注意事项及不适用场景",
          "slug": "箭头函数的注意事项及不适用场景-2"
        },
        {
          "level": 2,
          "title": "结语",
          "slug": "结语"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-9c5fea9e18467",
      "path": "/accumulate/JS/Object.defineProperty.html",
      "lastUpdated": 1536303293000,
      "title": "一次弄懂 Object.defineProperty",
      "headers": [
        {
          "level": 2,
          "title": "一次弄懂 Object.defineProperty",
          "slug": "一次弄懂-object-defineproperty"
        },
        {
          "level": 3,
          "title": "基本用法：",
          "slug": "基本用法："
        },
        {
          "level": 3,
          "title": "设置get、set：",
          "slug": "设置get、set："
        }
      ]
    },
    {
      "key": "v-5f8b43ea2c8a5",
      "path": "/accumulate/JS/cookie%E5%92%8Cstorage%E7%9A%84%E4%BD%BF%E7%94%A8%E4%BB%A5%E5%8F%8A%E5%8C%BA%E5%88%AB.html",
      "lastUpdated": 1561349297000,
      "title": "cookie、localStorage 和 sessionStorage 的使用以及区别",
      "headers": [
        {
          "level": 2,
          "title": "cookie、localStorage 和 sessionStorage 的使用以及区别",
          "slug": "cookie、localstorage-和-sessionstorage-的使用以及区别"
        },
        {
          "level": 3,
          "title": "localStorage 和 sessionStorage 的增删改查：",
          "slug": "localstorage-和-sessionstorage-的增删改查："
        },
        {
          "level": 3,
          "title": "cookie 的增删改茶:",
          "slug": "cookie-的增删改茶"
        },
        {
          "level": 3,
          "title": "三者的异同：",
          "slug": "三者的异同："
        },
        {
          "level": 3,
          "title": "应用场景：",
          "slug": "应用场景："
        },
        {
          "level": 3,
          "title": "浏览器支持情况：",
          "slug": "浏览器支持情况："
        },
        {
          "level": 3,
          "title": "数据存放处：",
          "slug": "数据存放处："
        },
        {
          "level": 3,
          "title": "番外：各浏览器Cookie大小、个数限制。",
          "slug": "番外：各浏览器cookie大小、个数限制。"
        }
      ]
    },
    {
      "key": "v-0b5ffaec001c3",
      "path": "/accumulate/JS/webWorker%E4%B8%8A%E6%89%8B.html",
      "lastUpdated": 1561349297000,
      "title": "前端er来学习一下webWorker吧",
      "headers": [
        {
          "level": 2,
          "title": "前端er来学习一下webWorker吧",
          "slug": "前端er来学习一下webworker吧"
        },
        {
          "level": 3,
          "title": "场景",
          "slug": "场景"
        },
        {
          "level": 3,
          "title": "WebWorker 的作用：创建 worker 线程",
          "slug": "webworker-的作用：创建-worker-线程"
        },
        {
          "level": 2,
          "title": "主线程",
          "slug": "主线程"
        },
        {
          "level": 3,
          "title": "我们先来看一下栗子：",
          "slug": "我们先来看一下栗子："
        },
        {
          "level": 3,
          "title": "创建 worker 对象：",
          "slug": "创建-worker-对象："
        },
        {
          "level": 3,
          "title": "主线程的其他 API：",
          "slug": "主线程的其他-api："
        },
        {
          "level": 2,
          "title": "Worker 线程",
          "slug": "worker-线程"
        },
        {
          "level": 3,
          "title": "self 代表 worker 进程自身",
          "slug": "self-代表-worker-进程自身"
        },
        {
          "level": 3,
          "title": "监听主线程传过来的信息：",
          "slug": "监听主线程传过来的信息："
        },
        {
          "level": 3,
          "title": "发送信息给主线程",
          "slug": "发送信息给主线程"
        },
        {
          "level": 3,
          "title": "worker 线程关闭自身",
          "slug": "worker-线程关闭自身"
        },
        {
          "level": 3,
          "title": "worker 线程加载脚本：",
          "slug": "worker-线程加载脚本："
        },
        {
          "level": 3,
          "title": "Worker 线程限制",
          "slug": "worker-线程限制"
        },
        {
          "level": 3,
          "title": "多个 worker 线程",
          "slug": "多个-worker-线程"
        },
        {
          "level": 3,
          "title": "线程间转移二进制数据",
          "slug": "线程间转移二进制数据"
        },
        {
          "level": 3,
          "title": "应用场景：",
          "slug": "应用场景："
        },
        {
          "level": 3,
          "title": "兼容：",
          "slug": "兼容："
        },
        {
          "level": 2,
          "title": "结语：",
          "slug": "结语："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-b45a6a29de774",
      "path": "/accumulate/JS/%E5%87%BD%E6%95%B0%E9%98%B2%E6%8A%96%E5%92%8C%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81.html",
      "lastUpdated": 1550917240000,
      "title": "防抖函数&节流函数",
      "headers": [
        {
          "level": 2,
          "title": "防抖函数(debounce):",
          "slug": "防抖函数-debounce"
        },
        {
          "level": 3,
          "title": "概念：",
          "slug": "概念："
        },
        {
          "level": 3,
          "title": "生活中的栗子：",
          "slug": "生活中的栗子："
        },
        {
          "level": 3,
          "title": "代码栗子：",
          "slug": "代码栗子："
        },
        {
          "level": 3,
          "title": "机制：",
          "slug": "机制："
        },
        {
          "level": 3,
          "title": "应用场景：",
          "slug": "应用场景："
        },
        {
          "level": 2,
          "title": "节流函数(throttle):",
          "slug": "节流函数-throttle"
        },
        {
          "level": 3,
          "title": "概念：",
          "slug": "概念：-2"
        },
        {
          "level": 3,
          "title": "生活中的栗子：",
          "slug": "生活中的栗子：-2"
        },
        {
          "level": 3,
          "title": "代码栗子：",
          "slug": "代码栗子：-2"
        },
        {
          "level": 3,
          "title": "机制：",
          "slug": "机制：-2"
        },
        {
          "level": 3,
          "title": "应用场景：",
          "slug": "应用场景：-2"
        },
        {
          "level": 2,
          "title": "作用和本质：",
          "slug": "作用和本质："
        },
        {
          "level": 2,
          "title": "应用实例，需要加个括号：",
          "slug": "应用实例，需要加个括号："
        }
      ]
    },
    {
      "key": "v-267bbf000d179",
      "path": "/accumulate/JS/%E6%89%8B%E6%91%B8%E6%89%8B%E6%95%99%E4%BD%A0%E4%BD%BF%E7%94%A8WebSocket.html",
      "lastUpdated": 1561349297000,
      "title": "手摸手教你使用WebSocket",
      "headers": [
        {
          "level": 2,
          "title": "手摸手教你使用WebSocket",
          "slug": "手摸手教你使用websocket"
        },
        {
          "level": 3,
          "title": "WebSocket解决了什么问题：",
          "slug": "websocket解决了什么问题："
        },
        {
          "level": 3,
          "title": "一个超简单的栗子：",
          "slug": "一个超简单的栗子："
        },
        {
          "level": 3,
          "title": "webSocket的class类：",
          "slug": "websocket的class类："
        },
        {
          "level": 2,
          "title": "WebSocket不稳定",
          "slug": "websocket不稳定"
        },
        {
          "level": 3,
          "title": "WebSocket设置变量，判断是否手动关闭连接：",
          "slug": "websocket设置变量，判断是否手动关闭连接："
        },
        {
          "level": 3,
          "title": "WebSocket心跳机制：",
          "slug": "websocket心跳机制："
        },
        {
          "level": 2,
          "title": "关于WebSocket",
          "slug": "关于websocket"
        },
        {
          "level": 3,
          "title": "WebSocket的当前状态:WebSocket.readyState",
          "slug": "websocket的当前状态-websocket-readystate"
        },
        {
          "level": 3,
          "title": "WebSocket还可以发送/接收 二进制数据",
          "slug": "websocket还可以发送-接收-二进制数据"
        },
        {
          "level": 3,
          "title": "WebSocket的优点：",
          "slug": "websocket的优点："
        },
        {
          "level": 2,
          "title": "结语",
          "slug": "结语"
        },
        {
          "level": 3,
          "title": "希望看完的朋友可以点个喜欢/关注，您的支持是对我最大的鼓励。",
          "slug": "希望看完的朋友可以点个喜欢-关注，您的支持是对我最大的鼓励。"
        }
      ]
    },
    {
      "key": "v-3192c27b5a858",
      "path": "/accumulate/JS/%E6%95%B0%E7%BB%84API%E8%A7%A3%E6%9E%90%E5%90%88%E9%9B%86.html",
      "lastUpdated": 1540382851000,
      "title": "数组API解析合集",
      "headers": [
        {
          "level": 2,
          "title": "数组API解析合集",
          "slug": "数组api解析合集"
        },
        {
          "level": 3,
          "title": "创建一个数组:",
          "slug": "创建一个数组"
        },
        {
          "level": 3,
          "title": "ES6 Array.of()  返回由所有参数值组成的数组",
          "slug": "es6-array-of-返回由所有参数值组成的数组"
        },
        {
          "level": 3,
          "title": "ES6 Arrary.from() 将两类对象转为真正的数组",
          "slug": "es6-arrary-from-将两类对象转为真正的数组"
        },
        {
          "level": 2,
          "title": "方法:",
          "slug": "方法"
        },
        {
          "level": 3,
          "title": "改变原数组的方法(9个):",
          "slug": "改变原数组的方法-9个"
        },
        {
          "level": 3,
          "title": "splice() 添加/删除数组元素",
          "slug": "splice-添加-删除数组元素"
        },
        {
          "level": 3,
          "title": "sort() 数组排序",
          "slug": "sort-数组排序"
        },
        {
          "level": 3,
          "title": "pop() 删除一个数组中的最后的一个元素",
          "slug": "pop-删除一个数组中的最后的一个元素"
        },
        {
          "level": 3,
          "title": "shift() 删除数组的第一个元素",
          "slug": "shift-删除数组的第一个元素"
        },
        {
          "level": 3,
          "title": "push() 向数组的末尾添加元素",
          "slug": "push-向数组的末尾添加元素"
        },
        {
          "level": 3,
          "title": "unshift()",
          "slug": "unshift"
        },
        {
          "level": 3,
          "title": "reverse() 颠倒数组中元素的顺序",
          "slug": "reverse-颠倒数组中元素的顺序"
        },
        {
          "level": 3,
          "title": "ES6: copyWithin() 指定位置的成员复制到其他位置",
          "slug": "es6-copywithin-指定位置的成员复制到其他位置"
        },
        {
          "level": 3,
          "title": "ES6: fill() 填充数组",
          "slug": "es6-fill-填充数组"
        },
        {
          "level": 3,
          "title": "不改变原数组的方法(8个):",
          "slug": "不改变原数组的方法-8个"
        },
        {
          "level": 3,
          "title": "slice() 浅拷贝数组的元素",
          "slug": "slice-浅拷贝数组的元素"
        },
        {
          "level": 3,
          "title": "join()  数组转字符串",
          "slug": "join-数组转字符串"
        },
        {
          "level": 3,
          "title": "toLocaleString() 数组转字符串",
          "slug": "tolocalestring-数组转字符串"
        },
        {
          "level": 3,
          "title": "toString() 数组转字符串 不推荐",
          "slug": "tostring-数组转字符串-不推荐"
        },
        {
          "level": 3,
          "title": "cancat",
          "slug": "cancat"
        },
        {
          "level": 3,
          "title": "indexOf() 查找数组是否存在某个元素，返回下标",
          "slug": "indexof-查找数组是否存在某个元素，返回下标"
        },
        {
          "level": 3,
          "title": "lastIndexOf() 查找指定元素在数组中的最后一个位置",
          "slug": "lastindexof-查找指定元素在数组中的最后一个位置"
        },
        {
          "level": 3,
          "title": "ES7 includes() 查找数组是否包含某个元素 返回布尔",
          "slug": "es7-includes-查找数组是否包含某个元素-返回布尔"
        },
        {
          "level": 3,
          "title": "遍历方法(12个):",
          "slug": "遍历方法-12个"
        },
        {
          "level": 3,
          "title": "关于遍历：",
          "slug": "关于遍历："
        },
        {
          "level": 3,
          "title": "forEach",
          "slug": "foreach"
        },
        {
          "level": 3,
          "title": "下面类似语法同样适用这些规则",
          "slug": "下面类似语法同样适用这些规则"
        },
        {
          "level": 3,
          "title": "every 检测数组所有元素是否都符合判断条件",
          "slug": "every-检测数组所有元素是否都符合判断条件"
        },
        {
          "level": 3,
          "title": "some 数组中的是否有满足判断条件的元素",
          "slug": "some-数组中的是否有满足判断条件的元素"
        },
        {
          "level": 3,
          "title": "filter 过滤原始数组，返回新数组",
          "slug": "filter-过滤原始数组，返回新数组"
        },
        {
          "level": 3,
          "title": "map 对数组中的每个元素进行处理，返回新的数组",
          "slug": "map-对数组中的每个元素进行处理，返回新的数组"
        },
        {
          "level": 3,
          "title": "reduce 为数组提供累加器，合并为一个值",
          "slug": "reduce-为数组提供累加器，合并为一个值"
        },
        {
          "level": 3,
          "title": "reduceRight  从右至左累加",
          "slug": "reduceright-从右至左累加"
        },
        {
          "level": 3,
          "title": "ES6：find()& findIndex() 根据条件找到数组成员",
          "slug": "es6：find-findindex-根据条件找到数组成员"
        },
        {
          "level": 3,
          "title": "ES6 keys()&values()&entries() 遍历键名、遍历键值、遍历键名+键值",
          "slug": "es6-keys-values-entries-遍历键名、遍历键值、遍历键名-键值"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-f9de74d583d93",
      "path": "/accumulate/JS/%E6%95%B0%E7%BB%84%E4%BA%A4%E9%9B%86%E5%B7%AE%E9%9B%86.html",
      "lastUpdated": 1561349297000,
      "title": "数组交集差集并集",
      "headers": [
        {
          "level": 2,
          "title": "数组交集差集并集",
          "slug": "数组交集差集并集"
        },
        {
          "level": 3,
          "title": "交集、差集和并集是什么鬼？",
          "slug": "交集、差集和并集是什么鬼？"
        },
        {
          "level": 3,
          "title": "includes 判断是否包含：",
          "slug": "includes-判断是否包含："
        },
        {
          "level": 3,
          "title": "使用 Set 来判断：",
          "slug": "使用-set-来判断："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-0b913679fd401",
      "path": "/accumulate/JS/%E6%95%B0%E7%BB%84%E5%AE%8C%E5%85%A8%E4%B9%B1%E5%BA%8F.html",
      "lastUpdated": 1536303293000,
      "title": "数组完全乱序",
      "headers": [
        {
          "level": 2,
          "title": "真正意义上的乱序数组：",
          "slug": "真正意义上的乱序数组："
        },
        {
          "level": 3,
          "title": "递归：",
          "slug": "递归："
        },
        {
          "level": 3,
          "title": "循环(进阶)：",
          "slug": "循环-进阶-："
        },
        {
          "level": 3,
          "title": "不开新数组（最终）：",
          "slug": "不开新数组（最终）："
        }
      ]
    },
    {
      "key": "v-3d07c5ccd72f2",
      "path": "/accumulate/JS/%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%BB%84%E6%88%90%E7%9A%84%E6%95%B0%E7%BB%84.html",
      "lastUpdated": 1536303293000,
      "title": "随机数数组",
      "headers": [
        {
          "level": 2,
          "title": "原理",
          "slug": "原理"
        }
      ]
    },
    {
      "key": "v-a8b8b86ef22e5",
      "path": "/accumulate/",
      "lastUpdated": 1561349297000,
      "title": "前端积累",
      "headers": [
        {
          "level": 2,
          "title": "前端积累",
          "slug": "前端积累"
        },
        {
          "level": 2,
          "title": "前端算法",
          "slug": "前端算法"
        },
        {
          "level": 3,
          "title": "公众号：",
          "slug": "公众号："
        },
        {
          "level": 3,
          "title": "最新更新：",
          "slug": "最新更新："
        }
      ]
    },
    {
      "key": "v-65a08e36baa48",
      "path": "/accumulate/Vue/vuex%E4%B8%89%E6%AD%A5.html",
      "lastUpdated": 1561349297000,
      "title": "Vuex 的使用入门-极简使用",
      "headers": [
        {
          "level": 2,
          "title": "Vuex 的使用入门-极简使用",
          "slug": "vuex-的使用入门-极简使用"
        },
        {
          "level": 3,
          "title": "1. 安装 Vuex 包",
          "slug": "_1-安装-vuex-包"
        },
        {
          "level": 3,
          "title": "2. 新建一个store.js文件:",
          "slug": "_2-新建一个store-js文件"
        },
        {
          "level": 3,
          "title": "3. 引入到main.js入口文件中 - 最后一步",
          "slug": "_3-引入到main-js入口文件中-最后一步"
        },
        {
          "level": 3,
          "title": "在组件中使用 vuex：",
          "slug": "在组件中使用-vuex："
        },
        {
          "level": 3,
          "title": "在 js 文件中使用 vuex:",
          "slug": "在-js-文件中使用-vuex"
        },
        {
          "level": 3,
          "title": "小结",
          "slug": "小结"
        },
        {
          "level": 3,
          "title": "Vuex 文档:",
          "slug": "vuex-文档"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-2610ccd3a48a5",
      "path": "/accumulate/Vue/vue%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80%E5%87%BD%E6%95%B0.html",
      "lastUpdated": 1537360696000,
      "title": "Vue 定义全局函数",
      "headers": [
        {
          "level": 2,
          "title": "Vue 定义全局函数",
          "slug": "vue-定义全局函数"
        },
        {
          "level": 3,
          "title": "原理",
          "slug": "原理"
        },
        {
          "level": 3,
          "title": "1. 在 main.js 里面直接写函数",
          "slug": "_1-在-main-js-里面直接写函数"
        },
        {
          "level": 3,
          "title": "2. 写一个模块文件，挂载到 main.js 上面。",
          "slug": "_2-写一个模块文件，挂载到-main-js-上面。"
        }
      ]
    },
    {
      "key": "v-2b586dd3a84da",
      "path": "/accumulate/Vue/vue%E5%B0%8F%E6%8A%80%E5%B7%A7.html",
      "lastUpdated": 1561349297000,
      "title": "vue 小技巧&小问题1",
      "headers": [
        {
          "level": 2,
          "title": "vue 小技巧&小问题1",
          "slug": "vue-小技巧-小问题1"
        },
        {
          "level": 3,
          "title": "路由变化页面数据不刷新问题",
          "slug": "路由变化页面数据不刷新问题"
        },
        {
          "level": 3,
          "title": "setTimeout/setInterval 无法用 this 访问 VUe 实例",
          "slug": "settimeout-setinterval-无法用-this-访问-vue-实例"
        },
        {
          "level": 3,
          "title": "setInterval 路由跳转继续运行并没有销毁",
          "slug": "setinterval-路由跳转继续运行并没有销毁"
        },
        {
          "level": 3,
          "title": "vue 滚动行为(浏览器回退记忆位置)用法",
          "slug": "vue-滚动行为-浏览器回退记忆位置-用法"
        },
        {
          "level": 3,
          "title": "vue 路由拦截浏览器后退实现草稿保存类似需求",
          "slug": "vue-路由拦截浏览器后退实现草稿保存类似需求"
        },
        {
          "level": 3,
          "title": "v-once 只渲染元素和组件一次，优化更新渲染性能",
          "slug": "v-once-只渲染元素和组件一次，优化更新渲染性能"
        },
        {
          "level": 3,
          "title": "vue 风格指南推荐：",
          "slug": "vue-风格指南推荐："
        }
      ]
    },
    {
      "key": "v-df8292be0a5e7",
      "path": "/accumulate/Vue/vue%E5%B0%8F%E6%8A%80%E5%B7%A73.html",
      "lastUpdated": 1561349297000,
      "title": "vue 小技巧&小问题3",
      "headers": [
        {
          "level": 2,
          "title": "vue 小技巧&小问题3",
          "slug": "vue-小技巧-小问题3"
        },
        {
          "level": 3,
          "title": "vue 点击事件自动传入 dom:",
          "slug": "vue-点击事件自动传入-dom"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-97299bbb37e8a",
      "path": "/accumulate/Vue/vue%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0.html",
      "lastUpdated": 1561349297000,
      "title": "Vue的钩子函数[路由导航守卫、keep-alive、生命周期钩子]",
      "headers": [
        {
          "level": 2,
          "title": "Vue的钩子函数[路由导航守卫、keep-alive、生命周期钩子]",
          "slug": "vue的钩子函数-路由导航守卫、keep-alive、生命周期钩子"
        },
        {
          "level": 2,
          "title": "Vue-Router导航守卫：",
          "slug": "vue-router导航守卫："
        },
        {
          "level": 3,
          "title": "全局守卫",
          "slug": "全局守卫"
        },
        {
          "level": 3,
          "title": "路由独享守卫",
          "slug": "路由独享守卫"
        },
        {
          "level": 3,
          "title": "路由组件内的守卫：",
          "slug": "路由组件内的守卫："
        },
        {
          "level": 3,
          "title": "关于钩子的一些知识：",
          "slug": "关于钩子的一些知识："
        },
        {
          "level": 3,
          "title": "完整的路由导航解析流程(不包括其他生命周期)：",
          "slug": "完整的路由导航解析流程-不包括其他生命周期-："
        },
        {
          "level": 2,
          "title": "你不知道的keep-alive[我猜你不知道]",
          "slug": "你不知道的keep-alive-我猜你不知道"
        },
        {
          "level": 3,
          "title": "用法：",
          "slug": "用法："
        },
        {
          "level": 3,
          "title": "生命周期钩子：",
          "slug": "生命周期钩子："
        },
        {
          "level": 3,
          "title": "缓存你想缓存的路由：",
          "slug": "缓存你想缓存的路由："
        },
        {
          "level": 2,
          "title": "组件生命周期钩子：",
          "slug": "组件生命周期钩子："
        },
        {
          "level": 2,
          "title": "触发钩子的完整顺序：",
          "slug": "触发钩子的完整顺序："
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-4fe06d74af779",
      "path": "/accumulate/Vue/%E4%BD%A0%E6%88%96%E8%AE%B8%E4%B8%8D%E7%9F%A5%E9%81%93Vue%E7%9A%84%E8%BF%99%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7.html",
      "lastUpdated": 1561349297000,
      "title": "vue 小技巧&小问题2",
      "headers": [
        {
          "level": 2,
          "title": "vue 小技巧&小问题2",
          "slug": "vue-小技巧-小问题2"
        },
        {
          "level": 3,
          "title": "文章内容总结:",
          "slug": "文章内容总结"
        },
        {
          "level": 3,
          "title": "组件style的scoped:",
          "slug": "组件style的scoped"
        },
        {
          "level": 3,
          "title": "Vue 数组/对象更新 视图不更新",
          "slug": "vue-数组-对象更新-视图不更新"
        },
        {
          "level": 3,
          "title": "vue filters 过滤器的使用:",
          "slug": "vue-filters-过滤器的使用"
        },
        {
          "level": 3,
          "title": "列表渲染相关",
          "slug": "列表渲染相关"
        },
        {
          "level": 3,
          "title": "深度watch与watch立即触发回调",
          "slug": "深度watch与watch立即触发回调"
        },
        {
          "level": 3,
          "title": "这些情况下不要使用箭头函数:",
          "slug": "这些情况下不要使用箭头函数"
        },
        {
          "level": 3,
          "title": "路由懒加载写法:",
          "slug": "路由懒加载写法"
        },
        {
          "level": 3,
          "title": "路由的项目启动页和404页面",
          "slug": "路由的项目启动页和404页面"
        },
        {
          "level": 3,
          "title": "Vue调试神器:vue-devtools",
          "slug": "vue调试神器-vue-devtools"
        },
        {
          "level": 3,
          "title": "前几个月也写过一篇类似的:",
          "slug": "前几个月也写过一篇类似的"
        },
        {
          "level": 2,
          "title": "结语",
          "slug": "结语"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-b32e480a7064f",
      "path": "/accumulate/Vue/%E5%BC%B9%E7%AA%97.html",
      "lastUpdated": 1561349297000,
      "title": "简单的弹窗组件实现",
      "headers": [
        {
          "level": 2,
          "title": "简单的弹窗组件实现",
          "slug": "简单的弹窗组件实现"
        },
        {
          "level": 3,
          "title": "组件最后实现的效果",
          "slug": "组件最后实现的效果"
        },
        {
          "level": 2,
          "title": "实现步骤",
          "slug": "实现步骤"
        },
        {
          "level": 3,
          "title": "1.搭建组件的html和css样式。",
          "slug": "_1-搭建组件的html和css样式。"
        },
        {
          "level": 3,
          "title": "2. 通过slot定制弹窗内容",
          "slug": "_2-通过slot定制弹窗内容"
        },
        {
          "level": 3,
          "title": "3.通过props控制弹窗显隐&&定制弹窗style",
          "slug": "_3-通过props控制弹窗显隐-定制弹窗style"
        },
        {
          "level": 3,
          "title": "4.$emit触发父组件事件修改数据，关闭弹窗",
          "slug": "_4-emit触发父组件事件修改数据，关闭弹窗"
        },
        {
          "level": 3,
          "title": "弹窗组件代码",
          "slug": "弹窗组件代码"
        },
        {
          "level": 2,
          "title": "小结：",
          "slug": "小结："
        },
        {
          "level": 3,
          "title": "参考资料：",
          "slug": "参考资料："
        }
      ]
    },
    {
      "key": "v-31752f1c65c01",
      "path": "/accumulate/Vue/%E6%9E%81%E7%AE%80%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A.html",
      "lastUpdated": 1559195456000,
      "title": "仿Vue极简双向绑定",
      "headers": [
        {
          "level": 2,
          "title": "仿Vue极简双向绑定",
          "slug": "仿vue极简双向绑定"
        },
        {
          "level": 2,
          "title": "效果GIF：",
          "slug": "效果gif："
        },
        {
          "level": 2,
          "title": "demo地址：",
          "slug": "demo地址："
        },
        {
          "level": 2,
          "title": "了解Object.defineProperty()：",
          "slug": "了解object-defineproperty-："
        },
        {
          "level": 3,
          "title": "使用方式：",
          "slug": "使用方式："
        },
        {
          "level": 3,
          "title": "示例demo：",
          "slug": "示例demo："
        },
        {
          "level": 3,
          "title": "画一下重点：",
          "slug": "画一下重点："
        },
        {
          "level": 2,
          "title": "实现思路：",
          "slug": "实现思路："
        },
        {
          "level": 3,
          "title": "mvvm系列的双向绑定，关键步骤：",
          "slug": "mvvm系列的双向绑定，关键步骤："
        },
        {
          "level": 3,
          "title": "流程图：",
          "slug": "流程图："
        },
        {
          "level": 2,
          "title": "具体代码实现：",
          "slug": "具体代码实现："
        },
        {
          "level": 3,
          "title": "html结构：",
          "slug": "html结构："
        },
        {
          "level": 3,
          "title": "调用方法：",
          "slug": "调用方法："
        },
        {
          "level": 3,
          "title": "创建myVue函数：",
          "slug": "创建myvue函数："
        },
        {
          "level": 3,
          "title": "Watcher函数:",
          "slug": "watcher函数"
        },
        {
          "level": 3,
          "title": "实现数据监听器_observer()：",
          "slug": "实现数据监听器-observer-："
        },
        {
          "level": 3,
          "title": "实现Compile 模板编译",
          "slug": "实现compile-模板编译"
        },
        {
          "level": 2,
          "title": "完整代码&demo地址",
          "slug": "完整代码-demo地址"
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        },
        {
          "level": 3,
          "title": "参考资料：",
          "slug": "参考资料："
        }
      ]
    },
    {
      "key": "v-3fa9c97a1a764",
      "path": "/accumulate/amateur/VuePress%E6%96%87%E6%A1%A3.html",
      "lastUpdated": 1561465635000,
      "title": "如何搭建本文档",
      "headers": [
        {
          "level": 2,
          "title": "如何搭建本文档",
          "slug": "如何搭建本文档"
        },
        {
          "level": 3,
          "title": "VuePress特性：",
          "slug": "vuepress特性："
        },
        {
          "level": 3,
          "title": "效果：",
          "slug": "效果："
        },
        {
          "level": 2,
          "title": "搭建：",
          "slug": "搭建："
        },
        {
          "level": 3,
          "title": "全局安装VuePress",
          "slug": "全局安装vuepress"
        },
        {
          "level": 3,
          "title": "新建文件夹",
          "slug": "新建文件夹"
        },
        {
          "level": 3,
          "title": "项目初始化",
          "slug": "项目初始化"
        },
        {
          "level": 3,
          "title": "在project的根目录下新建docs文件夹：",
          "slug": "在project的根目录下新建docs文件夹："
        },
        {
          "level": 3,
          "title": "在docs文件夹下创建.vuepress文件夹：",
          "slug": "在docs文件夹下创建-vuepress文件夹："
        },
        {
          "level": 3,
          "title": "在.vuepress文件夹下面创建config.js:",
          "slug": "在-vuepress文件夹下面创建config-js"
        },
        {
          "level": 3,
          "title": "在.vuepress文件夹下面创建public文件夹:",
          "slug": "在-vuepress文件夹下面创建public文件夹"
        },
        {
          "level": 3,
          "title": "首页(像VuePress文档主页一样)",
          "slug": "首页-像vuepress文档主页一样"
        },
        {
          "level": 3,
          "title": "我们的项目结构已经搭好了：",
          "slug": "我们的项目结构已经搭好了："
        },
        {
          "level": 3,
          "title": "在 package.json 里添加两个启动命令:",
          "slug": "在-package-json-里添加两个启动命令"
        },
        {
          "level": 3,
          "title": "启动你的VuePress：",
          "slug": "启动你的vuepress："
        },
        {
          "level": 3,
          "title": "构建：",
          "slug": "构建："
        },
        {
          "level": 2,
          "title": "基本配置：",
          "slug": "基本配置："
        },
        {
          "level": 3,
          "title": "导航栏配置：",
          "slug": "导航栏配置："
        },
        {
          "level": 3,
          "title": "侧边栏配置：",
          "slug": "侧边栏配置："
        },
        {
          "level": 2,
          "title": "其他：",
          "slug": "其他："
        },
        {
          "level": 3,
          "title": "代码块编译错误：",
          "slug": "代码块编译错误："
        },
        {
          "level": 3,
          "title": "自定义容器了解一下：",
          "slug": "自定义容器了解一下："
        },
        {
          "level": 3,
          "title": "支持Emoji",
          "slug": "支持emoji"
        },
        {
          "level": 2,
          "title": "一个命令行发布到github上：",
          "slug": "一个命令行发布到github上："
        },
        {
          "level": 3,
          "title": "在 docs/.vuepress/config.js 中设置正确的 base:",
          "slug": "在-docs-vuepress-config-js-中设置正确的-base"
        },
        {
          "level": 3,
          "title": "创建脚步文件:",
          "slug": "创建脚步文件"
        },
        {
          "level": 3,
          "title": "设置package.json：",
          "slug": "设置package-json："
        },
        {
          "level": 3,
          "title": "部署：",
          "slug": "部署："
        },
        {
          "level": 2,
          "title": "更多：",
          "slug": "更多："
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ],
      "excerpt": "<h2 id=\"如何搭建本文档\"><a class=\"header-anchor\" href=\"#如何搭建本文档\" aria-hidden=\"true\">#</a> 如何搭建本文档</h2>\n<p>VuePress是尤大为了支持 Vue 及其子项目的文档需求而写的一个项目，VuePress界面十分简洁，并且<strong>非常容易上手，一个小时就可以将项目架构搭好</strong>。现在已经有很多这种类型的文档，如果你有写技术文档/技术博客的需求，VuePress绝对可以成为你的备选项之一。</p>\n<h3 id=\"vuepress特性：\"><a class=\"header-anchor\" href=\"#vuepress特性：\" aria-hidden=\"true\">#</a> VuePress特性：</h3>\n<ul>\n<li>为技术文档而优化的 内置 Markdown 拓展</li>\n<li>在 Markdown 文件中使用 Vue 组件的能力</li>\n<li>Vue 驱动的自定义主题系统</li>\n<li>自动生成 Service Worker</li>\n<li>Google Analytics 集成</li>\n<li>基于 Git 的 “最后更新时间”</li>\n<li>多语言支持</li>\n<li>默认主题包含：</li>\n</ul>\n<p>建议先看一下<a href=\"https://vuepress.vuejs.org/zh/guide/\" target=\"_blank\" rel=\"noopener noreferrer\">官方文档<OutboundLink/></a></p>\n<h3 id=\"效果：\"><a class=\"header-anchor\" href=\"#效果：\" aria-hidden=\"true\">#</a> 效果：</h3>\n<p>可能你会搭建出一个类似这样的<a href=\"http://obkoro1.com/web_accumulate/\" target=\"_blank\" rel=\"noopener noreferrer\">文档<OutboundLink/></a>：</p>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/165b88bde5ddd420?w=3334&amp;h=1740&amp;f=jpeg&amp;s=358566?raw=true\" alt=\"\"></p>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/165b88b39960911b?w=3328&amp;h=1888&amp;f=jpeg&amp;s=434392?raw=true\" alt=\"\"></p>\n<hr>\n<h2 id=\"搭建：\"><a class=\"header-anchor\" href=\"#搭建：\" aria-hidden=\"true\">#</a> 搭建：</h2>\n<h3 id=\"全局安装vuepress\"><a class=\"header-anchor\" href=\"#全局安装vuepress\" aria-hidden=\"true\">#</a> 全局安装VuePress</h3>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    yarn global add vuepress # 或者：npm install <span class=\"token operator\">-</span>g vuepress\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"新建文件夹\"><a class=\"header-anchor\" href=\"#新建文件夹\" aria-hidden=\"true\">#</a> 新建文件夹</h3>\n<p>可以手动右键新建，也可以使用下面的命令新建文件夹：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    mkdir project\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"项目初始化\"><a class=\"header-anchor\" href=\"#项目初始化\" aria-hidden=\"true\">#</a> 项目初始化</h3>\n<p>进入到<code>project</code>文件夹中，使用命令行初始化项目:</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    yarn init <span class=\"token operator\">-</span>y # 或者 npm init <span class=\"token operator\">-</span>y\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>将会创建一个<code>package.json</code>文件，长这样子：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'project'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'version'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1.0.0'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'main'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'index.js'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'scripts'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'test'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'echo \\'Error: no test specified\\' &amp;&amp; exit 1'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'keywords'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'author'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'license'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ISC'</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"在project的根目录下新建docs文件夹：\"><a class=\"header-anchor\" href=\"#在project的根目录下新建docs文件夹：\" aria-hidden=\"true\">#</a> 在project的根目录下新建docs文件夹：</h3>\n<p>这个文档将作为项目文档的根目录来使用：</p>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>    mkdir docs\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"在docs文件夹下创建-vuepress文件夹：\"><a class=\"header-anchor\" href=\"#在docs文件夹下创建-vuepress文件夹：\" aria-hidden=\"true\">#</a> 在docs文件夹下创建<code>.vuepress</code>文件夹：</h3>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    mkdir <span class=\"token punctuation\">.</span>vuepress\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>所有 VuePress 相关的文件都将会被放在这里</p>\n<h3 id=\"在-vuepress文件夹下面创建config-js\"><a class=\"header-anchor\" href=\"#在-vuepress文件夹下面创建config-js\" aria-hidden=\"true\">#</a> 在<code>.vuepress</code>文件夹下面创建<code>config.js</code>:</h3>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    touch config<span class=\"token punctuation\">.</span>js\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>config.js是VuePress必要的配置文件，它导出一个javascript对象。</p>\n<p>你可以先加入如下配置：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello VuePress'</span><span class=\"token punctuation\">,</span>\n      description<span class=\"token punctuation\">:</span> <span class=\"token string\">'Just playing around'</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"在-vuepress文件夹下面创建public文件夹\"><a class=\"header-anchor\" href=\"#在-vuepress文件夹下面创建public文件夹\" aria-hidden=\"true\">#</a> 在<code>.vuepress</code>文件夹下面创建public文件夹:</h3>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    mkdir <span class=\"token keyword\">public</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>这个文件夹是用来放置静态资源的，打包出来之后会放在.vuepress/dist/的根目录。</p>\n<h3 id=\"首页-像vuepress文档主页一样\"><a class=\"header-anchor\" href=\"#首页-像vuepress文档主页一样\" aria-hidden=\"true\">#</a> 首页(像VuePress文档主页一样)</h3>\n<p>在docs文件夹下面创建一个<code>README.md</code>：</p>\n<p>默认的主题提供了一个首页，像下面一样设置<code>home:true</code>即可，可以把下面的设置放入<code>README.md</code>中，待会儿你将会看到跟<code>VuePress</code>一样的主页。</p>\n<!--beforebegin--><div class=\"language-html line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-html\"><code>    ---\n    home: true\n    heroImage: /logo.jpg\n    actionText: 快速上手 →\n    actionLink: /zh/guide/\n    features:\n    - title: 简洁至上\n      details: 以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。\n    - title: Vue驱动\n      details: 享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。\n    - title: 高性能\n      details: VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。\n    footer: MIT Licensed | Copyright © 2018-present Evan You\n    ---\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br></div><!--beforeend--></div><!--afterend--><p>ps：你需要放一张图片到public文件夹中。</p>\n<h3 id=\"我们的项目结构已经搭好了：\"><a class=\"header-anchor\" href=\"#我们的项目结构已经搭好了：\" aria-hidden=\"true\">#</a> 我们的项目结构已经搭好了：</h3>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>    project\n    ├─── docs\n    │   ├── README.md\n    │   └── .vuepress\n    │       ├── public\n    │       └── config.js\n    └── package.json\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"在-package-json-里添加两个启动命令\"><a class=\"header-anchor\" href=\"#在-package-json-里添加两个启动命令\" aria-hidden=\"true\">#</a> 在 <code>package.json</code> 里添加两个启动命令:</h3>\n<!--beforebegin--><div class=\"language-json line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-json\"><code>    <span class=\"token punctuation\">{</span>\n      'scripts'<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        'docs<span class=\"token operator\">:</span>dev'<span class=\"token operator\">:</span> 'vuepress dev docs'<span class=\"token punctuation\">,</span>\n        'docs<span class=\"token operator\">:</span>build'<span class=\"token operator\">:</span> 'vuepress build docs'\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"启动你的vuepress：\"><a class=\"header-anchor\" href=\"#启动你的vuepress：\" aria-hidden=\"true\">#</a> 启动你的VuePress：</h3>\n<p>默认是<code>localhost:8080</code>端口。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    yarn docs<span class=\"token punctuation\">:</span>dev # 或者：npm run docs<span class=\"token punctuation\">:</span>dev\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"构建：\"><a class=\"header-anchor\" href=\"#构建：\" aria-hidden=\"true\">#</a> 构建：</h3>\n<p>build生成静态的HTML文件,默认会在 <code>.vuepress/dist</code> 文件夹下</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    yarn docs<span class=\"token punctuation\">:</span>build # 或者：npm run docs<span class=\"token punctuation\">:</span>build\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<h2 id=\"基本配置：\"><a class=\"header-anchor\" href=\"#基本配置：\" aria-hidden=\"true\">#</a> 基本配置：</h2>\n<p>最标准的当然是<a href=\"https://vuepress.vuejs.org/zh/default-theme-config/\" target=\"_blank\" rel=\"noopener noreferrer\">官方文档<OutboundLink/></a>,可以自己的需求来配置<code>config.js</code>。</p>\n<p>可以参考一下我的<code>config.js</code>的配置：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'网站标题'</span><span class=\"token punctuation\">,</span>\n      description<span class=\"token punctuation\">:</span> <span class=\"token string\">'网站描述'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 注入到当前页面的 HTML &lt;head> 中的标签</span>\n      head<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'link'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> rel<span class=\"token punctuation\">:</span> <span class=\"token string\">'icon'</span><span class=\"token punctuation\">,</span> href<span class=\"token punctuation\">:</span> <span class=\"token string\">'/favicon.ico'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 增加一个自定义的 favicon(网页标签的图标)</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      base<span class=\"token punctuation\">:</span> <span class=\"token string\">'/web_accumulate/'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 这是部署到github相关的配置 下面会讲</span>\n      markdown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        lineNumbers<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 代码块显示行号</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      themeConfig<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        sidebarDepth<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// e'b将同时提取markdown中h2 和 h3 标题，显示在侧边栏上。</span>\n        lastUpdated<span class=\"token punctuation\">:</span> <span class=\"token string\">'Last Updated'</span> <span class=\"token comment\">// 文档更新时间：每个文件git最后提交的时间</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"导航栏配置：\"><a class=\"header-anchor\" href=\"#导航栏配置：\" aria-hidden=\"true\">#</a> 导航栏配置：</h3>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/165bd71b0c38b87f?w=1246&amp;h=346&amp;f=jpeg&amp;s=40945?raw=true\" alt=\"\"></p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      themeConfig<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        nav<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span> text<span class=\"token punctuation\">:</span> <span class=\"token string\">'前端算法'</span><span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">:</span> <span class=\"token string\">'/algorithm/'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 内部链接 以docs为根目录</span>\n          <span class=\"token punctuation\">{</span> text<span class=\"token punctuation\">:</span> <span class=\"token string\">'博客'</span><span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">:</span> <span class=\"token string\">'http://obkoro1.com/'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 外部链接</span>\n          <span class=\"token comment\">// 下拉列表</span>\n          <span class=\"token punctuation\">{</span>\n            text<span class=\"token punctuation\">:</span> <span class=\"token string\">'GitHub'</span><span class=\"token punctuation\">,</span>\n            items<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">{</span> text<span class=\"token punctuation\">:</span> <span class=\"token string\">'GitHub地址'</span><span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">:</span> <span class=\"token string\">'https://github.com/OBKoro1'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">{</span>\n                text<span class=\"token punctuation\">:</span> <span class=\"token string\">'算法仓库'</span><span class=\"token punctuation\">,</span>\n                link<span class=\"token punctuation\">:</span> <span class=\"token string\">'https://github.com/OBKoro1/Brush_algorithm'</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">]</span>\n          <span class=\"token punctuation\">}</span>        \n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"侧边栏配置：\"><a class=\"header-anchor\" href=\"#侧边栏配置：\" aria-hidden=\"true\">#</a> 侧边栏配置：</h3>\n<p>侧边栏的配置相对麻烦点，我里面都做了详细的注释，仔细看，自己鼓捣鼓捣 就知道怎么搞了。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      themeConfig<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          sidebar<span class=\"token punctuation\">:</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// docs文件夹下面的accumulate文件夹 文档中md文件 书写的位置(命名随意)</span>\n            <span class=\"token string\">'/accumulate/'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">'/accumulate/'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// accumulate文件夹的README.md 不是下拉框形式</span>\n                <span class=\"token punctuation\">{</span>\n                  title<span class=\"token punctuation\">:</span> <span class=\"token string\">'侧边栏下拉框的标题1'</span><span class=\"token punctuation\">,</span>\n                  children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string\">'/accumulate/JS/test'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 以docs为根目录来查找文件 </span>\n                    <span class=\"token comment\">// 上面地址查找的是：docs>accumulate>JS>test.md 文件</span>\n                    <span class=\"token comment\">// 自动加.md 每个子选项的标题 是该md文件中的第一个h1/h2/h3标题</span>\n                  <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n              <span class=\"token comment\">// docs文件夹下面的algorithm文件夹 这是第二组侧边栏 跟第一组侧边栏没关系</span>\n              <span class=\"token string\">'/algorithm/'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">'/algorithm/'</span><span class=\"token punctuation\">,</span> \n                <span class=\"token punctuation\">{</span>\n                  title<span class=\"token punctuation\">:</span> <span class=\"token string\">'第二组侧边栏下拉框的标题1'</span><span class=\"token punctuation\">,</span>\n                  children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string\">'/algorithm/simple/test'</span> \n                  <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">]</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<h2 id=\"其他：\"><a class=\"header-anchor\" href=\"#其他：\" aria-hidden=\"true\">#</a> 其他：</h2>\n<h3 id=\"代码块编译错误：\"><a class=\"header-anchor\" href=\"#代码块编译错误：\" aria-hidden=\"true\">#</a> 代码块编译错误：</h3>\n<p>像下面这段代码会导致编译错误，VuePress会去找里面的变量，把它编译成text：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> 啦 <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>所以我们的代码块要以这种形式书写：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">//```js</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> 啦 <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// 注释需要打开 这样vuepress会把这里面包裹的当成代码块而不是js</span>\n<span class=\"token comment\">//```</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><p>并且这样也会让我们的代码高亮显示(下图第一个没有高亮，第二个有高亮)，阅读体验更好：</p>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/165bd98ebe2f65b3?w=1740&amp;h=746&amp;f=png&amp;s=139253?raw=true\" alt=\"\"></p>\n<h3 id=\"自定义容器了解一下：\"><a class=\"header-anchor\" href=\"#自定义容器了解一下：\" aria-hidden=\"true\">#</a> 自定义容器了解一下：</h3>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/165bda20ddcbd209?w=1566&amp;h=700&amp;f=png&amp;s=47920?raw=true\" alt=\"\"></p>\n<p><strong>更改标题：</strong></p>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>    ::: tip 替换tip的标题\n    这里是内容。\n    :::\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><p>其实<a href=\"https://vuepress.vuejs.org/zh/guide/markdown.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%B9%E5%99%A8\" target=\"_blank\" rel=\"noopener noreferrer\">文档<OutboundLink/></a>里有，我这里只是提一下。</p>\n<h3 id=\"支持emoji\"><a class=\"header-anchor\" href=\"#支持emoji\" aria-hidden=\"true\">#</a> 支持Emoji</h3>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/165bdaa634c0839d?w=1604&amp;h=506&amp;f=png&amp;s=33035?raw=true\" alt=\"\"></p>\n<p>文档中只提了支持Emoji,我在GitHub上找到了Emoji的<a href=\"https://gist.github.com/rxaviers/7360908\" target=\"_blank\" rel=\"noopener noreferrer\">列表<OutboundLink/></a>，分享一下。</p>\n<h2 id=\"一个命令行发布到github上：\"><a class=\"header-anchor\" href=\"#一个命令行发布到github上：\" aria-hidden=\"true\">#</a> 一个命令行发布到github上：</h2>\n<h3 id=\"在-docs-vuepress-config-js-中设置正确的-base\"><a class=\"header-anchor\" href=\"#在-docs-vuepress-config-js-中设置正确的-base\" aria-hidden=\"true\">#</a> 在 <code>docs/.vuepress/config.js</code> 中设置正确的 base:</h3>\n<p>如果你打算发布到 <code>https://&lt;USERNAME&gt;.github.io/</code>，则可以省略这一步，因为 base 默认即是 <code>'/'</code>。</p>\n<p>如果你打算发布到 <code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/</code>（也就是说你的仓库在 <code>https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;</code>），则将 base 设置为 <code>'/&lt;REPO&gt;/'</code>。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    base<span class=\"token punctuation\">:</span> <span class=\"token string\">'/test/'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 比如你的仓库是test</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"创建脚步文件\"><a class=\"header-anchor\" href=\"#创建脚步文件\" aria-hidden=\"true\">#</a> 创建脚步文件:</h3>\n<p>在<code>project</code>的根目录下，创建一个<code>deploy.sh</code>文件：</p>\n<!--beforebegin--><div class=\"language- line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run docs:build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# 如果是发布到自定义域名\n# echo &#39;www.example.com&#39; &gt; CNAME\n\ngit init\ngit add -A\ngit commit -m &#39;deploy&#39;\n\n# 如果发布到 https://&lt;USERNAME&gt;.github.io  USERNAME=你的用户名 \n# git push -f git@github.com:&lt;USERNAME&gt;/&lt;USERNAME&gt;.github.io.git master\n\n# 如果发布到 https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;  REPO=github上的项目\n# git push -f git@github.com:&lt;USERNAME&gt;/&lt;REPO&gt;.git master:gh-pages\n\ncd -\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"设置package-json：\"><a class=\"header-anchor\" href=\"#设置package-json：\" aria-hidden=\"true\">#</a> 设置package.json：</h3>\n<!--beforebegin--><div class=\"language-json line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n    'scripts'<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    'd'<span class=\"token operator\">:</span> 'bash deploy.sh'\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"部署：\"><a class=\"header-anchor\" href=\"#部署：\" aria-hidden=\"true\">#</a> 部署：</h3>\n<p>然后你每次可以运行下面的命令行，来把最新更改推到<code>github</code>上：</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>npm run d\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--><p>如果你对运行项目和构建项目的命令行觉得很烦，你也可以像我这么做：</p>\n<!--beforebegin--><div class=\"language-json line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-json\"><code>'scripts'<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    'dev'<span class=\"token operator\">:</span> 'vuepress dev docs'<span class=\"token punctuation\">,</span> // 本地运行项目 npm run dev\n    'build'<span class=\"token operator\">:</span> 'vuepress build docs'<span class=\"token punctuation\">,</span> // 构建项目 nom run build\n    'd'<span class=\"token operator\">:</span> 'bash deploy.sh' // 部署项目 npm run d\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div><!--beforeend--></div><!--afterend--><hr>\n<h2 id=\"更多：\"><a class=\"header-anchor\" href=\"#更多：\" aria-hidden=\"true\">#</a> 更多：</h2>\n<p>实际上VuePress的配置、用法还有很多，像还可以配置PWA，以及在markdown里面使用Vue组件等，这些功能我也还在摸索，所以大家一定要去看<a href=\"https://vuepress.vuejs.org/zh/\" target=\"_blank\" rel=\"noopener noreferrer\">文档<OutboundLink/></a>!</p>\n<h2 id=\"小结\"><a class=\"header-anchor\" href=\"#小结\" aria-hidden=\"true\">#</a> 小结</h2>\n<p>上面已经写得尽可能详细了，我遇到的坑都写上去了。搭建起来确实很简单，心动不如行动，随手花一两个小时搭建一下又不吃亏，何乐而不为？</p>\n<h3 id=\"鼓励我一下：\"><a class=\"header-anchor\" href=\"#鼓励我一下：\" aria-hidden=\"true\">#</a> 鼓励我一下：</h3>\n<p>觉得还不错的话，给我的项目点个<a href=\"https://github.com/OBKoro1/Brush_algorithm\" target=\"_blank\" rel=\"noopener noreferrer\">star<OutboundLink/></a>吧</p>\n<p>游泳、健身了解一下：<a href=\"http://obkoro1.com/\" target=\"_blank\" rel=\"noopener noreferrer\">博客<OutboundLink/></a>、<a href=\"https://github.com/OBKoro1/Brush_algorithm\" target=\"_blank\" rel=\"noopener noreferrer\">前端算法<OutboundLink/></a>、<a href=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/1631b6f52f7e7015?w=344&amp;h=344&amp;f=jpeg&amp;s=8317?raw=true\" target=\"_blank\" rel=\"noopener noreferrer\">公众号<OutboundLink/></a></p>\n<!-- '特殊字符串：用于删除编译后的issue组件-OBKoro1 -->\n"
    },
    {
      "key": "v-75a2bd3bbe865",
      "path": "/accumulate/amateur/%E6%8E%A8%E7%AE%B1%E5%AD%90.html",
      "lastUpdated": 1561465635000,
      "title": "推箱子",
      "headers": [
        {
          "level": 2,
          "title": "推箱子",
          "slug": "推箱子"
        },
        {
          "level": 3,
          "title": "demo：推箱子小游戏",
          "slug": "demo：推箱子小游戏"
        },
        {
          "level": 2,
          "title": "步骤解析：",
          "slug": "步骤解析："
        },
        {
          "level": 3,
          "title": "1. 渲染地图",
          "slug": "_1-渲染地图"
        },
        {
          "level": 3,
          "title": "2. 捕获键盘事件,判断是否可以移动",
          "slug": "_2-捕获键盘事件-判断是否可以移动"
        },
        {
          "level": 3,
          "title": "3.胜利判断：",
          "slug": "_3-胜利判断："
        },
        {
          "level": 3,
          "title": "代码地址](https://github.com/OBKoro1/web_accumulate/blob/d6b599ca22d8656d3f31f80bffa976fac36d2d75/example/pushKoro/index.html)、[demo地址",
          "slug": "代码地址、demo地址"
        }
      ],
      "excerpt": "<h2 id=\"推箱子\"><a class=\"header-anchor\" href=\"#推箱子\" aria-hidden=\"true\">#</a> 推箱子</h2>\n<p><img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/1?raw=true\" alt=\"demo图片\"></p>\n<h3 id=\"demo：推箱子小游戏\"><a class=\"header-anchor\" href=\"#demo：推箱子小游戏\" aria-hidden=\"true\">#</a> demo：<a href=\"http://obkoro1.com/web_accumulate/example/pushKoro/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">推箱子小游戏<OutboundLink/></a></h3>\n<h2 id=\"步骤解析：\"><a class=\"header-anchor\" href=\"#步骤解析：\" aria-hidden=\"true\">#</a> 步骤解析：</h2>\n<p><strong>本文代码已经放在了<a href=\"https://github.com/OBKoro1/web_accumulate/blob/d6b599ca22d8656d3f31f80bffa976fac36d2d75/example/pushKoro/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">github<OutboundLink/></a>上面了,里面也进行了很详细的代码注释，可以copy下来，在本地运行一下看看</strong>。</p>\n<h3 id=\"_1-渲染地图\"><a class=\"header-anchor\" href=\"#_1-渲染地图\" aria-hidden=\"true\">#</a> 1. 渲染地图</h3>\n<ol>\n<li>\n<p>html结构：\n<img src=\"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/160d1149856a3714?w=503&amp;h=727&amp;f=png&amp;s=48024?raw=true\" alt=\"\"></p>\n<pre><code> html结构十分简单，只要弄一堆div，来放置地图的class就可以了，我这里初始化了12*9个div，地图里最多九行高度。   \n 这些div都是同样大小，地图渲染出来区别的只是颜色的不同。\n</code></pre>\n</li>\n<li>\n<p>地图函数：</p>\n</li>\n</ol>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> box<span class=\"token operator\">=</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.box div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//地图使用的div集合</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">//创建地图函数</span>\nbox<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">//index的数量是固定的，是box div下面div的数量</span>\n        <span class=\"token comment\">// 每次创建地图初始化div</span>\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbox<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">//循环整个div的数量 二维数组里数量不够的 默认为空白</span>\n<span class=\"token comment\">//level为关卡数 根据关卡渲染地图 builder为二维数组，为地图关卡</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">[</span>level<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">//过滤0</span>\n        box<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type'</span><span class=\"token operator\">+</span>builder<span class=\"token punctuation\">[</span>level<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbox<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>origin<span class=\"token punctuation\">[</span>level<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pusher'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//推箱人 皮卡丘位置</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//第一关的地图长这样（下面只是栗子，不是代码），0代表不可抵达区域，1代表目标（要被推到的地方），</span>\n<span class=\"token comment\">//2代表普通路径（可以走的），3代表墙，4代表箱子</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"_2-捕获键盘事件-判断是否可以移动\"><a class=\"header-anchor\" href=\"#_2-捕获键盘事件-判断是否可以移动\" aria-hidden=\"true\">#</a> 2. 捕获键盘事件,判断是否可以移动</h3>\n<p>使用<a href=\"http://www.w3school.com.cn/jquery/event_keydown.asp\" target=\"_blank\" rel=\"noopener noreferrer\">$(document).keydown()<OutboundLink/></a>jqery事件，捕获键盘事件。</p>\n<ol>\n<li>捕获键盘事件，上下左右以及wsad。</li>\n</ol>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keydown</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> key<span class=\"token operator\">=</span>e<span class=\"token punctuation\">.</span>which<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//col 的值为12，上下移动要12个div为一个周期</span>\n        <span class=\"token comment\">//方向键上或者w</span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">87</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">38</span><span class=\"token punctuation\">:</span>\n            <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//判断移动函数</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//方向键下或者s</span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">83</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">40</span><span class=\"token punctuation\">:</span>\n            <span class=\"token function\">move</span><span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//方向键左或者a</span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">65</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">37</span><span class=\"token punctuation\">:</span>\n            <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//方向键右或者d</span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">68</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">39</span><span class=\"token punctuation\">:</span>\n            <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>win<span class=\"token punctuation\">,</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//按键之后调判断是否过关</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br></div><!--beforeend--></div><!--afterend--><ol start=\"2\">\n<li>判断是否可以移动。</li>\n</ol>\n<p>分为两个判断条件：一个是推箱子，一个是不推箱子 自然移动，否则不移动皮卡丘。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span>step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">//是否移动判断</span>\n        <span class=\"token comment\">// 分为两个判断条件一个是推箱子，一个是不推箱子 自然移动。 否则不移动皮卡丘</span>\n        <span class=\"token comment\">//step 上下是12个div一个周期，左右是1个div positin是皮卡丘的原来位置</span>\n    <span class=\"token keyword\">var</span> pikaqiu1<span class=\"token operator\">=</span>box<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//皮卡丘现在的地方</span>\n    <span class=\"token keyword\">var</span> pikaqiu2<span class=\"token operator\">=</span>box<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>position<span class=\"token operator\">+</span>step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//皮卡丘要去的下一个地方</span>\n    <span class=\"token keyword\">var</span> pushBox<span class=\"token operator\">=</span>box<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>position<span class=\"token operator\">+</span>step<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//箱子要去的下一个地方</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pikaqiu2<span class=\"token punctuation\">.</span><span class=\"token function\">hasClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type4'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span> pikaqiu2<span class=\"token punctuation\">.</span><span class=\"token function\">hasClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type1'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">||</span>pikaqiu2<span class=\"token punctuation\">.</span><span class=\"token function\">hasClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">//自然移动</span>\n        <span class=\"token comment\">//判断：如果下一个div的class不包含type4(箱子)，并且 下一个div含有type1(目标位置)，或者type2(普通路径)</span>\n        <span class=\"token comment\">//这一步和下一步判断是否有type4的原因是普通路径会变成有type4的路径，这时候就会出现问题</span>\n        pikaqiu1<span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pusher'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//移除当前皮卡丘</span>\n        pikaqiu2<span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pusher'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//移动皮卡丘到下一个位置</span>\n        position<span class=\"token operator\">=</span>position<span class=\"token operator\">+</span>step<span class=\"token punctuation\">;</span><span class=\"token comment\">//增加position值</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pikaqiu2<span class=\"token punctuation\">.</span><span class=\"token function\">hasClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pushBox<span class=\"token punctuation\">.</span><span class=\"token function\">hasClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>pushBox<span class=\"token punctuation\">.</span><span class=\"token function\">hasClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type1'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">||</span> pushBox<span class=\"token punctuation\">.</span><span class=\"token function\">hasClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//推箱子    </span>\n        <span class=\"token comment\">//如果下一个div的class包含type4(箱子)并且 不包含重叠type4(箱子) 并且 包含class type1（目标位置）或者 包含type2(空路)</span>\n        pikaqiu2<span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//移除当前箱子</span>\n        pikaqiu1<span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pusher'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//移除当前皮卡丘</span>\n        pushBox<span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//移动箱子到下一个位置</span>\n        pikaqiu2<span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pusher'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//</span>\n        <span class=\"token comment\">//本来是type4 移除之后，这里没有class了，要变成普通路径</span>\n        position<span class=\"token operator\">=</span>position<span class=\"token operator\">+</span>step<span class=\"token punctuation\">;</span><span class=\"token comment\">//增加position值 </span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"_3-胜利判断：\"><a class=\"header-anchor\" href=\"#_3-胜利判断：\" aria-hidden=\"true\">#</a> 3.胜利判断：</h3>\n<p>每次移动都要调用这个胜利判断。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">win</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">//胜利条件判断</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.type1.type4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token operator\">===</span>goal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">//推的箱子与关卡设置通过箱子的数量对比</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>level<span class=\"token operator\">&lt;</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'666，挑战下一关吧--OBKoro1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            level<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//关卡+1</span>\n            goal <span class=\"token operator\">=</span> goalList<span class=\"token punctuation\">[</span>level<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            position <span class=\"token operator\">=</span> origin<span class=\"token punctuation\">[</span>level<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'厉害啊 大佬 通关了都'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"代码地址、demo地址\"><a class=\"header-anchor\" href=\"#代码地址、demo地址\" aria-hidden=\"true\">#</a> <a href=\"https://github.com/OBKoro1/web_accumulate/blob/d6b599ca22d8656d3f31f80bffa976fac36d2d75/example/pushKoro/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">代码地址<OutboundLink/></a>、<a href=\"http://obkoro1.com/web_accumulate/example/pushKoro/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">demo地址<OutboundLink/></a></h3>\n<p>以上2018.1.7</p>\n<!-- '特殊字符串：用于删除编译后的issue组件-OBKoro1 -->\n"
    },
    {
      "key": "v-db74a7425a1a9",
      "path": "/accumulate/amateur/%E9%AB%98%E6%80%A7%E8%83%BDjs.html",
      "lastUpdated": 1561465635000,
      "title": "[读书笔记]《高性能 JavaScript》",
      "headers": [
        {
          "level": 2,
          "title": "[读书笔记]《高性能 JavaScript》",
          "slug": "读书笔记-《高性能-javascript》"
        },
        {
          "level": 3,
          "title": "缺陷",
          "slug": "缺陷"
        },
        {
          "level": 3,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 3,
          "title": "第一章-加载和执行",
          "slug": "第一章-加载和执行"
        },
        {
          "level": 3,
          "title": "第一章加载和执行小结：",
          "slug": "第一章加载和执行小结："
        },
        {
          "level": 3,
          "title": "第二章-数据存取",
          "slug": "第二章-数据存取"
        },
        {
          "level": 3,
          "title": "第二章数据存取小结：",
          "slug": "第二章数据存取小结："
        },
        {
          "level": 3,
          "title": "第三章 DOM 编程小结：",
          "slug": "第三章-dom-编程小结："
        },
        {
          "level": 3,
          "title": "第四章算法和流程控制小结：",
          "slug": "第四章算法和流程控制小结："
        },
        {
          "level": 3,
          "title": "第五章字符串和正则表达式小结：",
          "slug": "第五章字符串和正则表达式小结："
        },
        {
          "level": 3,
          "title": "第六章快速响应的用户界面小结：",
          "slug": "第六章快速响应的用户界面小结："
        },
        {
          "level": 3,
          "title": "第七章 AJAX 小结",
          "slug": "第七章-ajax-小结"
        },
        {
          "level": 3,
          "title": "第八章编程实践小结",
          "slug": "第八章编程实践小结"
        },
        {
          "level": 3,
          "title": "第九章 构建并部署高性能 js 应用小结",
          "slug": "第九章-构建并部署高性能-js-应用小结"
        },
        {
          "level": 3,
          "title": "第十章 工具 小结：",
          "slug": "第十章-工具-小结："
        },
        {
          "level": 2,
          "title": "后话",
          "slug": "后话"
        },
        {
          "level": 3,
          "title": "这些东西可以让我们知道什么是更好的实践，什么样的代码可以跑得更快，让我们养成更好的开发习惯。",
          "slug": "这些东西可以让我们知道什么是更好的实践，什么样的代码可以跑得更快，让我们养成更好的开发习惯。"
        }
      ],
      "excerpt": "<h2 id=\"读书笔记-《高性能-javascript》\"><a class=\"header-anchor\" href=\"#读书笔记-《高性能-javascript》\" aria-hidden=\"true\">#</a> [读书笔记]《高性能 JavaScript》</h2>\n<h3 id=\"缺陷\"><a class=\"header-anchor\" href=\"#缺陷\" aria-hidden=\"true\">#</a> 缺陷</h3>\n<p>这本书是 2010 年出版的，这本书谈性能是有时效性的，现在已经是 2018 年了，这几年前端发展的速度是飞快的，书里面还有一些内容考虑 IE6、7、8 的东西，殊不知现在这些都已经不再考虑了，所以不可避免的有一些知识是比较老的。有些解决方法现在已经不是最好的解决方式，比如工具那一章。</p>\n<h3 id=\"前言\"><a class=\"header-anchor\" href=\"#前言\" aria-hidden=\"true\">#</a> 前言</h3>\n<p><strong>总的来说，这本书整体给出的性能优化建议，以及作者耐心的实践，对我们开发优化的启发和帮助还是很大的</strong>，因为它里边的很多知识，都是作者通过实践总结出来的，都是经验的积累，这在一般的教科书上是学不到的。特别是对于 js 基础比较差一点的，里面有很多知识点尽管在现在还是非常有必要的。</p>\n<p><strong>下面我就将各章节的一些重要的知识点总结写出来，争取将干货都提取出来</strong>。</p>\n<hr>\n<h3 id=\"第一章-加载和执行\"><a class=\"header-anchor\" href=\"#第一章-加载和执行\" aria-hidden=\"true\">#</a> 第一章-加载和执行</h3>\n<ol>\n<li>js 的阻塞特性：</li>\n</ol>\n<p>当浏览器在执行 js 代码的时候，不能同时做其他事情。（界面 ui 线程和 js 线程用的是同一进程，所以 js 执行越久，网页的响应时间越长。）</p>\n<ol start=\"2\">\n<li>脚本的位置</li>\n</ol>\n<p><strong>如果把脚本<code>&lt;script&gt;</code>放在<code>&lt;head&gt;</code>中，页面会等 js 文件全部下载并执行完成后才开始渲染</strong>，在这些文件下载和执行的过程中：会导致访问网站的时候有明显的延迟，表现为：页面空白。</p>\n<p>性能提升：<strong>推荐将所有的<code>&lt;script&gt;</code>标签尽可能的放到<code>&lt;body&gt;</code>标签的底部</strong>，优先渲染页面，减少页面空白时间。</p>\n<ol start=\"3\">\n<li>组件脚本。</li>\n</ol>\n<p>每个<code>&lt;script&gt;</code>标签初始下载的时候都会阻塞页面的渲染。性能提升做法：\n<strong>减少内嵌脚本：减少内嵌的<code>&lt;script&gt;</code>标签</strong>，将代码写在一个标签中。</p>\n<p><strong>合并外链的 js 文件</strong>：http 请求会带来额外的性能开销，栗子：下载一个 100KB 的 js 文件比下载 4 个 25kb 的 js 文件更快。具体操作方法自行搜索。</p>\n<ol start=\"4\">\n<li>无阻塞脚本的方法</li>\n</ol>\n<p><strong>script 标签的 aync 属性</strong>：</p>\n<p>async 属性规定一旦脚本可用，则会异步执行。async 属性仅适用于外部脚本（只有在使用 src 属性时）。如果 async='async'：脚本相对于页面的其余部分异步地执行（当页面继续进行解析时，脚本将被执行）</p>\n<p><strong>script 标签的 defer 属性</strong>：</p>\n<p>js 文件在页面解析到 script 标签的时候开始下载，但并不会执行，dom 加载完成执行。<strong>这两个属性的区别在于执行时机</strong>。</p>\n<p><strong>动态脚本元素</strong>。</p>\n<p>js 操作 dom 创建<code>&lt;script&gt;</code>标签，自定义生成标签的 type、src 属性。文件会在该元素被添加到页面的时候开始下载。ps：如果文件顺序很重要的话，最好按照顺序合成一个文件。然后再添加到页面中。这样：无论何时启动下载。文件的下载和执行过程不会阻塞页面的其他进程。</p>\n<h5 id=\"_3-xhr-ajax-脚本注入、\"><a class=\"header-anchor\" href=\"#_3-xhr-ajax-脚本注入、\" aria-hidden=\"true\">#</a> 3. XHR ajax 脚本注入、</h5>\n<p>用 get 请求一个文件，请求好了。然后创建动态脚本，最后添加进去。\n缺陷：文件要再请求页面的同一个域。不能从 cdn 下载</p>\n<h3 id=\"第一章加载和执行小结：\"><a class=\"header-anchor\" href=\"#第一章加载和执行小结：\" aria-hidden=\"true\">#</a> 第一章加载和执行小结：</h3>\n<ol>\n<li>把文件放在 body 标签签名，</li>\n<li>合并脚本，减少<code>&lt;script&gt;</code>标签。</li>\n<li>采用无阻塞下载 js。使用 script 的 defer 和 async 属性 异步下载。动态创建 script 标签和执行代码。</li>\n</ol>\n<h3 id=\"第二章-数据存取\"><a class=\"header-anchor\" href=\"#第二章-数据存取\" aria-hidden=\"true\">#</a> 第二章-数据存取</h3>\n<ol>\n<li><strong>js 四种基本的数据存取位置</strong>。\n1、字面量：字符串、数字、布尔、对象、数组、函数、正则、null、undefined，字面量只代表自身，没有存储位置。 2、局部变量。 let var 声明的变量。3、数组元素。4、对象成员。</li>\n</ol>\n<p>性能：<strong>访问字面量和局部变量的速度是最快的，访问数组和对象成员相对较慢</strong></p>\n<ol start=\"2\">\n<li><strong>变量标识符解析过程</strong>：</li>\n</ol>\n<p>搜索执行环境的作用域链，查找同名标识符。搜索过程从作用域链头部开始，也就是当前运行函数的活动对象。如果找到，就使用这个标识符，对应的变量；如果没有找到，继续搜索下面的对象。搜索过程会持续进行，直到找到标识符，若无法搜索到匹配的对象，那么标识符被视为未定义、</p>\n<p><strong>性能问题：一个标识符所在的位置越深，它的读写速度也就越慢</strong>。因此，函数中读写局部变量总是最快的，而读写全局变量通常是最慢的。</p>\n<p><strong>建议：将全局变量存储到局部变量，加快读写速度。</strong></p>\n<ol start=\"2\">\n<li>闭包，原型，嵌套对象。</li>\n</ol>\n<p><strong>优化建议：将常用的跨作用域变量存储到局部变量，然后直接访问局部变量</strong>。理由如上，变量标识符解析过程。</p>\n<h3 id=\"第二章数据存取小结：\"><a class=\"header-anchor\" href=\"#第二章数据存取小结：\" aria-hidden=\"true\">#</a> 第二章数据存取小结：</h3>\n<ol>\n<li>访问字面量和局部变量的速度最快，相反，访问数组元素和对象成员相对较慢。</li>\n<li>由于局部变量存在于作用域链的起始位置，因为<strong>访问局部变量比访问跨作用域变量更快。这个道理同样适用于数组，对象，跨作用域变量</strong>。</li>\n<li>把常用的对象，数组，跨域变量保存在局部变量可以改善 js 性能，局部变量访问速度更快。</li>\n</ol>\n<h3 id=\"第三章-dom-编程小结：\"><a class=\"header-anchor\" href=\"#第三章-dom-编程小结：\" aria-hidden=\"true\">#</a> 第三章 DOM 编程小结：</h3>\n<ol>\n<li><strong>dom 操作天生就慢，尽量减少 dom 操作</strong>，减少访问 dom 的次数。</li>\n<li>使用 document.querySelect 来做选择器，比其他方式快。</li>\n<li>需要多次访问某个 dom 节点，使用局部变量存储。</li>\n<li>html 集合，把集合长度缓存到一个变量中，然后遍历使用这个变量，如果经常操作集合，建议拷到一个数组中。</li>\n<li>要留意浏览器的重绘和重排；批量修改样式的时候，‘离线’操作 DOM 树，使用缓存，并减少访问布局信息的次数。\n重绘和重排是 DOM 编程优化的一个相当重要概念：<a href=\"http://web.jobbole.com/83164/\" target=\"_blank\" rel=\"noopener noreferrer\">重绘和重排<OutboundLink/></a>。</li>\n<li>动画中使用绝对定义，使用拖放处理。</li>\n<li>使用事件委托来减少事件处理器的数量。</li>\n</ol>\n<h3 id=\"第四章算法和流程控制小结：\"><a class=\"header-anchor\" href=\"#第四章算法和流程控制小结：\" aria-hidden=\"true\">#</a> 第四章算法和流程控制小结：</h3>\n<ol>\n<li>\n<p>for、while 和 do-while 循环性能差不多，<strong>for-in 循环速度只有前面几种类型的 1/7</strong>，所以尽量避免使用 for-in 循环，除非你需要遍历一个属性数量未知的对象。</p>\n<p>forEach 比 for 慢，如果运行速度要求严格，不建议使用。</p>\n</li>\n<li>\n<p>改善循环性能的最佳方式是<strong>减少每次迭代的工作量和减少循环迭代的次数</strong>。</p>\n</li>\n</ol>\n<p>减少迭代工作量：减少属性查找和倒序循环，循环次数越多，性能优化越明显。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>items<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>代码<span class=\"token punctuation\">}</span><span class=\"token comment\">//正序循环</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span>items<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>代码<span class=\"token punctuation\">}</span><span class=\"token comment\">//倒序循环</span>\n<span class=\"token comment\">//减少属性查找：查找一次属性，把值存在局部变量，在控制条件里面使用这个变量</span>\n\n倒序循环在i<span class=\"token operator\">></span><span class=\"token number\">0</span>的时候会自动转换为<span class=\"token boolean\">true</span>，等于<span class=\"token number\">0</span>的时候为<span class=\"token boolean\">false</span>。\n<span class=\"token comment\">//倒序循环：控制条件从（迭代数少于总数吗？它是否为true？）变为（它是否为true）</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div><!--beforeend--></div><!--afterend--><p>减少迭代的次数：'Duff's Device'循环体展开技术，有兴趣的可以看一下，迭代工作量大于 1000 的时候适用。</p>\n<ol start=\"3\">\n<li>\n<p>if-else 与 switch：条件数量越大，越倾向于使用 switch。</p>\n<p>优化 if-else：</p>\n<ul>\n<li>把最可能出现的条件放在首位.</li>\n<li>使用二分法把值域分成一系列的区间。</li>\n</ul>\n</li>\n<li>\n<p>浏览器的调用栈大小限制了递归算法在 js 中的应用；栈溢出错误会导致其他代码中断运行。</p>\n<pre><code>小心使用递归，现在es6递归可以尾递归，在es6中只要使用尾递归就不会发生栈溢出，相对节省性能。\n</code></pre>\n</li>\n</ol>\n<h3 id=\"第五章字符串和正则表达式小结：\"><a class=\"header-anchor\" href=\"#第五章字符串和正则表达式小结：\" aria-hidden=\"true\">#</a> 第五章字符串和正则表达式小结：</h3>\n<ol>\n<li>字符串合并的时候使用简单的'+'和'+='操作符。</li>\n</ol>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">let</span> str<span class=\"token operator\">+=</span><span class=\"token string\">'abc'</span><span class=\"token operator\">+</span>'efg<span class=\"token punctuation\">;</span><span class=\"token comment\">//2个以上的字符串拼接，会产生临时字符串</span>\n<span class=\"token keyword\">let</span> str<span class=\"token operator\">=</span>str<span class=\"token operator\">+</span><span class=\"token string\">'abc'</span><span class=\"token operator\">+</span><span class=\"token string\">'efg'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//推荐，提速10%~40%</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><ol start=\"2\">\n<li>\n<p>书里面讲的<strong>正则原理和回溯原理，这个很重要</strong>，找个篇<a href=\"http://blog.csdn.net/c_kite/article/details/77875328\" target=\"_blank\" rel=\"noopener noreferrer\">博客<OutboundLink/></a>：跟书里面讲的差不多，但还是建议大家可以去找找 PDF 好好看看正则表达式这节。</p>\n</li>\n<li>\n<p>提高正则表达式效率的方法：</p>\n<ul>\n<li>最重要的是：具体化正则表达式！具体化正则表达式！具体化正则表达式！</li>\n<li>关注如何让匹配更快失败，找出一些必需，特殊的字符</li>\n<li>正则表达式以简单的、必需的字元开始。</li>\n<li>使用量词模式，使它们后面的字元互斥。</li>\n<li>较少分支数量，缩小分支范围</li>\n<li>使用合适的量词</li>\n<li>把正则表达式赋值给变量并重用</li>\n<li>将复杂的正则拆分为简单的片段\n//事实上，书里面讲的方法不止这么几个，而且每一个都有详细的解析 大佬们 还是去看看这一章节吧</li>\n</ul>\n</li>\n<li>\n<p>正则表达式并不总是最好的解决方案，当你只是搜索字面字符串或者你事先知道字符串的哪一部分将要被查找时：</p>\n<ul>\n<li>使用 indexOf()和 lastIndexOf()更适合查找特定字符串的位置或者判断它们是否存在\n//例如：判断当前浏览器之类。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"第六章快速响应的用户界面小结：\"><a class=\"header-anchor\" href=\"#第六章快速响应的用户界面小结：\" aria-hidden=\"true\">#</a> 第六章快速响应的用户界面小结：</h3>\n<p>js 和用户界面更新在同一个进程中运行，因此一次只能处理一件事情。高效的管理 UI 线程就是要确保 js 不能运行太长时间，以免影响用户体验。</p>\n<ol>\n<li>\n<p>浏览器限制了 js 任务的运行时间，这种限制很有必要，它确保某些恶意代码不能通过永不停止的密集操作锁住用户的浏览器。此限制分为两种：调用栈的大小和长时间运行脚本。</p>\n</li>\n<li>\n<p>任何 js 任务都不应当执行超过 100 毫秒。过长的运行时间会导致 UI 更新出现明显延迟，从而对用户体验造成负面影响。</p>\n</li>\n<li>\n<p>定时器可用来安排代码延迟执行，它使得你可以把长时间运行脚本分解成一系列的小任务。</p>\n</li>\n</ol>\n<h3 id=\"第七章-ajax-小结\"><a class=\"header-anchor\" href=\"#第七章-ajax-小结\" aria-hidden=\"true\">#</a> 第七章 AJAX 小结</h3>\n<p>这一章节貌似东西都比较老一点。。</p>\n<ol>\n<li>\n<p>post 更适合发送大量数据到服务器。</p>\n</li>\n<li>\n<p>get 请求能够被浏览器缓存，Expires 头信息设置浏览器缓存请求多久。可用于从不改变的图片或者其他静态数据集（js、css 等）</p>\n</li>\n<li>\n<p>JSON 是一种使用 js 对象和数组直接量编写的轻量级且易于解析的数据格式，它不仅传输尺寸小，而且解析速度快。JSON 是高性能 AJAX 的基础，尤其在使用动态脚本注入时。</p>\n</li>\n</ol>\n<p>json 应该是近几年一直在用的。。。</p>\n<ol start=\"4\">\n<li>减少请求数，通过合并 js 和 css 文件。</li>\n<li>缩短页面的加载时间，页面主要内容加载完成后，用 AJAX 获取那些次要的文件。</li>\n</ol>\n<h3 id=\"第八章编程实践小结\"><a class=\"header-anchor\" href=\"#第八章编程实践小结\" aria-hidden=\"true\">#</a> 第八章编程实践小结</h3>\n<ol>\n<li>避免双重求值：避免使用 eval()和 function()构造器来避免双重求值带来的性能消耗，同样的，给 setTimeout()和 setInterval()传递函数而不是字符串作为参数。</li>\n</ol>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">//双重求值：就是在js代码中执行另一段js代码，不建议使用下面这些方式</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'代码'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">function</span>构造函数<span class=\"token operator\">--</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'代码'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>‘代码’<span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token function\">和setInterval</span><span class=\"token punctuation\">(</span>‘代码’<span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div><!--beforeend--></div><!--afterend--><ol start=\"2\">\n<li>尽量使用直接量创建对象和数组。直接量的创建和初始化都比非直接量形式要快。</li>\n<li>避免做重复工作，能节省的步骤就节省。</li>\n<li>js 原生方法总会比你写的任何代码都要快。</li>\n</ol>\n<h3 id=\"第九章-构建并部署高性能-js-应用小结\"><a class=\"header-anchor\" href=\"#第九章-构建并部署高性能-js-应用小结\" aria-hidden=\"true\">#</a> 第九章 构建并部署高性能 js 应用小结</h3>\n<p>构建和部署的过程对基于 js 的 web 应用的性能有着巨大影响。这个过程中最重要的步骤有：</p>\n<ol>\n<li>合并、压缩 js 文件。<strong>可使用 Gzip 压缩，能够减少约 70%的体积</strong>！</li>\n</ol>\n<p>这些都是在构建过程中完成的工作，不要等到运行时去做，webpack 也是在构建过程中，完成的工作。</p>\n<ol start=\"2\">\n<li>通过正确设置 HTTP 响应头来缓存 js 文件，通过向文件名增加时间戳来避免缓存问题。</li>\n<li>使用 CDN 提供 js 文件；CDN 不仅可以提升性能，它也为你管理文件的压缩与缓存，。</li>\n</ol>\n<h3 id=\"第十章-工具-小结：\"><a class=\"header-anchor\" href=\"#第十章-工具-小结：\" aria-hidden=\"true\">#</a> 第十章 工具 小结：</h3>\n<p>当网页变慢时，分析从网络下载的资源以及分析的资源以及分析脚本的运行性能能让你专注于那些最需要优化的地方。</p>\n<ol>\n<li>\n<p>使用网络分析工具找出加载脚本和页面中其他资源的瓶颈，这会帮助你决定那些脚本需要延迟加载，或者需要进一步分析。</p>\n<ul>\n<li>检查图片、样式表和脚本的加载过程，以及它们对页面整体加载和渲染的影响。</li>\n<li>针对性的做出优化</li>\n</ul>\n</li>\n<li>\n<p>把脚本尽可能延迟加载，这样做可以加快页面渲染速度，给用户带来更好的体验。</p>\n</li>\n<li>\n<p>确认脚本和其他资源文件的加载过程已经被优化</p>\n<ul>\n<li>这里主要是说文件从服务器的下载速度，比如服务器那边的配置问题之类的。</li>\n<li>栗子：我就被后端坑过。一个js文件就200k ，下载下来需要50秒钟！</li>\n<li>后面发现原来是后端那边nginx没有开启加速配置什么的，导致出现的问题，找问题找半天。</li>\n</ul>\n</li>\n<li>\n<p>测试脚本的运行时间,用一个 Date 实例减去另一个 Date 实例，得到的时间差就是脚本运行消耗的时间。</p>\n</li>\n</ol>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">let</span> start <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//你的代码</span>\n<span class=\"token keyword\">let</span> time <span class=\"token operator\">=</span> <span class=\"token function\">newDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><ol start=\"5\">\n<li><strong>chrome ,火狐 等主流浏览器的控制面板，已经能够反映很多性能问题</strong>。仔细分析就能找出很多问题。例如：资源加载，断点等</li>\n</ol>\n<h2 id=\"后话\"><a class=\"header-anchor\" href=\"#后话\" aria-hidden=\"true\">#</a> 后话</h2>\n<p>事实上，<strong>自认为这本书最宝贵的就是一些提到的细节</strong>，比如：</p>\n<p>1、字符串合并的时候使用简单的'+'和'+='操作符。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">let</span> str<span class=\"token operator\">+=</span><span class=\"token string\">'abc'</span><span class=\"token operator\">+</span><span class=\"token string\">'efg'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//2个以上的字符串拼接，会产生临时字符串</span>\n<span class=\"token keyword\">let</span> str<span class=\"token operator\">=</span>str<span class=\"token operator\">+</span><span class=\"token string\">'abc'</span><span class=\"token operator\">+</span><span class=\"token string\">'efg'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//推荐，提速10%~40%</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><p>2、避免双重求值：避免使用 eval()和 function()构造器来避免双重求值带来的性能消耗，同样的，给 setTimeout()和 setInterval()传递函数而不是字符串作为参数。</p>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">//双重求值：就是在js代码中执行另一段js代码，不建议使用下面这些方式</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'代码'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">function</span>构造函数<span class=\"token operator\">--</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'代码'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>‘代码’<span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token function\">和setInterval</span><span class=\"token punctuation\">(</span>‘代码’<span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"这些东西可以让我们知道什么是更好的实践，什么样的代码可以跑得更快，让我们养成更好的开发习惯。\"><a class=\"header-anchor\" href=\"#这些东西可以让我们知道什么是更好的实践，什么样的代码可以跑得更快，让我们养成更好的开发习惯。\" aria-hidden=\"true\">#</a> 这些东西可以让我们知道什么是更好的实践，什么样的代码可以跑得更快，让我们养成更好的开发习惯。</h3>\n<p>书不太厚，如果对里面的内容感兴趣，还是建议买一本回家看一看。</p>\n<p>以上 2018.1.9</p>\n<!-- '特殊字符串：用于删除编译后的issue组件-OBKoro1 -->\n"
    },
    {
      "key": "v-24bc137bafd07",
      "path": "/accumulate/effect/input%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91%E7%82%B9%E5%88%86%E4%BA%AB.html",
      "lastUpdated": 1561349297000,
      "title": "input 的一些坑点分享",
      "headers": [
        {
          "level": 2,
          "title": "input 的一些坑点分享",
          "slug": "input-的一些坑点分享"
        },
        {
          "level": 2,
          "title": "本文内容包括：",
          "slug": "本文内容包括："
        },
        {
          "level": 3,
          "title": "移动端底部 input 被弹出的键盘遮挡",
          "slug": "移动端底部-input-被弹出的键盘遮挡"
        },
        {
          "level": 3,
          "title": "控制 input 显/隐密码",
          "slug": "控制-input-显-隐密码"
        },
        {
          "level": 3,
          "title": "在 input 中输入 emoji 表情导致请求失败",
          "slug": "在-input-中输入-emoji-表情导致请求失败"
        },
        {
          "level": 3,
          "title": "textarea 多行回车换行，显示的时候换行设置：",
          "slug": "textarea-多行回车换行，显示的时候换行设置："
        },
        {
          "level": 3,
          "title": "输入框首尾清除空格-trim()",
          "slug": "输入框首尾清除空格-trim"
        },
        {
          "level": 3,
          "title": "在 input 中监听键盘事件",
          "slug": "在-input-中监听键盘事件"
        }
      ]
    },
    {
      "key": "v-93121169a085d",
      "path": "/accumulate/effect/%E5%88%A4%E6%96%AD%E7%94%A8%E6%88%B7%E6%B5%8F%E8%A7%88%E5%99%A8.html",
      "lastUpdated": 1537203231000,
      "title": "判断用户浏览器",
      "headers": [
        {
          "level": 3,
          "title": "navigator.userAgent",
          "slug": "navigator-useragent"
        },
        {
          "level": 3,
          "title": "判断方式：",
          "slug": "判断方式："
        },
        {
          "level": 3,
          "title": "示例:判断QQ和微信内置浏览器",
          "slug": "示例-判断qq和微信内置浏览器"
        }
      ]
    },
    {
      "key": "v-1a64b12f19121",
      "path": "/accumulate/effect/%E5%89%8D%E7%AB%AF%E5%BC%B9%E5%B9%95%E6%95%88%E6%9E%9C%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF.html",
      "lastUpdated": 1561349297000,
      "title": "前端弹幕效果实现思路",
      "headers": [
        {
          "level": 2,
          "title": "前端弹幕效果实现思路",
          "slug": "前端弹幕效果实现思路"
        },
        {
          "level": 2,
          "title": "实现效果：",
          "slug": "实现效果："
        },
        {
          "level": 2,
          "title": "实现原理：",
          "slug": "实现原理："
        },
        {
          "level": 2,
          "title": "实现步骤：",
          "slug": "实现步骤："
        },
        {
          "level": 3,
          "title": "1. 首先看一下html的结构。",
          "slug": "_1-首先看一下html的结构。"
        },
        {
          "level": 3,
          "title": "2.获取弹幕所需要的数据。",
          "slug": "_2-获取弹幕所需要的数据。"
        },
        {
          "level": 3,
          "title": "3.执行弹幕的函数。",
          "slug": "_3-执行弹幕的函数。"
        }
      ]
    },
    {
      "key": "v-44030872cf2c",
      "path": "/accumulate/effect/%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E7%B3%BB%E5%88%97.html",
      "lastUpdated": 1561349297000,
      "title": "前端er怎样操作复制粘贴",
      "headers": [
        {
          "level": 2,
          "title": "API 介绍:",
          "slug": "api-介绍"
        },
        {
          "level": 2,
          "title": "应用:",
          "slug": "应用"
        },
        {
          "level": 3,
          "title": "实现类知乎/掘金复制大段文本添加版权信息:",
          "slug": "实现类知乎-掘金复制大段文本添加版权信息"
        },
        {
          "level": 3,
          "title": "实现类起点网的防复制功能:",
          "slug": "实现类起点网的防复制功能"
        },
        {
          "level": 3,
          "title": "点击复制功能：",
          "slug": "点击复制功能："
        }
      ]
    },
    {
      "key": "v-13b73f2975985",
      "path": "/accumulate/effect/%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84%E5%B1%95%E5%BC%80.html",
      "lastUpdated": 1545190879000,
      "title": "多维数组展开",
      "headers": [
        {
          "level": 3,
          "title": "原理：",
          "slug": "原理："
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        }
      ]
    },
    {
      "key": "v-b8acba2dddb9d",
      "path": "/accumulate/effect/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%91%E5%AE%9A%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6.html",
      "lastUpdated": 1545190879000,
      "title": "html字符串绑定点击事件",
      "headers": [
        {
          "level": 2,
          "title": "html字符串绑定点击事件",
          "slug": "html字符串绑定点击事件"
        }
      ]
    },
    {
      "key": "v-4aae443c5cf28",
      "path": "/accumulate/effect/%E6%97%B6%E9%97%B4%E5%B7%AE%E4%B8%8E%E6%97%B6%E5%8C%BA%E8%BD%AC%E6%8D%A2.html",
      "lastUpdated": 1545190879000,
      "title": "计算两个时间的时间差&时区转换",
      "headers": [
        {
          "level": 2,
          "title": "计算两个时间的时间差&时区转换",
          "slug": "计算两个时间的时间差-时区转换"
        },
        {
          "level": 3,
          "title": "计算两个时间的时间差：",
          "slug": "计算两个时间的时间差："
        },
        {
          "level": 3,
          "title": "时区转换",
          "slug": "时区转换"
        }
      ]
    },
    {
      "key": "v-bd1d2fccebbbe",
      "path": "/accumulate/effect/%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E5%AF%86%E7%A0%81.html",
      "lastUpdated": 1559195456000,
      "title": "显示隐藏密码",
      "headers": [
        {
          "level": 2,
          "title": "显示隐藏密码",
          "slug": "显示隐藏密码"
        },
        {
          "level": 3,
          "title": "效果：",
          "slug": "效果："
        },
        {
          "level": 3,
          "title": "CodePen:",
          "slug": "codepen"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        }
      ]
    },
    {
      "key": "v-6c7fdb735aa42",
      "path": "/accumulate/effect/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%BB%93%E6%9E%84%E8%BD%AC%E5%8C%96.html",
      "lastUpdated": 1561349297000,
      "title": "树状数组结构转化",
      "headers": [
        {
          "level": 2,
          "title": "树状数组结构转化",
          "slug": "树状数组结构转化"
        },
        {
          "level": 3,
          "title": "题目如下：",
          "slug": "题目如下："
        },
        {
          "level": 3,
          "title": "传进去的数组：",
          "slug": "传进去的数组："
        },
        {
          "level": 3,
          "title": "输出的数组：",
          "slug": "输出的数组："
        },
        {
          "level": 3,
          "title": "建议大家好好想想，争取能够自己解出来",
          "slug": "建议大家好好想想，争取能够自己解出来"
        },
        {
          "level": 3,
          "title": "参考一下我的解题方法：",
          "slug": "参考一下我的解题方法："
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "更好的解决方式：只关注层级有没有被组装过",
          "slug": "更好的解决方式：只关注层级有没有被组装过"
        }
      ]
    },
    {
      "key": "v-b7752609fe98f",
      "path": "/accumulate/effect/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%94%B6%E9%9B%86.html",
      "lastUpdated": 1561349297000,
      "title": "常见正则表达式合集",
      "headers": [
        {
          "level": 2,
          "title": "常见正则表达式合集",
          "slug": "常见正则表达式合集"
        },
        {
          "level": 3,
          "title": "如何验证？",
          "slug": "如何验证？"
        },
        {
          "level": 3,
          "title": "身份证号码正则表达式：",
          "slug": "身份证号码正则表达式："
        },
        {
          "level": 3,
          "title": "手机号码正则表达式：",
          "slug": "手机号码正则表达式："
        },
        {
          "level": 3,
          "title": "邮箱正则表达式：",
          "slug": "邮箱正则表达式："
        },
        {
          "level": 3,
          "title": "用户名正则:",
          "slug": "用户名正则"
        },
        {
          "level": 3,
          "title": "密码正则:",
          "slug": "密码正则"
        },
        {
          "level": 3,
          "title": "QQ 号码正则:",
          "slug": "qq-号码正则"
        },
        {
          "level": 3,
          "title": "微信号码正则:",
          "slug": "微信号码正则"
        },
        {
          "level": 3,
          "title": "特殊字符检测正则:",
          "slug": "特殊字符检测正则"
        },
        {
          "level": 3,
          "title": "域名正则:",
          "slug": "域名正则"
        },
        {
          "level": 3,
          "title": "车牌号码正则:",
          "slug": "车牌号码正则"
        },
        {
          "level": 3,
          "title": "包含中文正则:",
          "slug": "包含中文正则"
        },
        {
          "level": 3,
          "title": "护照正则:",
          "slug": "护照正则"
        },
        {
          "level": 3,
          "title": "固定电话正则：",
          "slug": "固定电话正则："
        },
        {
          "level": 3,
          "title": "IP 地址正则:",
          "slug": "ip-地址正则"
        },
        {
          "level": 3,
          "title": "邮政编码正则:",
          "slug": "邮政编码正则"
        },
        {
          "level": 3,
          "title": "经纬度正则",
          "slug": "经纬度正则"
        }
      ]
    },
    {
      "key": "v-8547e3642ef35",
      "path": "/accumulate/effect/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%A1%8C%E9%9D%A2%E9%80%9A%E7%9F%A5.html",
      "lastUpdated": 1561349297000,
      "title": "H5 notification浏览器桌面通知",
      "headers": [
        {
          "level": 2,
          "title": "H5 notification浏览器桌面通知",
          "slug": "h5-notification浏览器桌面通知"
        },
        {
          "level": 3,
          "title": "npm包：",
          "slug": "npm包："
        },
        {
          "level": 3,
          "title": "chrome下Notification的表现：",
          "slug": "chrome下notification的表现："
        },
        {
          "level": 3,
          "title": "Notification特性",
          "slug": "notification特性"
        },
        {
          "level": 3,
          "title": "栗子：去各个网站里面的控制台去运行",
          "slug": "栗子：去各个网站里面的控制台去运行"
        },
        {
          "level": 3,
          "title": "浏览器支持：",
          "slug": "浏览器支持："
        },
        {
          "level": 3,
          "title": "通知权限：",
          "slug": "通知权限："
        },
        {
          "level": 3,
          "title": "检测权限：",
          "slug": "检测权限："
        },
        {
          "level": 3,
          "title": "请求权限",
          "slug": "请求权限"
        },
        {
          "level": 3,
          "title": "推送通知",
          "slug": "推送通知"
        },
        {
          "level": 3,
          "title": "Notification的参数：",
          "slug": "notification的参数："
        },
        {
          "level": 2,
          "title": "Notification的实例：",
          "slug": "notification的实例："
        },
        {
          "level": 3,
          "title": "通知的配置：",
          "slug": "通知的配置："
        },
        {
          "level": 3,
          "title": "事件处理：",
          "slug": "事件处理："
        },
        {
          "level": 3,
          "title": "关闭通知",
          "slug": "关闭通知"
        },
        {
          "level": 3,
          "title": "应用场景",
          "slug": "应用场景"
        },
        {
          "level": 2,
          "title": "notification其他",
          "slug": "notification其他"
        },
        {
          "level": 3,
          "title": "用户拒绝显示通知：",
          "slug": "用户拒绝显示通知："
        },
        {
          "level": 3,
          "title": "关闭请求权限：",
          "slug": "关闭请求权限："
        },
        {
          "level": 3,
          "title": "icon不显示问题：",
          "slug": "icon不显示问题："
        },
        {
          "level": 3,
          "title": "tag：",
          "slug": "tag："
        },
        {
          "level": 3,
          "title": "safari下面不能显示icon",
          "slug": "safari下面不能显示icon"
        },
        {
          "level": 3,
          "title": "连续触发",
          "slug": "连续触发"
        },
        {
          "level": 3,
          "title": "notification-Koro1：",
          "slug": "notification-koro1："
        },
        {
          "level": 2,
          "title": "结语",
          "slug": "结语"
        }
      ]
    },
    {
      "key": "v-9997508c5c58b",
      "path": "/accumulate/effect/%E6%BB%9A%E5%8A%A8%E5%BA%95%E9%83%A8.html",
      "lastUpdated": 1561349297000,
      "title": "判断div滚动到底部",
      "headers": [
        {
          "level": 2,
          "title": "判断div滚动到底部",
          "slug": "判断div滚动到底部"
        },
        {
          "level": 3,
          "title": "codepen",
          "slug": "codepen"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-69c674ae7c7f4",
      "path": "/accumulate/effect/%E7%BD%91%E9%A1%B5%E5%85%A8%E5%B1%8F.html",
      "lastUpdated": 1561349297000,
      "title": "全屏模式轻松掌握[局部元素全屏展示]",
      "headers": [
        {
          "level": 2,
          "title": "全屏模式轻松掌握[局部元素全屏展示]",
          "slug": "全屏模式轻松掌握-局部元素全屏展示"
        },
        {
          "level": 3,
          "title": "CodePen Demo",
          "slug": "codepen-demo"
        },
        {
          "level": 3,
          "title": "全屏功能封装在一个类里面：",
          "slug": "全屏功能封装在一个类里面："
        },
        {
          "level": 3,
          "title": "何谓全屏？",
          "slug": "何谓全屏？"
        },
        {
          "level": 2,
          "title": "全屏API：",
          "slug": "全屏api："
        },
        {
          "level": 3,
          "title": "浏览器前缀：",
          "slug": "浏览器前缀："
        },
        {
          "level": 3,
          "title": "1. 浏览器是否支持全屏模式：document.fullscreenEnabled",
          "slug": "_1-浏览器是否支持全屏模式：document-fullscreenenabled"
        },
        {
          "level": 3,
          "title": "2. 使元素进入全屏模式：Element.requestFullscreen()",
          "slug": "_2-使元素进入全屏模式：element-requestfullscreen"
        },
        {
          "level": 3,
          "title": "3. 退出全屏：document.exitFullscreen()",
          "slug": "_3-退出全屏：document-exitfullscreen"
        },
        {
          "level": 3,
          "title": "4. 检查当前是否有节点处于全屏状态：document.fullscreenElement",
          "slug": "_4-检查当前是否有节点处于全屏状态：document-fullscreenelement"
        },
        {
          "level": 3,
          "title": "5. 进入全屏/离开全屏，触发事件：document.fullscreenchange",
          "slug": "_5-进入全屏-离开全屏，触发事件：document-fullscreenchange"
        },
        {
          "level": 3,
          "title": "6. 无法进入全屏时触发: document.fullscreenerror",
          "slug": "_6-无法进入全屏时触发-document-fullscreenerror"
        },
        {
          "level": 3,
          "title": "Css： 全屏模式下的样式",
          "slug": "css：-全屏模式下的样式"
        },
        {
          "level": 2,
          "title": "结语",
          "slug": "结语"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-eb76f9662428a",
      "path": "/accumulate/effect/%E7%BD%91%E9%A1%B5%E6%A0%87%E9%A2%98%E9%97%AA%E7%83%81.html",
      "lastUpdated": 1561349297000,
      "title": "网页标题/标签 闪烁",
      "headers": [
        {
          "level": 2,
          "title": "网页标题/标签 闪烁",
          "slug": "网页标题-标签-闪烁"
        },
        {
          "level": 3,
          "title": "效果：",
          "slug": "效果："
        },
        {
          "level": 3,
          "title": "实现代码",
          "slug": "实现代码"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-189ac8662841e",
      "path": "/accumulate/effect/%E9%80%80%E5%87%BA%E9%A1%B5%E9%9D%A2%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82.html",
      "lastUpdated": 1561349297000,
      "title": "Web sendBeacon 刷新/关闭页面之前发送请求",
      "headers": [
        {
          "level": 2,
          "title": "Web sendBeacon 刷新/关闭页面之前发送请求",
          "slug": "web-sendbeacon-刷新-关闭页面之前发送请求"
        },
        {
          "level": 3,
          "title": "背景：",
          "slug": "背景："
        },
        {
          "level": 3,
          "title": "退出页面场景：",
          "slug": "退出页面场景："
        },
        {
          "level": 3,
          "title": "还在本网站，跳到其他路由",
          "slug": "还在本网站，跳到其他路由"
        },
        {
          "level": 2,
          "title": "beforeunload和unload",
          "slug": "beforeunload和unload"
        },
        {
          "level": 3,
          "title": "beforeunload 当浏览器窗口关闭或者刷新时触发:",
          "slug": "beforeunload-当浏览器窗口关闭或者刷新时触发"
        },
        {
          "level": 3,
          "title": "unload当页面正在被卸载的时候触发该事件",
          "slug": "unload当页面正在被卸载的时候触发该事件"
        },
        {
          "level": 2,
          "title": "缺陷与更好的建议：",
          "slug": "缺陷与更好的建议："
        },
        {
          "level": 3,
          "title": "性能缺陷：",
          "slug": "性能缺陷："
        },
        {
          "level": 3,
          "title": "Beacon API",
          "slug": "beacon-api"
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        }
      ]
    },
    {
      "key": "v-6646306c76143",
      "path": "/accumulate/little/template.html",
      "lastUpdated": 1561349297000,
      "title": "标题",
      "headers": [
        {
          "level": 2,
          "title": "标题",
          "slug": "标题"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-9d47a8e301b8",
      "path": "/accumulate/template.html",
      "lastUpdated": 1561349297000,
      "title": "标题",
      "headers": [
        {
          "level": 2,
          "title": "标题",
          "slug": "标题"
        },
        {
          "level": 3,
          "title": "支持一下：",
          "slug": "支持一下："
        }
      ]
    },
    {
      "key": "v-40613df194372",
      "path": "/accumulate/tool/Eslint%E8%87%AA%E5%8A%A8%E4%BF%AE%E5%A4%8D%E6%A0%BC%E5%BC%8F%E9%94%99%E8%AF%AF.html",
      "lastUpdated": 1561349297000,
      "title": "VsCode保存时自动修复Eslint错误",
      "headers": [
        {
          "level": 2,
          "title": "VsCode保存时自动修复Eslint错误",
          "slug": "vscode保存时自动修复eslint错误"
        },
        {
          "level": 2,
          "title": "保存时自动统一代码风格：",
          "slug": "保存时自动统一代码风格："
        },
        {
          "level": 2,
          "title": "配置：",
          "slug": "配置："
        },
        {
          "level": 3,
          "title": "1.安装VsCode的EsLint和vetur插件",
          "slug": "_1-安装vscode的eslint和vetur插件"
        },
        {
          "level": 3,
          "title": "2.为项目安装EsLint包：",
          "slug": "_2-为项目安装eslint包："
        },
        {
          "level": 3,
          "title": "3.在项目的根目录下添加.eslintrc.js",
          "slug": "_3-在项目的根目录下添加-eslintrc-js"
        },
        {
          "level": 3,
          "title": "4.首选项设置：",
          "slug": "_4-首选项设置："
        },
        {
          "level": 3,
          "title": "大功告成：",
          "slug": "大功告成："
        },
        {
          "level": 3,
          "title": "一键修复项目格式问题：",
          "slug": "一键修复项目格式问题："
        },
        {
          "level": 3,
          "title": ".eslintignore 不检测一些文件：",
          "slug": "eslintignore-不检测一些文件："
        },
        {
          "level": 3,
          "title": "自定义规则：",
          "slug": "自定义规则："
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-4dc56fb56eef9",
      "path": "/accumulate/tool/http%E7%BC%93%E5%AD%98.html",
      "lastUpdated": 1561349297000,
      "title": "谈论HTTP缓存时我们在谈论什么",
      "headers": [
        {
          "level": 2,
          "title": "谈论HTTP缓存时我们在谈论什么",
          "slug": "谈论http缓存时我们在谈论什么"
        },
        {
          "level": 3,
          "title": "当我们在谈论HTTP缓存时我们在谈论什么:",
          "slug": "当我们在谈论http缓存时我们在谈论什么"
        },
        {
          "level": 3,
          "title": "缓存流程：",
          "slug": "缓存流程："
        },
        {
          "level": 3,
          "title": "强缓存与弱缓存的区别：",
          "slug": "强缓存与弱缓存的区别："
        },
        {
          "level": 3,
          "title": "强缓存：",
          "slug": "强缓存："
        },
        {
          "level": 3,
          "title": "Cache-Control",
          "slug": "cache-control"
        },
        {
          "level": 3,
          "title": "http1.0时代的缓存 Expires+Pragma",
          "slug": "http1-0时代的缓存-expires-pragma"
        },
        {
          "level": 3,
          "title": "强缓存命中 from memory cache & from disk cache",
          "slug": "强缓存命中-from-memory-cache-from-disk-cache"
        },
        {
          "level": 3,
          "title": "弱缓存：",
          "slug": "弱缓存："
        },
        {
          "level": 3,
          "title": "Etag/lastModified过程如下:",
          "slug": "etag-lastmodified过程如下"
        },
        {
          "level": 3,
          "title": "同时使用两个报文头:",
          "slug": "同时使用两个报文头"
        },
        {
          "level": 3,
          "title": "Etag 主要为了解决 Last-Modified 无法解决的一些问题：",
          "slug": "etag-主要为了解决-last-modified-无法解决的一些问题："
        },
        {
          "level": 3,
          "title": "用户操作行为与缓存",
          "slug": "用户操作行为与缓存"
        },
        {
          "level": 3,
          "title": "如何设置？",
          "slug": "如何设置？"
        },
        {
          "level": 3,
          "title": "小结",
          "slug": "小结"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-95516fdf20f87",
      "path": "/accumulate/tool/js%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E6%9C%BA%E5%88%B6.html",
      "lastUpdated": 1561349297000,
      "title": "事件循环(Event Loop)机制以及实例",
      "headers": [
        {
          "level": 2,
          "title": "事件循环(Event Loop)机制以及实例",
          "slug": "事件循环-event-loop-机制以及实例"
        },
        {
          "level": 3,
          "title": "为什么js是单线程？",
          "slug": "为什么js是单线程？"
        },
        {
          "level": 2,
          "title": "执行栈与任务队列",
          "slug": "执行栈与任务队列"
        },
        {
          "level": 3,
          "title": "执行栈",
          "slug": "执行栈"
        },
        {
          "level": 3,
          "title": "主线程",
          "slug": "主线程"
        },
        {
          "level": 3,
          "title": "js 异步执行的运行机制。",
          "slug": "js-异步执行的运行机制。"
        },
        {
          "level": 3,
          "title": "宏任务与微任务:",
          "slug": "宏任务与微任务"
        },
        {
          "level": 2,
          "title": "Event Loop(事件循环)：",
          "slug": "event-loop-事件循环-："
        },
        {
          "level": 2,
          "title": "面试题实践",
          "slug": "面试题实践"
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-0e99f1853b7bf",
      "path": "/accumulate/tool/js%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6.html",
      "lastUpdated": 1561349297000,
      "title": "JS高程中的垃圾回收机制与常见内存泄露的解决方法",
      "headers": [
        {
          "level": 2,
          "title": "JS高程中的垃圾回收机制与常见内存泄露的解决方法",
          "slug": "js高程中的垃圾回收机制与常见内存泄露的解决方法"
        },
        {
          "level": 3,
          "title": "内存的生命周期：",
          "slug": "内存的生命周期："
        },
        {
          "level": 2,
          "title": "垃圾回收机制：",
          "slug": "垃圾回收机制："
        },
        {
          "level": 3,
          "title": "垃圾收集机制的原理：",
          "slug": "垃圾收集机制的原理："
        },
        {
          "level": 3,
          "title": "标记清除：当前采用的垃圾收集策略",
          "slug": "标记清除：当前采用的垃圾收集策略"
        },
        {
          "level": 3,
          "title": "引用计数略：被废弃的垃圾收集策略",
          "slug": "引用计数略：被废弃的垃圾收集策略"
        },
        {
          "level": 2,
          "title": "哪些情况会引起内存泄漏？",
          "slug": "哪些情况会引起内存泄漏？"
        },
        {
          "level": 3,
          "title": "意外的全局变量：",
          "slug": "意外的全局变量："
        },
        {
          "level": 3,
          "title": "被遗忘的定时器和回调函数",
          "slug": "被遗忘的定时器和回调函数"
        },
        {
          "level": 3,
          "title": "闭包：",
          "slug": "闭包："
        },
        {
          "level": 3,
          "title": "循环引用问题",
          "slug": "循环引用问题"
        },
        {
          "level": 3,
          "title": "没有清理DOM元素引用：",
          "slug": "没有清理dom元素引用："
        },
        {
          "level": 3,
          "title": "console保存大量数据在内存中。",
          "slug": "console保存大量数据在内存中。"
        },
        {
          "level": 3,
          "title": "如何避免内存泄漏：",
          "slug": "如何避免内存泄漏："
        },
        {
          "level": 3,
          "title": "关于内存泄漏：",
          "slug": "关于内存泄漏："
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-6772ddcd46a1",
      "path": "/accumulate/tool/koroFileHeader.html",
      "lastUpdated": 1561349297000,
      "title": "koroFileHeader",
      "headers": [
        {
          "level": 2,
          "title": "language",
          "slug": "language"
        },
        {
          "level": 2,
          "title": "一些文档",
          "slug": "一些文档"
        },
        {
          "level": 2,
          "title": "简介",
          "slug": "简介"
        },
        {
          "level": 2,
          "title": "安装",
          "slug": "安装"
        },
        {
          "level": 2,
          "title": "使用",
          "slug": "使用"
        },
        {
          "level": 2,
          "title": "注释模板的设置",
          "slug": "注释模板的设置"
        },
        {
          "level": 2,
          "title": "最后",
          "slug": "最后"
        }
      ]
    },
    {
      "key": "v-9149778dfd752",
      "path": "/accumulate/tool/%E4%B8%80%E4%BB%BD%E8%B6%85%E7%BA%A7%E8%AF%A6%E7%BB%86%E7%9A%84Vue-cli3.0%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html",
      "lastUpdated": 1561349297000,
      "title": "一份超级详细的Vue-cli3.0使用教程",
      "headers": [
        {
          "level": 2,
          "title": "一份超级详细的Vue-cli3.0使用教程",
          "slug": "一份超级详细的vue-cli3-0使用教程"
        },
        {
          "level": 3,
          "title": "主要内容：",
          "slug": "主要内容："
        },
        {
          "level": 2,
          "title": "安装：",
          "slug": "安装："
        },
        {
          "level": 3,
          "title": "卸载旧版本：",
          "slug": "卸载旧版本："
        },
        {
          "level": 3,
          "title": "Node版本要求：",
          "slug": "node版本要求："
        },
        {
          "level": 3,
          "title": "安装vue-cli:",
          "slug": "安装vue-cli"
        },
        {
          "level": 2,
          "title": "零配置启动/打包一个.vue文件：",
          "slug": "零配置启动-打包一个-vue文件："
        },
        {
          "level": 3,
          "title": "安装扩展：",
          "slug": "安装扩展："
        },
        {
          "level": 3,
          "title": "如下图，只需一个.vue文件，就能迅速启动一个服务：",
          "slug": "如下图，只需一个-vue文件，就能迅速启动一个服务："
        },
        {
          "level": 2,
          "title": "第一次创建项目:",
          "slug": "第一次创建项目"
        },
        {
          "level": 3,
          "title": "1. 命令行:",
          "slug": "_1-命令行"
        },
        {
          "level": 3,
          "title": "2. 选择模板:",
          "slug": "_2-选择模板"
        },
        {
          "level": 3,
          "title": "3. 选择配置：",
          "slug": "_3-选择配置："
        },
        {
          "level": 3,
          "title": "4. 选择css预处理器:",
          "slug": "_4-选择css预处理器"
        },
        {
          "level": 3,
          "title": "5. 是否使用路由的history模式：",
          "slug": "_5-是否使用路由的history模式："
        },
        {
          "level": 3,
          "title": "6. 选择Eslint代码验证规则：",
          "slug": "_6-选择eslint代码验证规则："
        },
        {
          "level": 3,
          "title": "7. 选择什么时候进行代码规则检测：",
          "slug": "_7-选择什么时候进行代码规则检测："
        },
        {
          "level": 3,
          "title": "8. 选择e2e测试:",
          "slug": "_8-选择e2e测试"
        },
        {
          "level": 3,
          "title": "9. 把babel,postcss,eslint这些配置文件放哪：",
          "slug": "_9-把babel-postcss-eslint这些配置文件放哪："
        },
        {
          "level": 3,
          "title": "10. 是否保存配置：",
          "slug": "_10-是否保存配置："
        },
        {
          "level": 3,
          "title": "11. 下载依赖",
          "slug": "_11-下载依赖"
        },
        {
          "level": 3,
          "title": "12. webpack配置的目录不见了：",
          "slug": "_12-webpack配置的目录不见了："
        },
        {
          "level": 3,
          "title": "13.启动项目：",
          "slug": "_13-启动项目："
        },
        {
          "level": 2,
          "title": "使用图形化界面创建/管理/运行项目：",
          "slug": "使用图形化界面创建-管理-运行项目："
        },
        {
          "level": 3,
          "title": "启动图形化界面",
          "slug": "启动图形化界面"
        },
        {
          "level": 3,
          "title": "创建项目和导入项目：",
          "slug": "创建项目和导入项目："
        },
        {
          "level": 3,
          "title": "项目管理：",
          "slug": "项目管理："
        },
        {
          "level": 2,
          "title": "结语",
          "slug": "结语"
        },
        {
          "level": 3,
          "title": "希望看完的朋友可以点个喜欢/关注，您的支持是对我最大的鼓励。",
          "slug": "希望看完的朋友可以点个喜欢-关注，您的支持是对我最大的鼓励。"
        }
      ]
    },
    {
      "key": "v-24141c0c65099",
      "path": "/accumulate/tool/%E5%BF%8D%E8%80%85%E7%A7%98%E7%B1%8D%E5%AE%9A%E6%97%B6%E5%99%A8%E6%9C%BA%E5%88%B6.html",
      "lastUpdated": 1561349297000,
      "title": "JS忍者秘籍中的定时器机制详解",
      "headers": [
        {
          "level": 2,
          "title": "JS忍者秘籍中的定时器机制详解",
          "slug": "js忍者秘籍中的定时器机制详解"
        },
        {
          "level": 3,
          "title": "准备",
          "slug": "准备"
        },
        {
          "level": 3,
          "title": "定时器解决的问题：",
          "slug": "定时器解决的问题："
        },
        {
          "level": 3,
          "title": "设置和清除定时器：",
          "slug": "设置和清除定时器："
        },
        {
          "level": 3,
          "title": "注意：",
          "slug": "注意："
        },
        {
          "level": 2,
          "title": "执行线程中的定时器执行",
          "slug": "执行线程中的定时器执行"
        },
        {
          "level": 3,
          "title": "事件排队。",
          "slug": "事件排队。"
        },
        {
          "level": 3,
          "title": "先进先出(先排队的先执行)",
          "slug": "先进先出-先排队的先执行"
        },
        {
          "level": 3,
          "title": "setInterval调用被废弃",
          "slug": "setinterval调用被废弃"
        },
        {
          "level": 3,
          "title": "setTimeout/setInterval无法保证准时执行回调函数",
          "slug": "settimeout-setinterval无法保证准时执行回调函数"
        },
        {
          "level": 3,
          "title": "setInterval的连续执行",
          "slug": "setinterval的连续执行"
        },
        {
          "level": 3,
          "title": "setTimeout按照一定的间隔周期性的触发定时器。",
          "slug": "settimeout按照一定的间隔周期性的触发定时器。"
        },
        {
          "level": 3,
          "title": "忍者秘籍中关于定时器的其他知识：",
          "slug": "忍者秘籍中关于定时器的其他知识："
        },
        {
          "level": 3,
          "title": "任务队列只有排队这么简单吗？",
          "slug": "任务队列只有排队这么简单吗？"
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-60f62c8ced94c",
      "path": "/accumulate/tool/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB%E6%95%B0%E5%AD%97%E6%88%90%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81.html",
      "lastUpdated": 1540827114000,
      "title": "浏览器自动识别数字成电话号码",
      "headers": [
        {
          "level": 2,
          "title": "浏览器自动识别数字成电话号码",
          "slug": "浏览器自动识别数字成电话号码"
        }
      ]
    },
    {
      "key": "v-c6e00ce46ef71",
      "path": "/accumulate/tool/%E6%B5%8F%E8%A7%88%E5%99%A8%E9%87%8D%E7%BB%98%E9%87%8D%E6%8E%92.html",
      "lastUpdated": 1561349297000,
      "title": "轻松掌握浏览器重绘重排原理",
      "headers": [
        {
          "level": 2,
          "title": "轻松掌握浏览器重绘重排原理",
          "slug": "轻松掌握浏览器重绘重排原理"
        },
        {
          "level": 3,
          "title": "网页生成过程：",
          "slug": "网页生成过程："
        },
        {
          "level": 2,
          "title": "渲染：",
          "slug": "渲染："
        },
        {
          "level": 3,
          "title": "重排比重绘大：",
          "slug": "重排比重绘大："
        },
        {
          "level": 2,
          "title": "重排(reflow)：",
          "slug": "重排-reflow-："
        },
        {
          "level": 3,
          "title": "概念：",
          "slug": "概念："
        },
        {
          "level": 3,
          "title": "常见引起重排属性和方法",
          "slug": "常见引起重排属性和方法"
        },
        {
          "level": 3,
          "title": "重排影响的范围：",
          "slug": "重排影响的范围："
        },
        {
          "level": 3,
          "title": "尽可能的减少重排的次数、重排范围：",
          "slug": "尽可能的减少重排的次数、重排范围："
        },
        {
          "level": 2,
          "title": "重绘(Repaints):",
          "slug": "重绘-repaints"
        },
        {
          "level": 2,
          "title": "浏览器的渲染队列：",
          "slug": "浏览器的渲染队列："
        },
        {
          "level": 3,
          "title": "强制刷新队列:",
          "slug": "强制刷新队列"
        },
        {
          "level": 2,
          "title": "重排优化建议",
          "slug": "重排优化建议"
        },
        {
          "level": 3,
          "title": "1. 分离读写操作",
          "slug": "_1-分离读写操作"
        },
        {
          "level": 3,
          "title": "2. 样式集中改变",
          "slug": "_2-样式集中改变"
        },
        {
          "level": 3,
          "title": "3. 缓存布局信息",
          "slug": "_3-缓存布局信息"
        },
        {
          "level": 3,
          "title": "4. 离线改变dom",
          "slug": "_4-离线改变dom"
        },
        {
          "level": 3,
          "title": "5. position属性为absolute或fixed",
          "slug": "_5-position属性为absolute或fixed"
        },
        {
          "level": 3,
          "title": "6. 优化动画",
          "slug": "_6-优化动画"
        },
        {
          "level": 2,
          "title": "结语",
          "slug": "结语"
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-c334ce4c5e564",
      "path": "/algorithm/",
      "lastUpdated": 1561349297000,
      "title": "前端算法",
      "headers": [
        {
          "level": 2,
          "title": "前端算法",
          "slug": "前端算法"
        },
        {
          "level": 2,
          "title": "前端积累",
          "slug": "前端积累"
        },
        {
          "level": 3,
          "title": "公众号：",
          "slug": "公众号："
        },
        {
          "level": 3,
          "title": "最新更新：",
          "slug": "最新更新："
        }
      ]
    },
    {
      "key": "v-115c629329bf7",
      "path": "/algorithm/induction/%E5%8F%8D%E8%BD%AC3%E4%BD%8D%E6%95%B4%E6%95%B0.html",
      "lastUpdated": 1536751480000,
      "title": "反转一个 3 位整数",
      "headers": [
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "题目分析：",
          "slug": "题目分析："
        },
        {
          "level": 3,
          "title": "转数组操作:",
          "slug": "转数组操作"
        },
        {
          "level": 3,
          "title": "取余数，逐个颠倒",
          "slug": "取余数，逐个颠倒"
        },
        {
          "level": 3,
          "title": "拼接字符串：",
          "slug": "拼接字符串："
        }
      ]
    },
    {
      "key": "v-436d2e0ab580a",
      "path": "/algorithm/induction/%E6%95%B0%E7%BB%84%E9%87%8D%E5%A4%8D%E6%AC%A1%E6%95%B0.html",
      "lastUpdated": 1537360696000,
      "title": "找出数组重复次数最多的元素",
      "headers": [
        {
          "level": 2,
          "title": "找出数组重复次数最多的元素",
          "slug": "找出数组重复次数最多的元素"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "题目分析：",
          "slug": "题目分析："
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        }
      ]
    },
    {
      "key": "v-75258b8324e9",
      "path": "/algorithm/induction/%E6%9F%A5%E6%89%BE%E6%96%90%E6%B3%A2%E7%BA%B3%E5%A5%91%E6%95%B0%E5%88%97%E4%B8%AD%E7%AC%ACN%E4%B8%AA%E6%95%B0.html",
      "lastUpdated": 1561349297000,
      "title": "查找斐波纳契数列中第 N 个数",
      "headers": [
        {
          "level": 2,
          "title": "查找斐波纳契数列中第 N 个数",
          "slug": "查找斐波纳契数列中第-n-个数"
        },
        {
          "level": 3,
          "title": "描述",
          "slug": "描述"
        },
        {
          "level": 3,
          "title": "怎样算解成功：",
          "slug": "怎样算解成功："
        },
        {
          "level": 3,
          "title": "题目分析：",
          "slug": "题目分析："
        },
        {
          "level": 3,
          "title": "code:",
          "slug": "code"
        },
        {
          "level": 3,
          "title": "代码地址",
          "slug": "代码地址"
        }
      ]
    },
    {
      "key": "v-780fc54d7c742",
      "path": "/algorithm/induction/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0.html",
      "lastUpdated": 1550490873000,
      "title": "水仙花数",
      "headers": [
        {
          "level": 2,
          "title": "水仙花数",
          "slug": "水仙花数"
        },
        {
          "level": 3,
          "title": "水仙花数的定义：",
          "slug": "水仙花数的定义："
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "题目分析:",
          "slug": "题目分析"
        },
        {
          "level": 3,
          "title": "判断一个数是否为水仙花数：",
          "slug": "判断一个数是否为水仙花数："
        },
        {
          "level": 3,
          "title": "找出所有的n位十进制水仙花数",
          "slug": "找出所有的n位十进制水仙花数"
        }
      ]
    },
    {
      "key": "v-d08164615cf94",
      "path": "/algorithm/medium/%E4%B8%91%E6%95%B0.html",
      "lastUpdated": 1541922487000,
      "title": "丑数",
      "headers": [
        {
          "level": 2,
          "title": "丑数",
          "slug": "丑数"
        },
        {
          "level": 3,
          "title": "难度：中等",
          "slug": "难度：中等"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-4fa29a13cc5bd",
      "path": "/algorithm/medium/%E7%AC%ACk%E5%A4%A7%E5%85%83%E7%B4%A0.html",
      "lastUpdated": 1541922487000,
      "title": "第 k 大元素",
      "headers": [
        {
          "level": 2,
          "title": "第 k 大元素",
          "slug": "第-k-大元素"
        },
        {
          "level": 3,
          "title": "难度：中等",
          "slug": "难度：中等"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-a4d21178b555a",
      "path": "/algorithm/medium/%E7%BB%9F%E8%AE%A1%E6%95%B0%E5%AD%97.html",
      "lastUpdated": 1541922487000,
      "title": "统计数字",
      "headers": [
        {
          "level": 2,
          "title": "统计数字",
          "slug": "统计数字"
        },
        {
          "level": 3,
          "title": "难度：中等",
          "slug": "难度：中等"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-f61dd7c8bba8b",
      "path": "/algorithm/simple/%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0.html",
      "lastUpdated": 1541317661000,
      "title": "丢失的数",
      "headers": [
        {
          "level": 2,
          "title": "丢失的数",
          "slug": "丢失的数"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-fa603c923ee7a",
      "path": "/algorithm/simple/%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%8F%98%E4%BD%8D%E8%AF%8D.html",
      "lastUpdated": 1540382851000,
      "title": "两个字符串是变位词",
      "headers": [
        {
          "level": 2,
          "title": "两个字符串是变位词",
          "slug": "两个字符串是变位词"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-e8b08c0f5853f",
      "path": "/algorithm/simple/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html",
      "lastUpdated": 1540382851000,
      "title": "两数之和",
      "headers": [
        {
          "level": 2,
          "title": "两数之和",
          "slug": "两数之和"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-3d1f59a65af81",
      "path": "/algorithm/simple/%E4%B8%AD%E4%BD%8D%E6%95%B0.html",
      "lastUpdated": 1540382851000,
      "title": "中位数",
      "headers": [
        {
          "level": 2,
          "title": "中位数",
          "slug": "中位数"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-884f44a45fa6",
      "path": "/algorithm/simple/%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E6%95%B0.html",
      "lastUpdated": 1537692909000,
      "title": "分解质因数",
      "headers": [
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "质因数的定义：",
          "slug": "质因数的定义："
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "题目分析：",
          "slug": "题目分析："
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        }
      ]
    },
    {
      "key": "v-2fdd380b37d4c",
      "path": "/algorithm/simple/%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0.html",
      "lastUpdated": 1540382851000,
      "title": "原地删除数组元素",
      "headers": [
        {
          "level": 2,
          "title": "原地删除数组元素",
          "slug": "原地删除数组元素"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-cf9007af6e5c5",
      "path": "/algorithm/simple/%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%BE%AA%E7%8E%AF%E7%A7%BB%E5%8A%A8.html",
      "lastUpdated": 1541317661000,
      "title": "判断字符串的循环移动",
      "headers": [
        {
          "level": 2,
          "title": "判断字符串的循环移动",
          "slug": "判断字符串的循环移动"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-ac6b3dedfba8a",
      "path": "/algorithm/simple/%E5%8F%8D%E8%BD%AC%E6%95%B4%E6%95%B0.html",
      "lastUpdated": 1559195456000,
      "title": "反转整数",
      "headers": [
        {
          "level": 2,
          "title": "反转整数",
          "slug": "反转整数"
        },
        {
          "level": 3,
          "title": "描述",
          "slug": "描述"
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "这题很简单,自己想一下！",
          "slug": "这题很简单-自己想一下！"
        },
        {
          "level": 3,
          "title": "这题很简单,自己想一下！",
          "slug": "这题很简单-自己想一下！-2"
        },
        {
          "level": 3,
          "title": "这题很简单,自己想一下！",
          "slug": "这题很简单-自己想一下！-3"
        },
        {
          "level": 3,
          "title": "解法：",
          "slug": "解法："
        },
        {
          "level": 3,
          "title": "提示:",
          "slug": "提示"
        },
        {
          "level": 3,
          "title": "code:",
          "slug": "code"
        },
        {
          "level": 3,
          "title": "转数组操作运行效率也更高点：",
          "slug": "转数组操作运行效率也更高点："
        },
        {
          "level": 3,
          "title": "github 算法仓库地址",
          "slug": "github-算法仓库地址"
        }
      ]
    },
    {
      "key": "v-6092b54907d8a",
      "path": "/algorithm/simple/%E5%90%88%E5%B9%B6%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84.html",
      "lastUpdated": 1537686805000,
      "title": "合并排序数组",
      "headers": [
        {
          "level": 2,
          "title": "合并排序数组",
          "slug": "合并排序数组"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "题目分析：",
          "slug": "题目分析："
        },
        {
          "level": 3,
          "title": "sort排序",
          "slug": "sort排序"
        },
        {
          "level": 3,
          "title": "先对比完一个数组：",
          "slug": "先对比完一个数组："
        }
      ]
    },
    {
      "key": "v-fe4aae72278d3",
      "path": "/algorithm/simple/%E5%9B%9E%E6%96%87.html",
      "lastUpdated": 1536303293000,
      "title": "删除一个字母的回文",
      "headers": [
        {
          "level": 2,
          "title": "删除一个字母的回文",
          "slug": "删除一个字母的回文"
        },
        {
          "level": 3,
          "title": "描述",
          "slug": "描述"
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "题目分析：",
          "slug": "题目分析："
        },
        {
          "level": 3,
          "title": "code:",
          "slug": "code"
        },
        {
          "level": 3,
          "title": "代码地址",
          "slug": "代码地址"
        },
        {
          "level": 3,
          "title": "github 算法仓库地址",
          "slug": "github-算法仓库地址"
        }
      ]
    },
    {
      "key": "v-cb51ebbb7d5a7",
      "path": "/algorithm/simple/%E5%A5%87%E5%81%B6%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84.html",
      "lastUpdated": 1541317766000,
      "title": "奇偶分割数组",
      "headers": [
        {
          "level": 2,
          "title": "奇偶分割数组",
          "slug": "奇偶分割数组"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "增加一下难度：",
          "slug": "增加一下难度："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-f641da948b945",
      "path": "/algorithm/simple/%E5%A7%93%E5%90%8D%E5%8E%BB%E9%87%8D.html",
      "lastUpdated": 1536303293000,
      "title": "姓名去重",
      "headers": [
        {
          "level": 2,
          "title": "姓名去重",
          "slug": "姓名去重"
        },
        {
          "level": 3,
          "title": "描述",
          "slug": "描述"
        },
        {
          "level": 3,
          "title": "说明：",
          "slug": "说明："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "这题很简单,自己想一下！",
          "slug": "这题很简单-自己想一下！"
        },
        {
          "level": 3,
          "title": "这题很简单,自己想一下！",
          "slug": "这题很简单-自己想一下！-2"
        },
        {
          "level": 3,
          "title": "这题很简单,自己想一下！",
          "slug": "这题很简单-自己想一下！-3"
        },
        {
          "level": 3,
          "title": "题目分析：",
          "slug": "题目分析："
        },
        {
          "level": 3,
          "title": "code:",
          "slug": "code"
        },
        {
          "level": 3,
          "title": "题目比较简单，就不放代码(上面就是)了。",
          "slug": "题目比较简单，就不放代码-上面就是-了。"
        },
        {
          "level": 3,
          "title": "github 算法仓库地址",
          "slug": "github-算法仓库地址"
        }
      ]
    },
    {
      "key": "v-939b7f2acb47c",
      "path": "/algorithm/simple/%E5%AD%90%E6%95%B0%E7%BB%84%E4%B9%8B%E5%92%8C.html",
      "lastUpdated": 1540382851000,
      "title": "找到和为零的子数组",
      "headers": [
        {
          "level": 2,
          "title": "找到和为零的子数组",
          "slug": "找到和为零的子数组"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-d72eec4a39d42",
      "path": "/algorithm/simple/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%8B%E7%BC%A9.html",
      "lastUpdated": 1540622197000,
      "title": "字符串压缩",
      "headers": [
        {
          "level": 2,
          "title": "字符串压缩",
          "slug": "字符串压缩"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-fa12ee626a44e",
      "path": "/algorithm/simple/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%86%E9%92%A5%E6%A0%BC%E5%BC%8F.html",
      "lastUpdated": 1540382851000,
      "title": "字符串密钥格式",
      "headers": [
        {
          "level": 2,
          "title": "字符串密钥格式",
          "slug": "字符串密钥格式"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        }
      ]
    },
    {
      "key": "v-d1967a5efd9e8",
      "path": "/algorithm/simple/%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5.html",
      "lastUpdated": 1537692909000,
      "title": "搜索二维矩阵",
      "headers": [
        {
          "level": 2,
          "title": "搜索二维矩阵",
          "slug": "搜索二维矩阵"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "题目分析：",
          "slug": "题目分析："
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        }
      ]
    },
    {
      "key": "v-0a5b484d03bc6",
      "path": "/algorithm/simple/%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84.html",
      "lastUpdated": 1540382851000,
      "title": "最大子数组",
      "headers": [
        {
          "level": 2,
          "title": "最大子数组",
          "slug": "最大子数组"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "最大和的数组：",
          "slug": "最大和的数组："
        }
      ]
    },
    {
      "key": "v-64465835dc7fb",
      "path": "/algorithm/simple/%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D.html",
      "lastUpdated": 1540382851000,
      "title": "数组中的最长单词",
      "headers": [
        {
          "level": 2,
          "title": "数组中的最长单词",
          "slug": "数组中的最长单词"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-908fe472f6fea",
      "path": "/algorithm/simple/%E6%A3%80%E6%B5%8B2%E7%9A%84%E5%B9%82%E6%AC%A1.html",
      "lastUpdated": 1540382851000,
      "title": "检测2的幂次",
      "headers": [
        {
          "level": 2,
          "title": "检测2的幂次",
          "slug": "检测2的幂次"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-d28616b3d13f6",
      "path": "/algorithm/simple/%E6%AF%94%E8%BE%83%E5%AD%97%E7%AC%A6%E4%B8%B2.html",
      "lastUpdated": 1540382851000,
      "title": "比较字符串",
      "headers": [
        {
          "level": 2,
          "title": "比较字符串",
          "slug": "比较字符串"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-bcc88258bedbf",
      "path": "/algorithm/simple/%E7%88%AC%E6%A5%BC%E6%A2%AF.html",
      "lastUpdated": 1541317661000,
      "title": "爬楼梯",
      "headers": [
        {
          "level": 2,
          "title": "爬楼梯",
          "slug": "爬楼梯"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "规律：",
          "slug": "规律："
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-bb1b18a3dda71",
      "path": "/algorithm/simple/%E7%88%AC%E6%A5%BC%E6%A2%AF2.html",
      "lastUpdated": 1541317661000,
      "title": "爬楼梯 2",
      "headers": [
        {
          "level": 2,
          "title": "爬楼梯 2",
          "slug": "爬楼梯-2"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "规律",
          "slug": "规律"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-d787b8b273ff8",
      "path": "/algorithm/simple/%E7%9B%B8%E4%BA%B2%E6%95%B0.html",
      "lastUpdated": 1541317661000,
      "title": "相亲数",
      "headers": [
        {
          "level": 2,
          "title": "相亲数",
          "slug": "相亲数"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-cde72ceb59b86",
      "path": "/algorithm/simple/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E5%AD%97%E7%AC%A6.html",
      "lastUpdated": 1540622197000,
      "title": "第一个只出现一次的字符",
      "headers": [
        {
          "level": 2,
          "title": "第一个只出现一次的字符",
          "slug": "第一个只出现一次的字符"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-4992b0a7f0adf",
      "path": "/algorithm/simple/%E8%90%BD%E5%8D%95%E7%9A%84%E6%95%B0.html",
      "lastUpdated": 1540382851000,
      "title": "落单的数",
      "headers": [
        {
          "level": 2,
          "title": "落单的数",
          "slug": "落单的数"
        },
        {
          "level": 3,
          "title": "难度：简单",
          "slug": "难度：简单"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    },
    {
      "key": "v-a10f8eca1c648",
      "path": "/algorithm/template.html",
      "lastUpdated": 1541922487000,
      "title": "标题",
      "headers": [
        {
          "level": 2,
          "title": "标题",
          "slug": "标题"
        },
        {
          "level": 3,
          "title": "难度：中等",
          "slug": "难度：中等"
        },
        {
          "level": 3,
          "title": "描述：",
          "slug": "描述："
        },
        {
          "level": 3,
          "title": "样例：",
          "slug": "样例："
        },
        {
          "level": 3,
          "title": "思路分析：",
          "slug": "思路分析："
        },
        {
          "level": 3,
          "title": "代码模板：",
          "slug": "代码模板："
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-2"
        },
        {
          "level": 3,
          "title": "想一想再看答案",
          "slug": "想一想再看答案-3"
        },
        {
          "level": 3,
          "title": "代码：",
          "slug": "代码："
        },
        {
          "level": 3,
          "title": "鼓励我一下：",
          "slug": "鼓励我一下："
        }
      ]
    }
  ],
  "themeConfig": {
    "repo": "OBKoro1/web_accumulate",
    "docsBranch": "master",
    "docsDir": "docs",
    "editLinks": true,
    "editLinkText": "帮助我改善这个页面",
    "serviceWorker": {
      "updatePopup": {
        "message": "就在刚刚,OBKoro1更新了内容",
        "buttonText": "点这里"
      }
    },
    "lastUpdated": "最后更新时间",
    "sidebarDepth": 3,
    "nav": [
      {
        "text": "前端积累",
        "link": "/accumulate/"
      },
      {
        "text": "前端算法",
        "link": "/algorithm/"
      },
      {
        "text": "关于",
        "link": "http://obkoro1.com/about/"
      },
      {
        "text": "其他仓库",
        "items": [
          {
            "text": "算法仓库",
            "link": "https://github.com/OBKoro1/Brush_algorithm"
          },
          {
            "text": "VsCode头部注释插件",
            "link": "https://github.com/OBKoro1/koro1FileHeader"
          },
          {
            "text": "浏览器桌面通知npm包",
            "link": "https://github.com/OBKoro1/notification-Koro1"
          }
        ]
      }
    ],
    "sidebar": {
      "/accumulate/": [
        "/accumulate/",
        {
          "title": "JS",
          "children": [
            "/accumulate/JS/webWorker上手",
            "/accumulate/JS/手摸手教你使用WebSocket",
            "/accumulate/JS/数组API解析合集",
            "/accumulate/JS/函数防抖和函数节流",
            "/accumulate/JS/Object.defineProperty",
            "/accumulate/JS/数组交集差集",
            "/accumulate/JS/数组完全乱序",
            "/accumulate/JS/cookie和storage的使用以及区别",
            "/accumulate/JS/随机数组成的数组"
          ]
        },
        {
          "title": "ES6",
          "children": [
            "/accumulate/ES6/",
            "/accumulate/ES6/js调用栈机制与ES6尾调用优化介绍",
            "/accumulate/ES6/论普通函数和箭头函数的区别以及箭头函数的注意事项和不适用场景",
            "/accumulate/ES6/let和const命令"
          ]
        },
        {
          "title": "Vue",
          "children": [
            "/accumulate/Vue/vue钩子函数",
            "/accumulate/Vue/vue小技巧3",
            "/accumulate/Vue/你或许不知道Vue的这些小技巧",
            "/accumulate/Vue/vue小技巧",
            "/accumulate/Vue/vuex三步",
            "/accumulate/Vue/vue定义全局函数",
            "/accumulate/Vue/极简双向绑定",
            "/accumulate/Vue/弹窗"
          ]
        },
        {
          "title": "功能",
          "children": [
            "/accumulate/effect/网页全屏",
            "/accumulate/effect/复制粘贴系列",
            "/accumulate/effect/树状数组结构转化",
            "/accumulate/effect/input的一些坑点分享",
            "/accumulate/effect/前端弹幕效果实现思路",
            "/accumulate/effect/正则表达式收集",
            "/accumulate/effect/判断用户浏览器",
            "/accumulate/effect/退出页面发送请求",
            "/accumulate/effect/时间差与时区转换",
            "/accumulate/effect/多维数组展开",
            "/accumulate/effect/浏览器桌面通知",
            "/accumulate/effect/滚动底部",
            "/accumulate/effect/字符串绑定点击事件",
            "/accumulate/effect/网页标题闪烁",
            "/accumulate/effect/显示隐藏密码"
          ]
        },
        {
          "title": "工具/浏览器/机制",
          "children": [
            "/accumulate/tool/浏览器重绘重排",
            "/accumulate/tool/忍者秘籍定时器机制",
            "/accumulate/tool/js事件循环机制",
            "/accumulate/tool/js垃圾回收机制",
            "/accumulate/tool/http缓存",
            "/accumulate/tool/koroFileHeader",
            "/accumulate/tool/Eslint自动修复格式错误",
            "/accumulate/tool/一份超级详细的Vue-cli3.0使用教程",
            "/accumulate/tool/浏览器自动识别数字成电话号码"
          ]
        },
        {
          "title": "CSS",
          "children": [
            "/accumulate/CSS/单行多行文本溢出",
            "/accumulate/CSS/CSS权重规则",
            "/accumulate/CSS/CSS概念-BFC深入浅出"
          ]
        },
        {
          "title": "其他",
          "children": [
            "/accumulate/amateur/VuePress文档",
            "/accumulate/amateur/高性能js",
            "/accumulate/amateur/推箱子"
          ]
        }
      ],
      "/algorithm/": [
        "/algorithm/",
        {
          "title": "入门",
          "children": [
            "/algorithm/induction/查找斐波纳契数列中第N个数",
            "/algorithm/induction/数组重复次数",
            "/algorithm/induction/水仙花数",
            "/algorithm/induction/反转3位整数"
          ]
        },
        {
          "title": "简单",
          "children": [
            "/algorithm/simple/奇偶分割数组",
            "/algorithm/simple/爬楼梯2",
            "/algorithm/simple/相亲数",
            "/algorithm/simple/丢失的数",
            "/algorithm/simple/判断字符串的循环移动",
            "/algorithm/simple/字符串压缩",
            "/algorithm/simple/第一个只出现一次的字符",
            "/algorithm/simple/删除元素",
            "/algorithm/simple/两个字符串是变位词",
            "/algorithm/simple/检测2的幂次",
            "/algorithm/simple/子数组之和",
            "/algorithm/simple/最长单词",
            "/algorithm/simple/爬楼梯",
            "/algorithm/simple/落单的数",
            "/algorithm/simple/中位数",
            "/algorithm/simple/两数之和",
            "/algorithm/simple/比较字符串",
            "/algorithm/simple/最大子数组",
            "/algorithm/simple/字符串密钥格式",
            "/algorithm/simple/搜索二维矩阵",
            "/algorithm/simple/合并排序数组",
            "/algorithm/simple/分解质因数",
            "/algorithm/simple/姓名去重",
            "/algorithm/simple/反转整数",
            "/algorithm/simple/回文"
          ]
        },
        {
          "title": "中等",
          "children": [
            "/algorithm/medium/第k大元素",
            "/algorithm/medium/丑数",
            "/algorithm/medium/统计数字"
          ]
        }
      ]
    }
  }
}