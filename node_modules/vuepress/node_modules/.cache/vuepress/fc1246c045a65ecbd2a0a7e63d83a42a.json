{"remainingRequest":"/Users/huangguobao/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/huangguobao/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/huangguobao/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/huangguobao/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/huangguobao/work/web_my/web_accumulate/docs/algorithm/induction/数组重复次数.md?vue&type=template&id=fe1d7b02&","dependencies":[{"path":"/Users/huangguobao/work/web_my/web_accumulate/docs/algorithm/induction/数组重复次数.md","mtime":1563605757816},{"path":"/Users/huangguobao/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1563603945530},{"path":"/Users/huangguobao/work/web_my/web_accumulate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1563603948643},{"path":"/Users/huangguobao/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1563603945530},{"path":"/Users/huangguobao/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1563603948643},{"path":"/Users/huangguobao/work/web_my/web_accumulate/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1563603948756}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h2 id=\\\"找出数组重复次数最多的元素\\\"><a href=\\\"#找出数组重复次数最多的元素\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 找出数组重复次数最多的元素</h2> <h3 id=\\\"描述：\\\"><a href=\\\"#描述：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 描述：</h3> <p>给定一个字符串数组, 每一个元素代表一个 IP 地址，找到出现频率最高的 IP。</p> <p>注：给定数据只有一个频率最高的 IP</p> <h3 id=\\\"样例：\\\"><a href=\\\"#样例：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 样例：</h3> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code>lines <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'192.168.1.1'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'192.118.2.1'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'192.168.1.1'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">'192.168.1.1'</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br></div></div><h3 id=\\\"题目分析：\\\"><a href=\\\"#题目分析：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 题目分析：</h3> <p>说了一堆，其实就是找出数组重复次数最多的元素</p> <p>思路：</p> <p>用对象来处理，将元素赋值到属性上，判断之前有没有这个属性。</p> <div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">数组去重</p> <p>虽然对象属性同样可以用来做数组去重，但是会将 number,NaN,undefined,null，变为字符串形式，因为对象的属性名就是一个字符串</p></div> <h3 id=\\\"代码：\\\"><a href=\\\"#代码：\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 代码：</h3> <div class=\\\"language-js line-numbers-mode\\\"><pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\">/**\\n * @param ipLines: ip  address\\n * @return: return highestFrequency ip address\\n */</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">highestFrequency</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>ipLines<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> <span class=\\\"token punctuation\\\">[</span>obj<span class=\\\"token punctuation\\\">,</span> max<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  ipLines<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">[</span>value<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// 已经有值了 就把值+1</span>\\n      obj<span class=\\\"token punctuation\\\">[</span>value<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">[</span>value<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">&gt;</span> max<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 判断重复次数有没有超过当前最高的</span>\\n        max <span class=\\\"token operator\\\">=</span> obj<span class=\\\"token punctuation\\\">[</span>value<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 重复次数</span>\\n        name <span class=\\\"token operator\\\">=</span> value<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 当前元素</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// 没有值 就初始化一个值</span>\\n      obj<span class=\\\"token punctuation\\\">[</span>value<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> name<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br><span class=\\\"line-number\\\">3</span><br><span class=\\\"line-number\\\">4</span><br><span class=\\\"line-number\\\">5</span><br><span class=\\\"line-number\\\">6</span><br><span class=\\\"line-number\\\">7</span><br><span class=\\\"line-number\\\">8</span><br><span class=\\\"line-number\\\">9</span><br><span class=\\\"line-number\\\">10</span><br><span class=\\\"line-number\\\">11</span><br><span class=\\\"line-number\\\">12</span><br><span class=\\\"line-number\\\">13</span><br><span class=\\\"line-number\\\">14</span><br><span class=\\\"line-number\\\">15</span><br><span class=\\\"line-number\\\">16</span><br><span class=\\\"line-number\\\">17</span><br><span class=\\\"line-number\\\">18</span><br><span class=\\\"line-number\\\">19</span><br><span class=\\\"line-number\\\">20</span><br><span class=\\\"line-number\\\">21</span><br></div></div> \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}