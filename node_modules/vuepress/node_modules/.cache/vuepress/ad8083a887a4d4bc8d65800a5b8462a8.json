{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/docs/.vuepress/components/comment/comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/.vuepress/components/comment/comment.vue","mtime":1561463216773},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/babel-loader/lib/index.js","mtime":1557296864421},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"comment\",\n  articleString: {\n    type: String,\n    required: true,\n    default: \"\"\n  },\n  methods: {\n    issueTitle() {\n      const title = location.pathname;\n      const pathArr = title.split(\"/\");\n      let res;\n      // \"js 调用栈机制与ES6尾调用优化介绍\"\n      // \"OBKoro1前端积累\"\n      let articleTile = this.$page.title;\n      if (pathArr[3]) {\n        // 文章页面创建issue\n        if (pathArr[2] === \"algorithm\") {\n          // 算法\n          let obj = {\n            induction: \"入门级-算法\",\n            simple: \"简单级-算法\",\n            medium: \"中等级-算法\"\n          };\n          res = `${articleTile} | ${obj[pathArr[3]]}`;\n        } else {\n          // 文章\n          res = `${articleTile} | ${pathArr[3]}`;\n        }\n      } else if (pathArr[2]) {\n        // 第二层主目录是否创建issue\n        let agreeArr = [\"accumulate\", \"algorithm\"];\n        if (agreeArr.includes(pathArr[2])) {\n          let obj = {\n            accumulate: \"OBKoro1博客\",\n            algorithm: \"前端算法\"\n          };\n          res = obj[pathArr[2]];\n        }\n      }\n      console.log(\"pathArr\", pathArr, res);\n      return [res, articleTile];\n    },\n    issueLabels() {\n      // 切割超过50个字符的标签 避免创建不了issue\n      let labels = this.$page.headers.map(item => {\n        if (item.title.length > 50) {\n          item.title = item.title.slice(0, 48);\n        }\n        return item.title;\n      });\n      // 过滤一些标签\n      labels = labels.filter(item => {\n        return ![\"鼓励我一下：\", \"小结\"].includes(item);\n      });\n      // 修改头部的meta\n      document.querySelector(\"meta[name=description]\").content = labels.join(\n        \",\"\n      );\n      return labels;\n    }\n  },\n  mounted() {\n    let body = document.querySelector(\".gitalk-container\");\n    let script = document.createElement(\"script\");\n    script.src = \"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\";\n    body.appendChild(script);\n    script.onload = () => {\n      const [title, articleTile] = this.issueTitle();\n      const labels = this.issueLabels();\n      // 创建issue TODO: false markdown 使用fs操作。\n      let body = `### [博客链接](${location.href})\\n${\n        this.$page.excerpt\n      }\\n [博客链接](${location.href})`;\n      console.log(\"body11\", this.articleString);\n      console.log(\"body\", body, this);\n      if (false) {\n        const commentConfig = {\n          clientID: \"8fbce2735aa4b865e9df\",\n          clientSecret: \"c2d2947de913af238dc5a22b1db8de0d9e834096\",\n          repo: \"web_accumulate\", // github项目名\n          owner: \"OBKoro1\",\n          // 这里接受一个数组，可以添加多个管理员\n          admin: [\"OBKoro1\"],\n          // id 需要用pathname否则将会重复创建。\n\n          // 但是如果你的 pathname 超过 50 个字符，GitHub 将不会成功创建 issue，此情况可以考虑给每个页面生成 hash 值的方法.\n          id: decodeURI(location.pathname).slice(0, 48), // issue title\n          title, // issue标题\n          body, // issue内容\n          labels: labels, // issue标签\n          distractionFreeMode: false\n        };\n        const gitalk = new Gitalk(commentConfig);\n        gitalk.render(\"gitalk-container\");\n        console.log(\"commentConfig\", commentConfig);\n      }\n    };\n  }\n};\n",null]}