{"remainingRequest":"/Users/koro/work/web_my/web_accumulate/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/koro/work/web_my/web_accumulate/docs/.vuepress/components/comment/comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/koro/work/web_my/web_accumulate/docs/.vuepress/components/comment/comment.vue","mtime":1564741082313},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/babel-loader/lib/index.js","mtime":1557296864421},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/cache-loader/dist/cjs.js","mtime":1557296864520},{"path":"/Users/koro/work/web_my/web_accumulate/node_modules/vue-loader/lib/index.js","mtime":1557296867190}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _slicedToArray from \"/Users/koro/work/web_my/web_accumulate/node_modules/@babel/runtime/helpers/builtin/es6/slicedToArray\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es7.array.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"comment\",\n  data: function data() {\n    return {\n      gitalk: null,\n      gitalkOBKoro1: {}\n    };\n  },\n  mounted: function mounted() {\n    this.pageInit();\n  },\n  methods: {\n    pageInit: function pageInit() {\n      console.log(\"this\", this);\n      var url = location.href;\n      var arr = [\"http://obkoro1.com/web_accumulate/about.html\", \"http://obkoro1.com/web_accumulate/\"]; // 过滤某些页面\n\n      if (!arr.includes(url)) {\n        this.initGitalk();\n        this.initIssue();\n      }\n    },\n    // 使用油候初始化issue\n    initIssue: function initIssue() {\n      var val = sessionStorage.pageArray;\n\n      if (!val) {\n        var pageArray = this.$site.pages;\n        pageArray = pageArray.map(function (item) {\n          return \"\".concat(location.origin, \"/web_accumulate\").concat(decodeURI(item.path));\n        });\n        sessionStorage.setItem(\"pageArray\", JSON.stringify(pageArray));\n      }\n    },\n    issueTitle: function issueTitle() {\n      var title = \"前端进阶积累\";\n      var pathArr = location.pathname.split(\"/\");\n      var res;\n      var articleTile = this.$page.title;\n\n      if (pathArr[3]) {\n        // 文章页面创建issue\n        if (pathArr[2] === \"algorithm\") {\n          // 算法\n          var obj = {\n            induction: \"入门级-算法\",\n            simple: \"简单级-算法\",\n            medium: \"中等级-算法\"\n          };\n          res = \"\".concat(articleTile, \" | \").concat(obj[pathArr[3]]);\n        } else if (pathArr[2] === \"codeBlack\") {\n          res = \"\".concat(articleTile, \" | \\u5F00\\u7BB1\\u5373\\u7528\\u7684\\u4EE3\\u7801\\u5757\");\n        } else {\n          // 文章\n          res = \"\".concat(articleTile, \" | \").concat(pathArr[3]);\n        }\n      } else if (pathArr[2]) {\n        // 第二层主目录是否创建issue\n        var agreeArr = [\"accumulate\", \"algorithm\", \"codeBlack\"];\n\n        if (agreeArr.includes(pathArr[2])) {\n          var _obj = {\n            accumulate: \"前端进阶积累\",\n            algorithm: \"前端算法\",\n            codeBlack: \"开箱即用的代码块\"\n          };\n          res = _obj[pathArr[2]];\n        }\n      }\n\n      return [res, articleTile];\n    },\n    issueLabels: function issueLabels() {\n      // 切割超过50个字符的标签 避免创建不了issue\n      var labels = this.$page.headers.map(function (item) {\n        if (item.title.length > 50) {\n          item.title = item.title.slice(0, 48);\n        }\n\n        return item.title;\n      }); // 过滤一些标签\n\n      labels = labels.filter(function (item) {\n        return ![\"鼓励我一下：\", \"小结\"].includes(item);\n      }); // 限制标签数\n\n      if (labels.length > 10) {\n        labels.length = 10;\n      } // 修改头部的meta\n\n\n      document.querySelector(\"meta[name=description]\").content = labels.join(\",\");\n      return labels;\n    },\n    initGitalk: function initGitalk() {\n      var _this = this;\n\n      var body = document.querySelector(\".gitalk-container\");\n      var script = document.createElement(\"script\");\n      script.src = \"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\";\n      body.appendChild(script);\n\n      script.onload = function () {\n        _this.gitalkOBKoro1 = sessionStorage.gitalkOBKoro1 && JSON.parse(sessionStorage.gitalkOBKoro1);\n\n        if (_this.gitalkOBKoro1 && _this.gitalkOBKoro1.href === location.href) {\n          _this.newGitalk(false);\n        } else {\n          _this.gitalkOBKoro1 = {\n            href: location.href,\n            num: 0\n          };\n\n          _this.newGitalk();\n        }\n      };\n    },\n    // 根据链接获取仓库\n    getRepo: function getRepo() {\n      var url = location.href;\n      var obj = {\n        \"/web_accumulate/algorithm/\": \"Brush_algorithm\",\n        // 算法仓库\n        \"/web_accumulate/accumulate/\": \"web_accumulate\",\n        // 博客仓库\n        \"/web_accumulate/codeBlack/\": \"codeBlack\"\n      };\n      var repoName = obj[\"/web_accumulate/accumulate/\"]; // 默认博客仓库\n\n      for (var key in obj) {\n        var index = url.indexOf(key);\n\n        if (index !== -1) {\n          repoName = obj[key];\n        }\n      }\n\n      return repoName;\n    },\n    newGitalk: function newGitalk() {\n      var createLabels = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var _this$issueTitle = this.issueTitle(),\n          _this$issueTitle2 = _slicedToArray(_this$issueTitle, 2),\n          title = _this$issueTitle2[0],\n          articleTile = _this$issueTitle2[1];\n\n      var labels = [articleTile];\n\n      if (createLabels) {\n        labels = this.issueLabels();\n      }\n\n      if (this.gitalkOBKoro1.num > 2) {\n        labels = [];\n      }\n\n      console.log(\"labels\", labels);\n      var article = this.$page.excerpt.replace(new RegExp('<div class=\"line-numbers-wrapper\">.*?<\\\\/div>', \"g\"), \"\");\n      var body = \"### [\\u535A\\u5BA2\\u94FE\\u63A5](\".concat(location.href, \")\\n\").concat(article, \"\\n [\\u535A\\u5BA2\\u94FE\\u63A5](\").concat(location.href, \")\");\n\n      if (title) {\n        var commentConfig = {\n          clientID: \"8fbce2735aa4b865e9df\",\n          clientSecret: \"c2d2947de913af238dc5a22b1db8de0d9e834096\",\n          repo: this.getRepo(),\n          // github项目名\n          owner: \"OBKoro1\",\n          // 这里接受一个数组，可以添加多个管理员\n          admin: [\"OBKoro1\"],\n          // id 需要用pathname否则将会重复创建。\n          // 但是如果你的 pathname 超过 50 个字符，GitHub 将不会成功创建 issue，此情况可以考虑给每个页面生成 hash 值的方法.\n          // id: decodeURI(location.pathname).slice(0, 48), // issue title\n          id: \"web \".concat(articleTile),\n          title: title,\n          // issue标题\n          body: body,\n          // issue内容\n          labels: labels,\n          // issue标签\n          distractionFreeMode: false\n        };\n        this.errCatch();\n        console.log(\"location\", location.href);\n\n        if (this.gitalk) {\n          // 更新配置并重新请求\n          this.gitalkOBKoro1.num++;\n          console.log(\"this.gitalkOBKoro1\", this.gitalkOBKoro1);\n          sessionStorage.setItem(\"gitalkOBKoro1\", JSON.stringify(this.gitalkOBKoro1));\n          debugger; // location.reload();\n        } else {\n          this.gitalk = new Gitalk(commentConfig);\n          this.gitalk.render(\"gitalk-container\");\n          sessionStorage.setItem(\"gitalkOBKoro1\", JSON.stringify(this.gitalkOBKoro1));\n        }\n      }\n    },\n    // 创建失败\n    errCatch: function errCatch() {\n      var log = console.log;\n      var self = this;\n\n      console.log = function (msg, data) {\n        // 拦截issue抛出的错误 刷新页面 labels改值\n        if (msg === \"err:\") {\n          if (data.config.baseURL === \"https://api.github.com\") {\n            self.newGitalk(false);\n          }\n        }\n\n        log.apply(this, Array.prototype.slice.call(arguments));\n      };\n    }\n  }\n};",{"version":3,"sources":["comment.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n * @Github: https://github.com/OBKoro1\n * @Author: OBKoro1\n * @Created_time: 2019-06-23 14:48:30\n * @LastEditors: OBKoro1\n * @LastEditTime: 2019-08-02 18:18:02\n * @Description: gitalk评论组件\n * 文章：https://juejin.im/post/5c9e30fb6fb9a05e1c4cecf6\n -->\n\n<template>\n  <div class=\"gitalk-container\">\n    <div id=\"gitalk-container\">\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"comment\",\n  data() {\n    return {\n      gitalk: null,\n      gitalkOBKoro1: {}\n    };\n  },\n  mounted() {\n    this.pageInit();\n  },\n  methods: {\n    pageInit() {\n      console.log(\"this\", this);\n      const url = location.href;\n      let arr = [\n        \"http://obkoro1.com/web_accumulate/about.html\",\n        \"http://obkoro1.com/web_accumulate/\"\n      ];\n      // 过滤某些页面\n      if (!arr.includes(url)) {\n        this.initGitalk();\n        this.initIssue();\n      }\n    },\n    // 使用油候初始化issue\n    initIssue() {\n      let val = sessionStorage.pageArray;\n      if (!val) {\n        let pageArray = this.$site.pages;\n        pageArray = pageArray.map(item => {\n          return `${location.origin}/web_accumulate${decodeURI(item.path)}`;\n        });\n        sessionStorage.setItem(\"pageArray\", JSON.stringify(pageArray));\n      }\n    },\n    issueTitle() {\n      const title = \"前端进阶积累\";\n      const pathArr = location.pathname.split(\"/\");\n      let res;\n      let articleTile = this.$page.title;\n      if (pathArr[3]) {\n        // 文章页面创建issue\n        if (pathArr[2] === \"algorithm\") {\n          // 算法\n          let obj = {\n            induction: \"入门级-算法\",\n            simple: \"简单级-算法\",\n            medium: \"中等级-算法\"\n          };\n          res = `${articleTile} | ${obj[pathArr[3]]}`;\n        } else if (pathArr[2] === \"codeBlack\") {\n          res = `${articleTile} | 开箱即用的代码块`;\n        } else {\n          // 文章\n          res = `${articleTile} | ${pathArr[3]}`;\n        }\n      } else if (pathArr[2]) {\n        // 第二层主目录是否创建issue\n        let agreeArr = [\"accumulate\", \"algorithm\", \"codeBlack\"];\n        if (agreeArr.includes(pathArr[2])) {\n          let obj = {\n            accumulate: \"前端进阶积累\",\n            algorithm: \"前端算法\",\n            codeBlack: \"开箱即用的代码块\"\n          };\n          res = obj[pathArr[2]];\n        }\n      }\n      return [res, articleTile];\n    },\n    issueLabels() {\n      // 切割超过50个字符的标签 避免创建不了issue\n      let labels = this.$page.headers.map(item => {\n        if (item.title.length > 50) {\n          item.title = item.title.slice(0, 48);\n        }\n        return item.title;\n      });\n      // 过滤一些标签\n      labels = labels.filter(item => {\n        return ![\"鼓励我一下：\", \"小结\"].includes(item);\n      });\n      // 限制标签数\n      if (labels.length > 10) {\n        labels.length = 10;\n      }\n      // 修改头部的meta\n      document.querySelector(\"meta[name=description]\").content = labels.join(\n        \",\"\n      );\n      return labels;\n    },\n    initGitalk() {\n      let body = document.querySelector(\".gitalk-container\");\n      let script = document.createElement(\"script\");\n      script.src = \"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\";\n      body.appendChild(script);\n      script.onload = () => {\n        this.gitalkOBKoro1 =\n          sessionStorage.gitalkOBKoro1 &&\n          JSON.parse(sessionStorage.gitalkOBKoro1);\n        if (this.gitalkOBKoro1 && this.gitalkOBKoro1.href === location.href) {\n          this.newGitalk(false);\n        } else {\n          this.gitalkOBKoro1 = {\n            href: location.href,\n            num: 0\n          };\n          this.newGitalk();\n        }\n      };\n    },\n    // 根据链接获取仓库\n    getRepo() {\n      const url = location.href;\n      const obj = {\n        \"/web_accumulate/algorithm/\": \"Brush_algorithm\", // 算法仓库\n        \"/web_accumulate/accumulate/\": \"web_accumulate\", // 博客仓库\n        \"/web_accumulate/codeBlack/\": \"codeBlack\"\n      };\n      let repoName = obj[\"/web_accumulate/accumulate/\"]; // 默认博客仓库\n      for (const key in obj) {\n        const index = url.indexOf(key);\n        if (index !== -1) {\n          repoName = obj[key];\n        }\n      }\n      return repoName;\n    },\n    newGitalk(createLabels = true) {\n      const [title, articleTile] = this.issueTitle();\n      let labels = [articleTile];\n      if (createLabels) {\n        labels = this.issueLabels();\n      }\n      if (this.gitalkOBKoro1.num > 2) {\n        labels = [];\n      }\n      console.log(\"labels\", labels);\n      let article = this.$page.excerpt.replace(\n        new RegExp('<div class=\"line-numbers-wrapper\">.*?<\\\\/div>', \"g\"),\n        \"\"\n      );\n      let body = `### [博客链接](${location.href})\\n${article}\\n [博客链接](${location.href})`;\n      if (title) {\n        const commentConfig = {\n          clientID: \"8fbce2735aa4b865e9df\",\n          clientSecret: \"c2d2947de913af238dc5a22b1db8de0d9e834096\",\n          repo: this.getRepo(), // github项目名\n          owner: \"OBKoro1\",\n          // 这里接受一个数组，可以添加多个管理员\n          admin: [\"OBKoro1\"],\n          // id 需要用pathname否则将会重复创建。\n\n          // 但是如果你的 pathname 超过 50 个字符，GitHub 将不会成功创建 issue，此情况可以考虑给每个页面生成 hash 值的方法.\n          // id: decodeURI(location.pathname).slice(0, 48), // issue title\n          id: `web ${articleTile}`,\n          title, // issue标题\n          body, // issue内容\n          labels: labels, // issue标签\n          distractionFreeMode: false\n        };\n        this.errCatch();\n        console.log(\"location\", location.href);\n        if (this.gitalk) {\n          // 更新配置并重新请求\n          this.gitalkOBKoro1.num++;\n          console.log(\"this.gitalkOBKoro1\", this.gitalkOBKoro1);\n          sessionStorage.setItem(\n            \"gitalkOBKoro1\",\n            JSON.stringify(this.gitalkOBKoro1)\n          );\n          debugger;\n          // location.reload();\n        } else {\n          this.gitalk = new Gitalk(commentConfig);\n          this.gitalk.render(\"gitalk-container\");\n          sessionStorage.setItem(\n            \"gitalkOBKoro1\",\n            JSON.stringify(this.gitalkOBKoro1)\n          );\n        }\n      }\n    },\n    // 创建失败\n    errCatch() {\n      var log = console.log;\n      let self = this;\n      console.log = function(msg, data) {\n        // 拦截issue抛出的错误 刷新页面 labels改值\n        if (msg === \"err:\") {\n          if (data.config.baseURL === \"https://api.github.com\") {\n            self.newGitalk(false);\n          }\n        }\n        log.apply(this, Array.prototype.slice.call(arguments));\n      };\n    }\n  }\n};\n</script>\n<style lang=\"stylus\" rel=\"stylesheet/stylus\">\n/* variables */\n$gt-color-main = #00adb5;\n$gt-color-sub = #a1a1a1;\n$gt-color-loader = #999999;\n$gt-color-error = #ff3860;\n$gt-color-hr = #E9E9E9;\n$gt-color-input-border = rgba(0, 0, 0, 0.1);\n$gt-color-input-bg = #f6f6f6;\n$gt-color-comment-bg = #f9f9f9;\n$gt-color-comment-adminbg = #f6f9fe;\n$gt-color-comment-txt = #222831;\n$gt-color-link-active = #222831;\n$gt-color-btn = #ffffff;\n$gt-color-popbg = #ffffff;\n$gt-size-base = 16px; // default font-size\n$gt-size-border-radius = 5px;\n$gt-breakpoint-mobile = 479px;\n$gt-mask-z-index = 9999;\n\n/* functions & mixins */\nclearfix() {\n  &:before, &:after {\n    content: ' ';\n    display: table;\n  }\n\n  &:after {\n    clear: both;\n  }\n}\n\nem($px, $base-size = $gt-size-base) {\n  u = unit($px);\n\n  if (u == 'px') {\n    unit(($px / $base-size), 'em');\n  } else {\n    unit($px, u);\n  }\n}\n\nmobile() {\n  @media (max-width: $gt-breakpoint-mobile) {\n    {block};\n  }\n}\n\n/* variables - calculated */\n$gt-size-loader-dot = em(6px);\n$gt-size-loader = em(28px);\n$gt-size-avatar = em(50px);\n$gt-size-avatar-mobi = em(32px);\n\n/* styles */\n.gt-container {\n  box-sizing: border-box;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  font-size: $gt-size-base;\n\n  // common\n  a {\n    color: $gt-color-main;\n\n    &:hover {\n      color: lighten($gt-color-main, 20%);\n      border-color: lighten($gt-color-main, 20%);\n    }\n\n    &.is--active {\n      color: $gt-color-link-active;\n      cursor: default !important;\n\n      &:hover {\n        color: $gt-color-link-active;\n      }\n    }\n  }\n\n  .hide {\n    display: none !important;\n  }\n\n  // icons\n  .gt-svg {\n    display: inline-block;\n    width: em(16px);\n    height: em(16px);\n    vertical-align: sub;\n\n    svg {\n      width: 100%;\n      height: 100%;\n      fill: $gt-color-main;\n    }\n  }\n\n  .gt-ico {\n    display: inline-block;\n\n    &-text {\n      margin-left: em(5px);\n    }\n\n    &-github {\n      .gt-svg {\n        width: 100%;\n        height: 100%;\n      }\n\n      svg {\n        fill: inherit;\n      }\n    }\n  }\n\n  /* loader */\n  .gt-spinner {\n    position: relative;\n\n    &::before {\n      content: '';\n      box-sizing: border-box;\n      position: absolute;\n      top: 3px;\n      width: em(12px);\n      height: em(12px);\n      margin-top: em(-3px);\n      margin-left: em(-6px);\n      border-radius: 50%;\n      border: 1px solid $gt-color-btn;\n      border-top-color: $gt-color-main;\n      animation: gt-kf-rotate 0.6s linear infinite;\n    }\n  }\n\n  .gt-loader {\n    position: relative;\n    border: 1px solid $gt-color-loader;\n    animation: ease gt-kf-rotate 1.5s infinite;\n    display: inline-block;\n    font-style: normal;\n    width: $gt-size-loader;\n    height: $gt-size-loader;\n    // font-size: $gt-size-loader\n    line-height: $gt-size-loader;\n    border-radius: 50%;\n\n    &:before {\n      content: '';\n      position: absolute;\n      display: block;\n      top: 0;\n      left: 50%;\n      margin-top: -($gt-size-loader-dot / 2);\n      margin-left: -($gt-size-loader-dot / 2);\n      width: $gt-size-loader-dot;\n      height: $gt-size-loader-dot;\n      background-color: $gt-color-loader;\n      border-radius: 50%;\n    }\n  }\n\n  // avatar\n  .gt-avatar {\n    display: inline-block;\n    width: $gt-size-avatar;\n    height: $gt-size-avatar;\n\n    +mobile() {\n      width: $gt-size-avatar-mobi;\n      height: $gt-size-avatar-mobi;\n    }\n\n    img {\n      width: 100%;\n      height: auto;\n      border-radius: 3px;\n    }\n\n    &-github {\n      width: $gt-size-avatar - em(2px);\n      height: $gt-size-avatar - em(2px);\n\n      +mobile() {\n        width: $gt-size-avatar-mobi - em(2px);\n        height: $gt-size-avatar-mobi - em(2px);\n      }\n    }\n  }\n\n  // button\n  .gt-btn {\n    padding: em(12px) em(20px);\n    display: inline-block;\n    line-height: 1;\n    text-decoration: none;\n    white-space: nowrap;\n    cursor: pointer;\n    border: 1px solid $gt-color-main;\n    border-radius: $gt-size-border-radius;\n    background-color: $gt-color-main;\n    color: $gt-color-btn;\n    outline: none;\n    font-size: em(12px);\n\n    &-text {\n      font-weight: 400;\n    }\n\n    &-loading {\n      position: relative;\n      margin-left: em(8px);\n      display: inline-block;\n      width: em(12px);\n      height: em(16px);\n      vertical-align: top;\n    }\n\n    &.is--disable {\n      cursor: not-allowed;\n      opacity: 0.5;\n    }\n\n    &-login {\n      margin-right: 0;\n    }\n\n    &-preview {\n      background-color: $gt-color-btn;\n      color: $gt-color-main;\n\n      &:hover {\n        background-color: darken($gt-color-btn, 5%);\n        border-color: lighten($gt-color-main, 20%);\n      }\n    }\n\n    &-public {\n      &:hover {\n        background-color: lighten($gt-color-main, 20%);\n        border-color: lighten($gt-color-main, 20%);\n      }\n    }\n\n    &-loadmore {\n      // loadmore\n    }\n  }\n\n  /* error */\n  .gt-error {\n    text-align: center;\n    margin: em(10px);\n    color: $gt-color-error;\n  }\n\n  /* initing */\n  .gt-initing {\n    padding: em(20px) 0;\n    text-align: center;\n\n    &-text {\n      margin: em(10px) auto;\n      font-size: 92%;\n    }\n  }\n\n  /* no int */\n  .gt-no-init {\n    padding: em(20px) 0;\n    text-align: center;\n  }\n\n  /* link */\n  .gt-link {\n    border-bottom: 1px dotted $gt-color-main;\n\n    &-counts, &-project {\n      text-decoration: none;\n    }\n  }\n\n  /* meta */\n  .gt-meta {\n    margin: em(20px) 0;\n    padding: em(16px) 0;\n    position: relative;\n    border-bottom: 1px solid $gt-color-hr;\n    font-size: em(16px);\n    position: relative;\n    z-index: 9;\n    clearfix();\n  }\n\n  .gt-counts {\n    margin: 0 em(10px) 0 0;\n  }\n\n  .gt-user {\n    float: right;\n    margin: 0;\n    font-size: 92%;\n\n    &-pic {\n      width: 16px;\n      height: 16px;\n      vertical-align: top;\n      margin-right: em(8px);\n    }\n\n    &-inner {\n      display: inline-block;\n      cursor: pointer;\n    }\n\n    .gt-ico {\n      margin: 0 0 0 em(5px);\n\n      svg {\n        fill: inherit;\n      }\n    }\n\n    .is--poping {\n      .gt-ico {\n        svg {\n          fill: $gt-color-main;\n        }\n      }\n    }\n  }\n\n  .gt-version {\n    color: $gt-color-sub;\n    margin-left: em(6px);\n  }\n\n  .gt-copyright {\n    margin: 0 em(15px) em(8px);\n    border-top: 1px solid $gt-color-hr;\n    padding-top: em(8px);\n  }\n\n  /* popup */\n  .gt-popup {\n    position: absolute;\n    right: 0;\n    top: em(38px);\n    background: $gt-color-popbg;\n    display: inline-block;\n    border: 1px solid $gt-color-hr;\n    padding: em(10px) 0;\n    font-size: em(14px);\n    letter-spacing: 0.5px;\n\n    .gt-action {\n      cursor: pointer;\n      display: block;\n      margin: em(8px) 0;\n      padding: 0 em(18px);\n      position: relative;\n      text-decoration: none;\n\n      &.is--active {\n        &:before {\n          content: '';\n          width: em(4px);\n          height: em(4px);\n          background: $gt-color-main;\n          position: absolute;\n          left: em(8px);\n          top: em(7px);\n        }\n      }\n    }\n  }\n\n  /* header */\n  .gt-header {\n    position: relative;\n    display: flex;\n\n    &-comment {\n      flex: 1;\n      margin-left: em(20px);\n\n      +mobile() {\n        margin-left: em(14px);\n      }\n    }\n\n    &-textarea {\n      padding: em(12px);\n      display: block;\n      box-sizing: border-box;\n      width: 100%;\n      min-height: em(82px);\n      max-height: em(240px);\n      border-radius: $gt-size-border-radius;\n      border: 1px solid $gt-color-input-border;\n      font-size: em(14px);\n      word-wrap: break-word;\n      resize: vertical;\n      background-color: $gt-color-input-bg;\n      outline: none;\n      transition: all 0.25s ease;\n\n      &:hover {\n        background-color: lighten($gt-color-input-bg, 50%);\n        // box-shadow: 0 em(10px) em(60px) 0 $gt-color-input-bg\n      }\n    }\n\n    &-preview {\n      padding: em(12px);\n      border-radius: $gt-size-border-radius;\n      border: 1px solid $gt-color-input-border;\n      background-color: $gt-color-input-bg;\n    }\n\n    &-controls {\n      position: relative;\n      margin: em(12px) 0 0;\n      clearfix();\n\n      +mobile() {\n        margin: 0;\n      }\n\n      &-tip {\n        font-size: em(14px);\n        color: $gt-color-main;\n        text-decoration: none;\n        vertical-align: sub;\n\n        +mobile() {\n          display: none;\n        }\n      }\n\n      .gt-btn {\n        float: right;\n        margin-left: em(20px);\n\n        +mobile() {\n          float: none;\n          width: 100%;\n          margin: em(12px) 0 0;\n        }\n      }\n    }\n  }\n\n  &:after {\n    content: '';\n    position: fixed;\n    bottom: 100%;\n    left: 0;\n    right: 0;\n    top: 0;\n    opacity: 0;\n  }\n\n  &.gt-input-focused {\n    position: relative;\n\n    &:after {\n      content: '';\n      position: fixed;\n      bottom: 0%;\n      left: 0;\n      right: 0;\n      top: 0;\n      background: #000;\n      opacity: 0.6;\n      transition: opacity 0.3s, bottom 0s;\n      z-index: $gt-mask-z-index;\n    }\n\n    .gt-header-comment {\n      z-index: $gt-mask-z-index + 1;\n    }\n  }\n\n  /* comments */\n  .gt-comments {\n    padding-top: em(20px);\n\n    &-null {\n      text-align: center;\n    }\n\n    &-controls {\n      margin: em(20px) 0;\n      text-align: center;\n    }\n  }\n\n  /* comment */\n  .gt-comment {\n    position: relative;\n    padding: em(10px) 0;\n    display: flex;\n\n    &-content {\n      flex: 1;\n      margin-left: em(20px);\n      padding: em(12px) em(16px);\n      background-color: $gt-color-comment-bg;\n      overflow: auto;\n      transition: all ease 0.25s;\n\n      &:hover {\n        box-shadow: 0 em(10px) em(60px) 0 darken($gt-color-comment-bg, 2%);\n      }\n\n      +mobile() {\n        margin-left: em(14px);\n        padding: em(10px) em(12px);\n      }\n    }\n\n    &-header {\n      margin-bottom: em(8px);\n      font-size: em(14px);\n      position: relative;\n    }\n\n    &-username {\n      font-weight: 500;\n      color: $gt-color-main;\n      text-decoration: none;\n\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n\n    &-text {\n      margin-left: em(8px);\n      color: $gt-color-sub;\n    }\n\n    &-date {\n      margin-left: em(8px);\n      color: $gt-color-sub;\n    }\n\n    &-like, &-edit, &-reply {\n      position: absolute;\n      height: em(22px);\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n\n    &-like {\n      top: 0;\n      right: em(32px);\n    }\n\n    &-edit, &-reply {\n      top: 0;\n      right: 0;\n    }\n\n    &-body {\n      color: $gt-color-comment-txt !important;\n    }\n\n    &-admin {\n      .gt-comment-content {\n        background-color: $gt-color-comment-adminbg;\n      }\n    }\n  }\n}\n\n@keyframes gt-kf-rotate {\n  0% {\n    transform: rotate(0);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>"],"sourceRoot":"docs/.vuepress/components/comment"}]}